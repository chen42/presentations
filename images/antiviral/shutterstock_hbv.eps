%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Hepatitis B Virus Scheme.eps
%%Creator: Adobe Illustrator(R) 15.1
%%For: OLGA
%%CreationDate: 1/26/2014
%%BoundingBox: 0 0 1000 1000
%%HiResBoundingBox: 0 0 1000 1000
%%CropBox: 0 0 1000 1000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.1.0 x39 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 17389 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFD2DFFA87DA8FF52A8FD0DFFA8A8FFFFA87DFD05FF
%7D7D7DA8FFFFFF7D7DFFA87D7DA8FD55FFF8A8FF277DFD0BFF7DFFA8FF7D
%A8FFA8FD05FF7D27FF277DFFFF5227FFFF27A8A8FD55FF527DFF27A8A87D
%527D27527DA8527DA8277D7DA852527D7DA852A8FFFFA852A8527DFFFFFF
%27A8A8A87D7D7D52527DA87DA87D52A8FD4BFF277D7D27A8527D7D5252A8
%277D7D27A852FF52A852FD047D277DFFFFA827A8277DFFFFFF7D277DA87D
%52A852FF27FF527D277DA8FD4BFF27A8FF27A827A8A87D52FF277D52527D
%52FFFD047DA852FF5252FFFFA852FF7D27FD04FF2752FFFD047DFF52A852
%7DA8277DFD4AFFA827A8A8527DA8277DA82752A87D5252A8527D52A87D52
%FD057DFFFF7D277D52A8FD04FF52A8FF7D527D52FF7D52527D527DA8FD53
%FFA827FD15FFA8FD68FF7D7DA8FD6BFFA8FD04FFA8FD11FFA8A8FD0CFFA8
%FFFFFFA8FFA8FFFFFFA8FD05FFA8A8FFFFA8FFFFFFA8FFFFFFA8FFFFFD04
%A8FD37FF7D277DA8A8A87D52A87DA87DA8A8FF7DFFFD04A8FFFF7D527DA8
%7DFD04A8FFA8A87DFFFF7D7DA852527D52A8FF527DFF7D7DFFA87D527D7D
%27A87DA827A8FFFF7D527D7D527D7D7DFD36FF527D52A8277D7D527D7D52
%7D527D527D7D527D5227A8FF52A8A87D527D7D7D52A87D527D52FFA87D52
%A87DFF7DFFFF7DA87D7D7D527D7DFF7D5252527D7D277D7DA852527DFF7D
%FFA87DFD36FF7D7D522752277D52A8527D7DA87D527D7D27FF52527DFFFD
%04527DA8527D527D527D7D52FFFF2752FF7DA852FFFF52FF527D527D277D
%7D52527D5252527D52A8A87D527DA87DFFA852FD36FFA87DA8A87DA8A8A8
%7DFFA8FFA8FFA87DA8FFFFFF7DFFFFFF7DA8A8FFFF7DA8FF7DA8527DA8FF
%FFFFA8FF7DA87DFFFF7D7DFF7DA87DA8A87DA8FFA8FF7DFFFFA8FFFFA8FF
%7DFFA8FF7DA8FD58FFA8FD0CFFA8A8FD17FFA8FDFCFFFDFCFFFD63FFA7C2
%A0C9FD51FFA8A8FD22FFCFFFCFFFA8FFA09292BB92A0FD04FFCFFD15FFA8
%A8A8FD05FFA8FD07FFA8FFA8FFA8FFFFFFA8FD1CFFA8FD047DA87DFD17FF
%CFCFFD06FFCFFFCFFFCF9998C3C2BB92CFFFFFCFFD16FF7D52FFFF7D7D7D
%527D7DA8FD047DA8A852A852527D7DA852A8A8A8FD19FFA87D7D527D2727
%A8FD15FF9A999299A1FFCACFA8CFCACFA8CF999292BB9299A7CFCACFA8FF
%CAFFCAFFA7C9A7FD0DFF527DFFA827527DFD055227527DA8A87D7D525227
%27FD04527DFD1AFF7DA8FFA8A87DFD15FFA09299C29299A8CFCACFA8CFCA
%CFC9C97599749FA7CFA7CFCACFCACFCFFFA09892BA99FD0CFFA87DFFA8A8
%A8FFA8A8A8527DA8A8FFA8FFA8FF7DFD04A8FF7D527DFD34FFA89899C299
%9299CFA7CFA7C299C9A7C9A7A7575D82CFA7C9A7C9A1CAA7CFA79992C2A0
%9299FD15FFA8FD0FFFA8FD20FF7DFD13FFCFFF99BA92BB98A7C9CFC9C9B4
%BBC1CEA7CEA67B51C9C9C9A7C9BBBBC2CFC9CF7BBBBBC299BBCFFD0FFF7D
%A8FD34FF7D7DFD0FFFCFFFCACFA8CA99747482A7C9A6C9A6BBB4C2A6C8A6
%C84A6EA0C9A6C9A0B492C2A7C9C9A67498929299FFCFFFCFFD0AFFA852A8
%FD36FF7DA8FD0FFFCACFCACFC9CFA65E57A6C9C9A6C9C1C1A0C8A6C8A06F
%6EC8A6C8A6C8BABBA6C9A6CE825E577BA0CFCACFCFFD09FFA87D7DFD39FF
%7D7DFD0BFFA8CFA8CFA7CFA7C9A6C9754A75C9A0A69FA6759F9FA69F9F4A
%6E9FA69FC89F9F9FC8A0A6A67B4A7CA7CFA7CAA7CFA8CFA8FD04FFA87D7D
%A8FD3BFF7DA8FD07FFA8FFFFFFCFCFC9C2BBC9A7C9C8C84A75A0C89FC8A5
%7575C89F9F746F4A999FC89FA051C8A6C8A6C86E6EA0CEC9CEA7CFCFCFCA
%FFFFFFA8A87DFD3FFF7DA8FD04FFA792986EA7A8CFA7C292BB99A7A0C8A6
%7544759F9F6F99747474996E994A6F697574995051759F9FC8744A75C8A0
%C9A6C9A0C9A7CFCACF7D7DA8FD41FF7DA8FFFFCA92BB99BA9FCFA7CFC9BB
%B4C1A6C89FC8756E6E9F6F6A699999C16E9FC19969BD6F9999996E99749F
%756E4A9FA6C8A6CEC1B499C9C9A152A199C2A7FD41FF7DA8FF99BBA0C292
%9FA7C9A6C9A0C19EA69F9F75754A99746F709B6E9FA09999C86E949B9399
%C874999F994569444A75C89FA6A6C1B4BB75767CC974929292A1FD41FF7D
%A8C298C2929981CEA7C9A6C8A67B75A6759998759FC875949B9A99C1759F
%9F7569946FC19F999FC86F9494936E999FC89FC89F994B7CA7CFA79999C3
%9ABBCFFD40FFA87D7CBB9298575D7CC9A0C89FA67B6F696F98C874999F9F
%69944B757558517C52524C5275756EC1996F94BD6E999899759F504B51A6
%A6C9A7A7509899C292CAFD41FFCA7CA1C9A682506FA0C89FC89F9969946F
%99C2C1749F75585259355959593560595F35595959517C6F946F99C2C874
%754A4B7BC8A6C8A6C97B5E74989299CAFD40FFA8CFA752A7CEA675446E75
%A574996E6F9A9B6E99745252593559355959605959596059593559355935
%594C7574C1754A4A756E999FA69FC8754A57827BA0A1FFA8FD3EFFCFFFCA
%CFA77CA6CEA69F4A6E6E999FC16F9494705259596059845984598484847D
%8484845984598459605960597C4A4B75C8996F699A9FC8756E4AA0A7CFCF
%CFCAFD26FFA8FFA8FD09FFA8FD0BFFCFCFA8CFA7C9A051A0C89F756E746E
%9FC29F4B7052593560596059FD07847D8484847D847D84345D5835052E51
%99746F949B6F754A4A4AA0A6C9A7C9A7CFA8FD25FF7DA8A8527D7D7D52FF
%FD067DA8A8527D7DFD05FFCFCFC2BBB4C9A0519FC874999F9F74C1995835
%605960598484847D76768484AFA8AF84A884A884A884572C2D2E60595958
%7669BD9A7574754A9FA6C8A6C9A7CFCACFCAFD24FF52A87D522752277DA8
%7D525252272752525227A8FD04FFA8CFA7C292B4BAC87B516F6F6EC1A099
%4B5835592E5959847D84776F456F6FA87D7D7DA8A8AEA8A884A833042D84
%595935592E70697599C274749FA69FC8A6C9A0C9A7CFA8FD24FF7DA852A8
%A8A87DFFA8A8A8FF7DA87DFFA8A8FD04FFCFFFCACFA7C2BBC175C8754570
%9475C175595959575758A884AFA876699B9B9A7670696F76FFA8A8A8FFA8
%5758AF84847D845960357698C89F99749F9FC8A6C9BABBC2CFCAFFCFFD2A
%FFA8FD0BFFA8A074A0A7CFA7C9A6C89F754A75454C9A9451583560585757
%8284A87DA876709AC3706F699A9470767045707DFF83A884A88484598459
%592E75987574C1989F9FA69FBA92C2A7CFA8FD23FFA8527DA8FD057D27A8
%7D7D7DA87D7D7DFFFFA092BB92A7C9CEA6C9A0C89F7574996F4B6F593560
%5984838257AF77706F70709470A170949BC4706F6F9A709AA1766F77A8AF
%84A884845960357698C8C299759F517BC1C1A0CFC9CFCAFD22FF7D525252
%27FD06527D52277D522752AFCA92BC999275A7A6C9A0A69F9F74C19F994B
%272E6059847DA884837D6F6F9A709AA1A2CAA16994709A45949BA16F4B45
%94697D7D77527D7D8459592E999999699445759FA6A6C9A6CFA79F92C2CF
%FD20FFA8FFA8A8A8FFA8A87DFFA8A8A8FFA8A8A8FFC3BBC2C2927B7BC9C8
%C8A5A0749999C8997C2E2E598484A8A8AFAFA86F9AA1C39AFFFFFFCFA89A
%C3CA766FC39A706F9B9B9B707669706FA884845960587569BD9A949FC8A6
%C8A6CEC9A692BB92C2FD2BFFA8FD06FFCA92BB929857574A75759F749999
%99747C34602E5283A884AF7D7670706F9A6FA1CFCFCACFCFCFCAFFA79A70
%A1A16F70C39A6F699A947076847D8459594B94949A6E759FC8A0C8A6A757
%9299C398CFFD2BFF7D7D7DFD04FFC99999A0AD7B6F446E4A7499C89F752E
%6059845952A8AF7D6F6F946F7670A1CFFFA8CAA7CFCFCFA7FD04CFFFA194
%70A177709BC4949B84A884845959706F749F999F9FC8A09F578298BB9ABB
%CAFD2CFFA8A87D7D7DA8CFCFA7C9A6C9A0754A6F456F989F755935845984
%5958A876459B9B94A1FFCFCA76FD04A1A77CA77CC9CACFA7CFA7CAA8CF70
%94709AA8A87D84595935586EC1A09F6E756E6E4450577B929292FD31FFA8
%7D7D7DC9C9CEA6C8A59F69949494755959FD0484FF7D5276949AC394CACF
%CFA1A1A7CAA77657A7A7CA82CFCACFCACFCFFFFFFF9B7070A1A8AF848459
%6058999F9F74754A6E4A9FA0C9A6A099C9FD33FFA7A1527C7CA6A6C89F6F
%94C38D763559598484A87670454B4B94709A7C837C7C7CA7A07C7CA17CA7
%A1A7A0CFA7CFC9CFA8FFCA7645704577A8A88484595A5275749F996E4AA6
%A6C9A6CFA7CFA8FD32FFCFCFCAC999A0517B759974996F945260598484AF
%A8706FBD704BA1CA82A7A7A7A1A77CA6A7CFC9FD04A1C9C9CFC9CFCACFCF
%CA6F9A9A9A70A884A88484595974C1C2C1749F9FC8A6C9A7CFCACFCFFD30
%FFA8CFA8C992B4BAC87B754A4A4A99515935847D8484A845949BC34B7DFD
%04A776FD04C9CEA7C9A7C9A7C9A7C9A7C9A7CFA7CFA17094A1709AA8A883
%84595935757499686F75A59FC8A6C9A7CFA8CFCAFD30FFCFCFC9BBB5BB9F
%7551997475C17C358484847D7776706F9B94C37D7CA1A17CCAC9CEC9CFC9
%CEC9CFC9CEC9CFC9CFA7A7C9CFCAFFA19A9A9AA1FFA8AF8484596052706F
%9B8E9A9FC8A6C9A6CFCACFCFFD30FFA8CFA7C9A0C2A0A67B756E99747552
%5959847D6F69946F7670A1CAFF4B27A1C9A7CEA7C9A7CEA7C9A7C9A7C9A7
%CEC9C97CC9A7CFA8FFA16F45707DAF84A87D843559699A9B946FA59FC8BA
%B4A0CFA8CFCAFD30FFCACFC9C9A6C9A6A6749F9F9F7559598484766F9B9B
%9AA1FFCFFFA1A17CCFC9CEC9CEC9CEA7CFA7CFA7CFA7CEA7CEC9A6A6CACA
%CFCA9B6F946F70A8AF8484846035766F936E7551759EBAB4C2A7CFCFFD30
%FFA8CFA7C9A6A6A0A69F9974C89F752E5A59844C6F94A170CACFCFA1A1A7
%A6A7CEA7C9A7C9A7A7A7A8FD05A7C9A7CEA67CA0CFC9CA4B949B9B69A8A8
%A87D8459595198999F6E757BA69FC1A6C9A7CFCAFD2EFFA09975CEC9C9A6
%C8A6A66F6F6F99525F598484A86F9470A1FFFFCFCAA7CA7CCEC9CEC9CFA7
%CFA7AEA8AEA7AEA7CFA7CFC9CFA682A7CFCA9B70C39A9AA8FF8382575F59
%7699C89F9F9FC8A6C9A7CEC9CFCFFD2EFFA192929274A7A6C89FA6756970
%9B69523560598484A8706F70A8CFCFA1A1A082A7CEA7C9A7A8A7A883A883
%A883A8A7A7A7CEC9CEA7827CCFA79B707076FF7D2C5782575A527574746E
%9F9FA6A0C9A7C9A7CFCFFD2DFFC292C299995D7B6E754A6F699A9B94525F
%598484AE7D70949A6FCACFCA7682A7CFC9CEA7C9A7AEA8A884A884A8A7AE
%A7CFA7CEC9CFC9A0A7FFA8764B7076A87D5833595A586E9F9F9975C8A6C8
%A6CEA7A092C3FD2DFF9A99A0BB6E5D506E4A4A4A6E6E936F583559598484
%77699BA19476CFCA7C76CFA7C9A7C89E9F7DA8838483A883A8A7A8A7C9A7
%C9A7C9A682CFA14594706F77AF8484596051989FC8987575A6A0A67C816E
%9892C9FD2CFFCA92C2929982C9A6C89F9974C19F9F5260598484AF7D7094
%9B70A1CFA77CA1A1CFC9CFC17475CEA8A884AF84A8A7AEA7CFA7CFC9CFC9
%CA82FF76949BC36FA1AEA8848459596F996F754A6F4A6E4A5E7BBBBCC2C2
%FD2DFFC39299A7C9A6C9A0C875999FC8987C3558265858A870706F70A8FF
%7CA7A7A1A7CEA775207CA7A8848483A883A8A7A8A7C9A7CEC9C97CA7CFA1
%699B9A947DAF8484596052697094694A4A754A6E577B92C299C2FD2EFFCF
%CACFC9C9A6C89F9F749974755260335D57577DFF7670709BA8A7A7A7A0C9
%7C7C7CC89FA7A8AEA8A883AEA7A8A7CFC9CEC9CF7CA7CACFCFCA709470A8
%A8A88484595369BD9B9475A59FC8A6A7579899BAA1FD2EFFCACFA7C9A7A7
%9FC89F74749F9875355957827DAEA8706F9B709B827CA176517CA7CEFD04
%A7999F7DA883A8A7A7A7C9C9C957A6C9CFA8CFCF7645704B7D8484595952
%FD046F9F9FA6A0C9A7A775989AFD30FFCACFC9C2C1C89F7B74C1C8C17559
%598484AFA8A8699BA1A170FF7C514BC9CECEC9CFA7CFA0C19FC8A7CFA7CF
%A7CFC9CE7CA7C9CFCAFFFFA86F9B9A9476AE8484597598C198999FC8A6C9
%A7CEC9CFCAFD30FFCACFA7C2B4B4BA7B51756E936F702E60598484AEA870
%699B709A7C7D76A07CA7C9C9A7CEA7A698C8A7A7A7CAA7C9A7CEA6A0A7CF
%C9CFCAFFA1709BC36F7683845959519FC2C2749F9FA6A6C9A7C9A7FFCFFD
%30FFCFCFA0BBB5C2A6C87570949B8D5335FD0484FFA1766F6F4BA7CFCAA7
%A77CCEC9CEA7CFA7C29FC9A7CFA7CEC9CEC9A77CCFC9CFCAA17076709A94
%947D8459605975749975757BC8A6C8A0CFC9CFCAFD30FFA8CFA7C9A0C9A6
%A69F99699B9A94525959847DA884FF7D214570A1CFA1A1A7A67CCEA7C9A7
%C9A7C9A7C9A7C9A7C9A7C9A7A7C9CFA89B6970697076767D847D60357698
%9F99754A5150C1B4BBA6CFA8CFA8FD30FFCFCFC9CFA7C9A6C89F996F9974
%7559605F8484AF7D4B6FC39B94A8CFA1A7A1A7C9C9A1CFC9CEC9CFC9CEC9
%CFC9CFC9CEA7CFCFFF709A277070A8A8AF8484596052999FC8999F9FA6C1
%B499C9CACFCFFD30FFCAFFCACAA7C9A6A69FA674989FC298583584847D52
%7D6F949AA16FA8CFCAA1A17CA17CA176C9C9C9A6C9A7CEA7CFA7A77CA7CA
%A17D76949B4B4B7DAF848459602E70696F74999FA69FC899C2A7CFCAFD32
%FFCFCFCACFA7CEC8A6747599C89F995260595252A8A8A16994709BCFFFCA
%CFCACA7CC9A7A79BCE82827C7C82C9A7CAA7A7CA9B69704B949494767D59
%A88484595269BD946F75A69FC8A6CEC9CFCAFD33FFA775A082A77B754A4A
%44746E747475272E598484A8847D6F6F76FFCFCFA8CFCAA77CA7A07C57A7
%A7C9A1A67C7C7CA7A7A7699A947070A8A1AF84592E5959594B6F94BD6975
%9FC8A0A6A6C9A7CFA8FD32FF98BA927B5D7B446F749F74999FA04A525984
%838484AFA870709470FFCFCACAFFCAA782A782CFCACFC9CFCFCFA7CFCFFF
%A1949BC3709BAFFFA8AE84842E35519974996F6F4A9FA6C9C9CFC9CFCFFD
%32FFA89299BB927B579FA0C89F9F6E754A754B59358459848477699B9B94
%769B697076CFCACFCACFA7CFC9CFA7CFCACFCAA16F766F9A706F7DFFA8A8
%838459602E4B74C89F744A4A446F75A0827C74A0CFFD32FF92C2C2BB74A7
%C9C9C8A651756F9370947059598484A876709AC37070709B9470A1A1709A
%A7FD05CFCACFCFA169947070769BA1FFA8AE84845984597C6E4B519F989F
%7B754A4A57816EBB92CAFD32FFC292C2929FA7C9A07C519F9F6F6AC3946F
%52595984837D457069706F94A19B6F706F9A6976A7A176A1CACFCFFF7094
%9B9B69A8AEAFA8A88384595935586E9F986E26759FC8A6A0515D749899BB
%A1FD33FFC298C2C9CF7C7C7CC99F7B4B94949974995260598484A87677A8
%A16F9B70706F9BA1BD70766F946FA1FFCAA19B94C39A70A1A8A8AF84A884
%8459594C999FC8999F75759FC9C9CE5D9999C999CAFD34FFCFCFCA527CA0
%C2C17B509F756E98C899752E5A5984838484AE84776F707D766F9B70706F
%9B9B9A707669706F706F9477AE2D588384598459594594699999999FC87B
%7551A7C9A76E9892C2FD36FF7D52A8CFC1B4BAC1C89F9F74C19F99747558
%60598483A884A8A8AF84FFA1706F7076949AA170706F9B9B9476A8A1AFA8
%7C578259845959526F94BD6F754A7B9FC8A6A051A1CAA698C2CAFD34FF7D
%7D7DCFCACF99BB92C8A0A69F9F747474C198522E595984598484A8522D84
%AFA8A8A8FF7670697070709AA16F76A8A884A85833575F35596E986E9494
%94759F507BC1C1A6C9767CA7FD2AFF7DA8A8FFA8FD07FF7DA8FFFFCFFFCA
%CFC2C9A6C8A0C89F756EC2C8996970536059848484525757A8A8AFA8AFA8
%FF7DA1A8A8709470947DAF84A88484585F595951999FC874946F9F9FC8C1
%BAB4C9CECFA77D7DFD28FF7DA8FD0552FD04FFA87DA8FD04FFA8CFA7CFA7
%C9A6A69F9F4A74989969948D7652593560592C5782838484A884A884AFA8
%A884A8767677A884845984596035596E986E9FC29F749F9FA6A0C8B4BBA0
%CFA8CFCAA852A8FD26FFA8527DA8A8527DFD0CFFCACFC9CFA7C9C8A04A6E
%6E9969949B9A6E9975593560585E58FD0484A884A884A884A884A8848483
%845984596059764B99C1C16E9F74759FC8A6C8A6C9C9CFA7CFCFFFFFFF7D
%7DFD37FFCFCFA8CFA7C9A6A04A4A74A69F6F69946E9F9F994A7534603559
%5984598459847D8459847D8459845960596035592E7069946EC19F994A4A
%44759FC8A6C9A7CFA7CFA8FD05FF7D7D7DFD1EFFA8FFFFA8A8FFA8FFA8FF
%FFFFA8FD0DFFA7A67C82576E75C9A6C89FA06F99C2C8749F98764C593560
%59605984598459845984598459605960595974996F702194749F99A0756E
%4A9FA6C9C9CFCACFCFFD08FFA87DFD1CFF7D52277D527D527D527D525252
%7D277D525227FD07FFA8996E98745E57C9A6C89FA69F51749F6E99C29F69
%8E6F525159355935603559356059593559525951996E999F9F694B699975
%9F9FC89F4A447B82A7A7CFCAFFCFFD08FFA852A8FD1AFFA8FD067DA8A8A8
%7D7DA87D52FD047DFD07FFCA92BB6E9274ADC9C9A6C9A675519F757599C8
%6F949A947499757575585277597C5259757C4B9469999F9F74C89F99694B
%75C89FC8A0CE9F5157817499A7FD28FF7DA8FFFFFFA8A8FFA8FFFFFFA8FF
%A8FFA8FFA8FD07FFA89992276E98A0CEA6C9A0C17AA09F9F75996E6F949B
%6E9F9F9974C16F69696F74996E99986F70946EC19F99749F749F26519FC8
%A0A6A0C9577B6EBB9299AEFD06FFA87DFD07FFA8FFFFFFA8FFFFFFA8FD2A
%FFA16E99BB92CFC9CFA6BBB4C1A6C8A5C87B6E6F946F999FC874C2C89994
%BD6FC19F999FC86F9B9B9398C26E7599A0A57B4AC8A6C9A6CEC98274BBC2
%C29AFD07FF7DFFFD047D52FFA87D7D7D52FD077DA8FD27FF7D7DC299C9A8
%CFA7C992BB99A7A0C8A59F446E759F7499747499C16F9A9A939FC26E9F9F
%7569946F756E6E74A59FC89F75BABBA0C9A7CF7C9292C299CAFD06FFA87D
%7D7D527D7D52A8A827527D7D7DFD05527D7DFD26FF7DA8FD05FFCACFC9C9
%A0C9A7C9A6C9754A75C89F9F9975759974756A946E9F9975749F75996F9F
%9F754475A6C8A0CE75B4B4C9C9CFCACE98BA98C9FD08FFA8A8A8FFFFFFA8
%FFFFA8A8FFFFFFA852A8FFA8FD27FF7D7DFD05FFCACFA8CFA7CFA7C9A6C9
%A06E4AA69FA69F9F4A9F9F9F75754A4A6E9F759F50759FA59FC89F6E4AFD
%04A6A06EC2A7CFA7CFA8CFA7FD0FFFA8FF7DA8A8FFA8A8FFFFA8FD29FF7D
%7DFD07FFCFFFCFCFCACFC9CFA77C4A9FA6C9A6C89F7B9FC89FC89F744AA0
%9FC89FA051C89FC8A6C8756E75C9A7CEC97CA7CFCACFCFFD12FF7D7D7D52
%7D7DA827A87DA8FD28FF7D7DFD09FFCAFFCACFA7CF8282575D7CC9A6C9A6
%C1C0C8A0A69FC84A4A9FC89FA69F9F9FA6A0C8A6A04A5782C9A7CF7C7DCA
%CFCAFFCFFD11FF7DA8527D527D527D27527DFD27FFA87DFD0DFFCFFF7C75
%989956A7C9C9A7C268B4A0C9A6C8A6754AC8A6C8A6C8BABBA6C9A6C9A65E
%5D817BC9CACF7CFFCFFD17FFA8FFA8FFFFFF52A8FD26FFA852FD0DFFCFFF
%A89992BB929275CFA7C9A0206EC8A6C9A6A64A6EA0C9A0C999B492C8A7C9
%A7A75798929299CFCF7DA7FD46FF7DFD11FF99BAC2C999BBCACFC9CF7CC9
%A7CEC9CF828257A7C9CEC9C9C1C9C9CFC9CF7C9892C2BBBBCAFFA87DFD44
%FFA852FD13FF99BB9999A0FFCACFA77DA7CAA7CFA781577B57A7A7CFA7CF
%A7CFA7CFA89F92BBA0BBA0FFFFFF7DFD44FF52FD15FFC9C9CAFFCFFFCFCA
%7CFFCACFA88274BA929899CFCACFCACFCACFCFFFA79998BBA0FD04FFA87D
%FD30FFA8FD0FFFA8FFA8FD0DFFA8FD0DFFA8FFA77DCFCFCACF6E9299C292
%99A8CFA8CFA8CFA8FFCAFFA8CACAFD05FFA87DFD30FF7DA8FF7DA87DA8A8
%7DA8FF7DA8A8A87D527DA87DA87DFFA87D7DA87D7D52A87DA87DA8FD0DFF
%A8A7FD04FFC292BB99BBC3FFCFFD11FF7DA8FD2FFF7DA85227527D525227
%A8A852527D277D7D52277D7D52A8A85227527DFD06527DFD0DFF7DA8FD05
%FFC9A0C2A1FD15FF7DFD30FF7DA87DFFA8527DA8A8FF7DA87DA8FFFF7DA8
%7DA87DFFA87DA8FF7DA8A8A87DFFA8FD0EFFA8A8FD11FF7DFD06FFA8FD07
%FFA8FD33FFA8FD08FFA8A8FD1FFF7DFD11FF7D527D7D52A87D7D52FF7D7D
%A8A8525252FD057DFFA8527D7D7D52FD067DFD27FFA87D7D527D7DA8527D
%A87DFD19FFA8FD11FFA852527D7D5252527DFFA8277D527D7D7D27527D52
%52FF7D5227A852527DFD0452A8FD27FF7D7D527D525227FD0452FD19FF7D
%FD11FFA8A8A8FFA8A87DA8A8FFFD05A8FFFD06A8FF7D7DFFFD07A8FFA8FD
%2AFF7DA87DA8FFFF5252FD18FFA87DFD20FFA8FFFFFFA8FD40FFA8FD18FF
%A87DFD1DFF7D7D2752527D7D527D7D7DFD75FFA87D52527D27FD04527DFD
%75FFA8FFFD04A87DFFA85252FD45FFA8A8FFFFFFA8A8FD0CFF7DFD0CFFA8
%FFFFA8FD15FFA8FD46FF2752527D7D7D527DA87D527DA8A8527DA87D5252
%527D7DA852A8A8527D7D527D527D527D527DA8FD59FF7D7D7D5252527D52
%7D52A87DA8A852527D52A87D52527D7D52A8FF52527D7D527D52527DA87D
%FD5CFFA8FFA8A8A8FFA8FFA8FFFFFFA8FFA8FFFFFFA8FFA8FFA8FFA87DFF
%FFA8FFA8A8A8FFA8FD6AFFA8A8A8FFFFFFA8FD77FFA852522752527D5252
%7D7DA8FD74FFA8A8FD0452277D525252FD78FFA8FFA8A8A8FF7D52A8FDFC
%FFFDFCFFFDFCFFFD4EFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2014-01-26T22:28:53+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-01-26T22:28:53+07:00</xmp:ModifyDate>
         <xmp:CreateDate>2014-01-26T22:28:52+07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5.1</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq8r/Nu6uLHzz+X80d1qcdvd31xb39lp9zdotxFHbPMitbwSIrkSAGvGpGxqNsVSmw8422&#xA;mfmV5813UZ9YXRdD0qyvY9Knmu+KyT+qJfSspZBFykKKE+EAdqb4qnF9+d8tlaXk03le+eS1urG3&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:6C65292E9B86E3118643D3ACB88087B3</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:6C65292E9B86E3118643D3ACB88087B3</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b5745f5c-ba4f-40e9-9e97-88de1274cf6c</stRef:instanceID>
            <stRef:documentID>xmp.did:654DE2B7F17DE31189D1A75203D099B7</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E33EFDC00B6BE31189B6A0FAB9EBEFD9</stEvt:instanceID>
                  <stEvt:when>2013-12-22T20:19:57+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E53EFDC00B6BE31189B6A0FAB9EBEFD9</stEvt:instanceID>
                  <stEvt:when>2013-12-22T20:23:58+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E73EFDC00B6BE31189B6A0FAB9EBEFD9</stEvt:instanceID>
                  <stEvt:when>2013-12-22T20:30:08+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:654DE2B7F17DE31189D1A75203D099B7</stEvt:instanceID>
                  <stEvt:when>2014-01-15T21:31:27+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6C65292E9B86E3118643D3ACB88087B3</stEvt:instanceID>
                  <stEvt:when>2014-01-26T22:28:53+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1000.000000</stDim:w>
            <stDim:h>1000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1000 li
1000 1000 li
1000 0 li
cp
clp
[1 0 0 1 0 0 ]ct
1000 1000 mo
0 1000 li
0 0 li
1000 0 li
1000 1000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
824.958 499.999 mo
824.958 679.466 679.468 824.96 499.998 824.96 cv
320.528 824.96 175.038 679.466 175.038 499.999 cv
175.038 320.529 320.528 175.038 499.998 175.038 cv
679.468 175.038 824.958 320.529 824.958 499.999 cv
cp
level3{
gsave
clp
[324.96 0 0 324.96 499.998 500 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.619608 .811765 .811765 ]
/C1 [.952941 .858824 .611765 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.952941 .858824 .611765 ]
/C1 [.980392 .945098 .921569 ]
/N 1.5776 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.980392 .945098 .921569 ]
/C1 [.329412 .631373 .631373 ]
/N 1.51753 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.529412 .235294 .0313726 ]
/C1 [.329412 .631373 .631373 ]
/N 1.11054 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.85098 .701961 .282353 ]
/C1 [.529412 .235294 .0313726 ]
/N 1.35692 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.85098 .701961 .282353 ]
/C1 [1 1 1 ]
/N 1 
>>
]
/Bounds [.193333 .406667 .62 .713333 .783333 ]
/Encode [0 1 0 1 0 1 1 0 1 0 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[324.96 0 0 324.96 499.998 500 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~StD^OUo()jX0&S0ZF%'L\\#Mg^r"".a2lEIcHjneeCN:+gYLcFioK7bl0Ia)nFH2BoCMSFoCMSFoCMSF
oCMVHo^qeJo^qeKp%A"Np%A%Pp@e4Rp\4FVp\4IXq"XXZq>'j^q>'g\p@\(KnaGl2l0%0fi835@f$i!j
b/_H:^:Le\YcXn$U7Rg>P)bESJpr#hEG]E#?s?]3='8a6?t*YZBkqR)EccJLH@10lJqSl8O-Q3-VQ6u1
]>);*bg4bhf\,!4gYCT?hVR/Ji8N\Tj5f:_k3(pkl07L!lg4$+mdKW6naZ2Ao^qhMp@n@Wq>0sbr;?Nm
~>
<~cd0q`cd:%cd*^7gdF-IkdaQ[oe'umseCE+"e^i=&f%8O*f@S[-f\"m1g"G*5g=k<9gY:K;gY:N=gt^`A
h;7#FhV[5Ki8ESQio8tXj5f:_jlY^gkNM-ol0@R"m-O-,mdKW6nF5r:n*]W2m-F!&l0.9kjQ#7Yhqm2D
g=Y$-eC)^ic-+8N`l,d2^V.7i\$`QIYH=k)VPKrYS!K1rLkC2'G&hG6ARJbF<)?7Z6pWt#85NGtBlSEK
LQ7UfTV\ZkZ*UjH\%0)^]tV7t_SjF5aN;TKc-Obae'uq"f\5*8hV[8Nj5f@cl0@U%mdK]:o_%qQq>1$f
~>
<~ccs\Wb/q`F`l5m6_SO%&^:h1k]",>[[^EKKZE^X;Y,n\(WMl_lV50l\TqJ$LSXc4?S=Q4BStD[LTq\<X
V5C/iWiN5(YHY==[C3TU]=kqo_SjF6aihrTdF6Xtg"Y??iT0.blK[["l07EpkN:mej5T%Uhqm2EgY(62
e^W'qd*BnZb/hWB_ns4']t:ha[C!6DY,nY%VPKrYQ]R&UHZa4=?s-E%7R&mg/1)JX'b:WX%MKWu+=&?d
0Jk^M5!VJ(7nHBN;c[(-?t3haD/jZAH[^O!Ll7:VQ'e)6U8=ijYHt[J]thP*b0A;_f@o*?jQGjsnb)\S
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
464.718 223.319 mo
463.684 217.446 458.372 213.472 452.839 214.443 cv
447.318 215.412 443.665 220.958 444.7 226.835 cv
445.122 229.244 446.424 231.853 448.182 233.5 cv
450.146 235.343 451.544 236.896 452.735 239.444 cv
454.605 243.431 455.732 247.759 456.161 252.148 cv
456.392 254.518 456.521 256.899 456.533 259.276 cv
456.548 261.3 456.059 263.656 456.412 265.645 cv
456.945 268.676 459.693 270.735 462.56 270.232 cv
465.423 269.727 467.308 266.86 466.775 263.824 cv
466.526 262.415 465.617 261.033 465.073 259.711 cv
464.404 258.085 463.778 256.435 463.214 254.763 cv
462.092 251.409 461.209 247.938 460.9 244.397 cv
460.633 241.276 460.665 237.845 461.52 234.84 cv
461.815 233.803 462.376 232.902 462.827 231.946 cv
463.976 229.501 465.206 226.11 464.718 223.319 cv
cp
level3{
gsave
clp
[21.3206 0 0 21.3206 453.958 221.459 ]ct
/1 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.980392 .854902 .8 ]
/C1 [.980392 .854902 .8 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.917647 .419608 .2 ]
/C1 [.980392 .854902 .8 ]
/N 1.5015 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.917647 .419608 .2 ]
/C1 [1 .156863 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .156863 0 ]
/C1 [1 .74902 .156863 ]
/N 1.55314 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .74902 .156863 ]
/C1 [.380392 .309804 .137255 ]
/N 4.97729 
>>
]
/Bounds [.00666667 .16 .406061 .769697 ]
/Encode [0 1 1 0 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[21.3206 0 0 21.3206 453.958 221.459 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~qYL$`q"XUWp@\+No^h\Fo'u8>nF,i6mdBK0mHj3+lg*m%lK[["lK[["lg*m'm-O-,mI'E1n*f`7nF5u<
nac8AoCMSGo^qhLp%J+Qp\4FWq"X[\q>0saqtp9gr;?NlrVlfqs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W)trr2orrr2orrr2orrr2orrr2oqrVcZlqtp6cq"OLSoC;;:lKI?ghV-Q.bf7H/ZDsXeO+hjr
~>
<~g=k3/d*0SL^q@1aZ)t%'US"'EQBRDiMMHn;J:2ciGBItHDf0E.CMIQsB4b^c@q&kS?X@#C>?P'0<`N*t
;Gg7d:/+DT8Ou?@779L05sRXu4Zkee3&``Q1c$mA0J>%1/1W2!-n$Jl.4H_r.kE5'/h\n40etOA2)dKT
3]fGf5<qP&6q0[<8k_rT:f:4l='/X2?=.,NAS5[kCi434FEVnTI"$TtKSG>ANK93dQC+,3T:r'XW2m&)
ZF%*O]Y;+o^:q=q^:q=q^:q=q^:q=q^:q=q]tM+m]Y(kg]",>[[^EKJYcb(-Vkp)YR[0+rLkC,!E+iW]
~>
<~bfn5J^:CSQW2#rOPE(NSJ9uK\DJEcm?<UB.:J=>L6U3gt3B&iQ1GU^?0J>%2/M&D%.Ocbn-71#a,9e9S
+<MXF*?6":)&X8-()7Pu'+tlg&.]6[$k*LN#m^eA"pG,4!s/K'zz!!**$!<E6'!WiH+!s8Z/"9er4"pP
8:#7(S@#mgnF$4@4M$k*RS%Ls![&.fEc&eYik'GM8s()@]'(`=20)B0Y9*??1C+!;[L+sJ6W,UF``-RU
8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-71&d-71&c,pai_,U=TZ~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
361.522 257.882 mo
358.32 252.849 351.892 251.211 347.15 254.228 cv
342.422 257.234 341.169 263.757 344.375 268.791 cv
345.686 270.854 347.888 272.767 350.143 273.615 cv
352.664 274.566 354.55 275.466 356.624 277.365 cv
359.876 280.333 362.574 283.9 364.651 287.79 cv
365.771 289.892 366.801 292.041 367.722 294.233 cv
368.509 296.097 368.961 298.459 370.048 300.165 cv
371.7 302.761 375.026 303.611 377.483 302.049 cv
379.935 300.486 380.579 297.117 378.924 294.517 cv
378.156 293.309 376.786 292.38 375.778 291.367 cv
374.537 290.12 373.328 288.835 372.166 287.507 cv
369.847 284.836 367.704 281.968 366.061 278.816 cv
364.621 276.035 363.337 272.853 362.977 269.75 cv
362.854 268.676 363.027 267.63 363.077 266.575 cv
363.204 263.877 363.041 260.273 361.522 257.882 cv
cp
level3{
gsave
clp
[19.6977 -8.15902 8.15902 19.6977 350.87 260.28 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[19.6977 -8.15902 8.15902 19.6977 350.87 260.28 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
279.411 329.304 mo
274.524 325.881 267.959 326.828 264.733 331.429 cv
261.515 336.015 262.854 342.521 267.741 345.946 cv
269.743 347.351 272.511 348.274 274.917 348.195 cv
277.608 348.11 279.697 348.22 282.34 349.18 cv
286.48 350.675 290.338 352.939 293.745 355.738 cv
295.584 357.253 297.358 358.844 299.047 360.516 cv
300.488 361.938 301.811 363.949 303.466 365.107 cv
305.987 366.872 309.385 366.385 311.058 364.003 cv
312.726 361.619 312.028 358.26 309.505 356.491 cv
308.334 355.669 306.714 355.335 305.395 354.787 cv
303.771 354.109 302.162 353.384 300.581 352.601 cv
297.415 351.022 294.338 349.193 291.614 346.907 cv
289.218 344.89 286.814 342.44 285.296 339.711 cv
284.771 338.768 284.529 337.736 284.174 336.741 cv
283.257 334.201 281.729 330.933 279.411 329.304 cv
cp
level3{
gsave
clp
[15.0759 -15.0759 15.0759 15.0759 270.486 335.598 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[15.0759 -15.0759 15.0759 15.0759 270.486 335.598 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
230.881 426.713 mo
225.058 425.42 219.354 428.807 218.133 434.291 cv
216.916 439.762 220.642 445.261 226.467 446.554 cv
228.854 447.086 231.765 446.879 233.958 445.886 cv
236.411 444.777 238.383 444.079 241.193 443.954 cv
245.591 443.752 250.021 444.368 254.239 445.65 cv
256.518 446.346 258.765 447.137 260.967 448.035 cv
262.842 448.796 264.833 450.148 266.805 450.585 cv
269.81 451.252 272.764 449.5 273.396 446.661 cv
274.026 443.82 272.097 440.982 269.088 440.313 cv
267.69 440.003 266.066 440.314 264.638 440.312 cv
262.879 440.306 261.114 440.253 259.354 440.134 cv
255.826 439.887 252.282 439.375 248.892 438.307 cv
245.906 437.36 242.75 436.016 240.3 434.077 cv
239.454 433.405 238.836 432.544 238.127 431.762 cv
236.309 429.766 233.644 427.331 230.881 426.713 cv
cp
level3{
gsave
clp
[8.15904 -19.6978 19.6978 8.15904 225.043 435.943 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.15904 -19.6978 19.6978 8.15904 225.043 435.943 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
223.32 535.277 mo
217.447 536.313 213.472 541.627 214.445 547.16 cv
215.414 552.679 220.959 556.335 226.836 555.301 cv
229.245 554.878 231.854 553.571 233.502 551.815 cv
235.344 549.854 236.898 548.451 239.446 547.262 cv
243.432 545.392 247.76 544.265 252.148 543.837 cv
254.52 543.604 256.898 543.476 259.277 543.464 cv
261.3 543.451 263.657 543.938 265.646 543.587 cv
268.677 543.053 270.737 540.304 270.233 537.438 cv
269.729 534.569 266.859 532.688 263.825 533.222 cv
262.415 533.47 261.034 534.382 259.712 534.923 cv
258.086 535.593 256.435 536.218 254.764 536.781 cv
251.409 537.906 247.939 538.789 244.398 539.099 cv
241.278 539.363 237.845 539.332 234.84 538.478 cv
233.802 538.18 232.903 537.622 231.948 537.173 cv
229.504 536.021 226.111 534.794 223.32 535.277 cv
cp
level3{
gsave
clp
[0 -21.321 21.321 0 221.459 546.041 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -21.321 21.321 0 221.459 546.041 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
257.882 638.477 mo
252.851 641.678 251.212 648.106 254.229 652.847 cv
257.236 657.577 263.758 658.831 268.791 655.625 cv
270.856 654.312 272.768 652.106 273.617 649.857 cv
274.567 647.337 275.468 645.45 277.367 643.372 cv
280.334 640.121 283.901 637.426 287.79 635.349 cv
289.893 634.228 292.042 633.197 294.233 632.274 cv
296.099 631.489 298.462 631.037 300.166 629.952 cv
302.761 628.299 303.613 624.974 302.051 622.518 cv
300.486 620.063 297.116 619.42 294.517 621.072 cv
293.309 621.842 292.381 623.212 291.369 624.221 cv
290.121 625.462 288.835 626.669 287.509 627.83 cv
284.838 630.153 281.97 632.294 278.816 633.938 cv
276.035 635.377 272.853 636.662 269.75 637.022 cv
268.677 637.145 267.632 636.973 266.576 636.92 cv
263.879 636.795 260.275 636.957 257.882 638.477 cv
cp
level3{
gsave
clp
[-8.159 -19.6977 19.6977 -8.159 260.282 649.128 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-8.159 -19.6977 19.6977 -8.159 260.282 649.128 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
329.305 720.588 mo
325.882 725.473 326.829 732.04 331.429 735.265 cv
336.018 738.483 342.523 737.146 345.945 732.26 cv
347.352 730.255 348.274 727.486 348.198 725.084 cv
348.11 722.389 348.219 720.304 349.18 717.656 cv
350.678 713.518 352.94 709.659 355.737 706.254 cv
357.255 704.417 358.844 702.64 360.517 700.948 cv
361.94 699.508 363.949 698.189 365.107 696.531 cv
366.872 694.013 366.387 690.612 364.005 688.944 cv
361.62 687.272 358.26 687.971 356.492 690.491 cv
355.668 691.664 355.337 693.286 354.787 694.604 cv
354.109 696.228 353.383 697.84 352.602 699.417 cv
351.022 702.584 349.192 705.661 346.908 708.386 cv
344.89 710.779 342.441 713.184 339.711 714.702 cv
338.769 715.229 337.737 715.469 336.744 715.823 cv
334.203 716.742 330.935 718.271 329.305 720.588 cv
cp
level3{
gsave
clp
[-15.076 -15.076 15.076 -15.076 335.598 729.513 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-15.076 -15.076 15.076 -15.076 335.598 729.513 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
426.712 769.118 mo
425.42 774.94 428.809 780.646 434.292 781.865 cv
439.762 783.085 445.262 779.357 446.554 773.533 cv
447.086 771.143 446.878 768.233 445.888 766.042 cv
444.776 763.586 444.079 761.617 443.956 758.807 cv
443.752 754.409 444.369 749.98 445.65 745.761 cv
446.347 743.482 447.136 741.231 448.033 739.029 cv
448.796 737.153 450.148 735.168 450.585 733.192 cv
451.251 730.189 449.502 727.235 446.663 726.604 cv
443.819 725.973 440.983 727.906 440.313 730.909 cv
440.002 732.31 440.314 733.935 440.311 735.362 cv
440.308 737.119 440.253 738.887 440.134 740.644 cv
439.889 744.174 439.375 747.716 438.307 751.108 cv
437.359 754.094 436.016 757.251 434.078 759.699 cv
433.404 760.543 432.546 761.162 431.762 761.87 cv
429.766 763.688 427.333 766.355 426.712 769.118 cv
cp
level3{
gsave
clp
[-19.6977 -8.15898 8.15898 -19.6977 435.943 774.955 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-19.6977 -8.15898 8.15898 -19.6977 435.943 774.955 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
535.276 776.677 mo
536.312 782.553 541.627 786.528 547.159 785.557 cv
552.679 784.586 556.336 779.043 555.301 773.163 cv
554.874 770.752 553.569 768.142 551.816 766.497 cv
549.853 764.652 548.452 763.102 547.258 760.553 cv
545.39 756.569 544.266 752.241 543.835 747.85 cv
543.605 745.479 543.474 743.098 543.462 740.723 cv
543.45 738.694 543.937 736.344 543.585 734.351 cv
543.052 731.321 540.305 729.262 537.438 729.767 cv
534.568 730.271 532.69 733.141 533.219 736.172 cv
533.468 737.583 534.382 738.967 534.924 740.289 cv
535.594 741.913 536.219 743.565 536.782 745.236 cv
537.906 748.591 538.787 752.059 539.097 755.604 cv
539.366 758.725 539.331 762.153 538.478 765.157 cv
538.178 766.195 537.62 767.095 537.173 768.053 cv
536.02 770.494 534.792 773.886 535.276 776.677 cv
cp
level3{
gsave
clp
[-21.3215 0 0 -21.3215 546.04 778.541 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-21.3215 0 0 -21.3215 546.04 778.541 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
638.474 742.118 mo
641.677 747.147 648.106 748.786 652.845 745.769 cv
657.575 742.763 658.828 736.241 655.625 731.209 cv
654.311 729.14 652.105 727.229 649.857 726.382 cv
647.337 725.432 645.451 724.531 643.37 722.631 cv
640.121 719.667 637.424 716.098 635.348 712.207 cv
634.23 710.105 633.195 707.953 632.273 705.766 cv
631.487 703.897 631.035 701.539 629.95 699.831 cv
628.294 697.237 624.975 696.384 622.519 697.949 cv
620.06 699.514 619.421 702.882 621.07 705.482 cv
621.841 706.69 623.213 707.618 624.22 708.63 cv
625.46 709.877 626.67 711.164 627.83 712.491 cv
630.15 715.161 632.293 718.029 633.937 721.183 cv
635.379 723.966 636.658 727.146 637.018 730.247 cv
637.142 731.321 636.972 732.365 636.918 733.422 cv
636.793 736.118 636.956 739.722 638.474 742.118 cv
cp
level3{
gsave
clp
[-19.697 8.1587 -8.1587 -19.697 649.126 739.716 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-19.697 8.1587 -8.1587 -19.697 649.126 739.716 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
720.586 670.694 mo
725.469 674.116 732.04 673.168 735.261 668.571 cv
738.48 663.979 737.146 657.476 732.258 654.053 cv
730.252 652.646 727.484 651.722 725.082 651.801 cv
722.388 651.891 720.302 651.779 717.653 650.817 cv
713.515 649.321 709.661 647.057 706.25 644.26 cv
704.415 642.745 702.637 641.152 700.947 639.482 cv
699.507 638.057 698.185 636.051 696.529 634.892 cv
694.01 633.128 690.612 633.611 688.944 635.995 cv
687.271 638.38 687.971 641.739 690.489 643.505 cv
691.662 644.328 693.286 644.661 694.604 645.212 cv
696.228 645.887 697.838 646.617 699.416 647.396 cv
702.582 648.977 705.658 650.806 708.382 653.088 cv
710.782 655.109 713.182 657.556 714.703 660.284 cv
715.225 661.23 715.468 662.26 715.824 663.256 cv
716.737 665.794 718.269 669.064 720.586 670.694 cv
cp
level3{
gsave
clp
[-15.0754 15.0754 -15.0754 -15.0754 729.512 664.399 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-15.0754 15.0754 -15.0754 -15.0754 729.512 664.399 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
769.115 573.283 mo
774.938 574.577 780.646 571.188 781.861 565.705 cv
783.081 560.233 779.356 554.732 773.53 553.443 cv
771.141 552.911 768.229 553.118 766.041 554.108 cv
763.585 555.222 761.616 555.915 758.802 556.045 cv
754.406 556.244 749.978 555.628 745.757 554.349 cv
743.48 553.65 741.229 552.86 739.027 551.967 cv
737.152 551.199 735.163 549.851 733.19 549.413 cv
730.185 548.749 727.234 550.491 726.604 553.333 cv
725.973 556.18 727.904 559.016 730.905 559.684 cv
732.306 559.995 733.934 559.682 735.362 559.684 cv
737.119 559.686 738.887 559.745 740.644 559.86 cv
744.175 560.107 747.715 560.622 751.106 561.691 cv
754.095 562.638 757.248 563.98 759.696 565.918 cv
760.539 566.594 761.16 567.453 761.87 568.232 cv
763.688 570.232 766.353 572.665 769.115 573.283 cv
cp
level3{
gsave
clp
[-8.15884 19.6973 -19.6973 -8.15884 774.954 564.053 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-8.15884 19.6973 -19.6973 -8.15884 774.954 564.053 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
776.676 464.72 mo
782.549 463.685 786.523 458.369 785.552 452.84 cv
784.584 447.317 779.039 443.663 773.159 444.697 cv
770.749 445.121 768.14 446.426 766.498 448.181 cv
764.652 450.147 763.098 451.542 760.549 452.736 cv
756.566 454.606 752.236 455.729 747.845 456.162 cv
745.479 456.388 743.095 456.521 740.722 456.536 cv
738.691 456.547 736.34 456.061 734.348 456.413 cv
731.32 456.946 729.259 459.689 729.763 462.556 cv
730.273 465.426 733.141 467.306 736.169 466.775 cv
737.582 466.526 738.966 465.616 740.286 465.071 cv
741.91 464.399 743.563 463.778 745.233 463.214 cv
748.59 462.092 752.059 461.21 755.601 460.9 cv
758.725 460.631 762.151 460.665 765.154 461.518 cv
766.192 461.818 767.091 462.376 768.049 462.825 cv
770.491 463.975 773.883 465.204 776.676 464.72 cv
cp
level3{
gsave
clp
[0 21.3207 -21.3207 0 778.536 453.956 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 21.3207 -21.3207 0 778.536 453.956 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
742.113 361.525 mo
747.144 358.322 748.783 351.89 745.769 347.152 cv
742.758 342.421 736.236 341.167 731.204 344.371 cv
729.14 345.685 727.227 347.892 726.381 350.139 cv
725.431 352.661 724.53 354.546 722.63 356.625 cv
719.666 359.877 716.095 362.572 712.208 364.651 cv
710.103 365.766 707.953 366.801 705.762 367.723 cv
703.896 368.51 701.535 368.962 699.83 370.047 cv
697.234 371.701 696.383 375.023 697.945 377.479 cv
699.515 379.936 702.882 380.574 705.479 378.926 cv
706.688 378.154 707.615 376.784 708.628 375.776 cv
709.872 374.534 711.165 373.326 712.491 372.166 cv
715.16 369.845 718.027 367.704 721.181 366.062 cv
723.963 364.618 727.142 363.338 730.244 362.977 cv
731.32 362.857 732.361 363.027 733.419 363.077 cv
736.117 363.204 739.722 363.039 742.113 361.525 cv
cp
level3{
gsave
clp
[8.15889 19.6974 -19.6974 8.15889 739.714 350.869 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.15889 19.6974 -19.6974 8.15889 739.714 350.869 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
670.691 279.412 mo
674.114 274.527 673.167 267.958 668.568 264.734 cv
663.978 261.515 657.474 262.851 654.049 267.74 cv
652.643 269.744 651.723 272.513 651.802 274.913 cv
651.889 277.606 651.777 279.696 650.813 282.34 cv
649.322 286.479 647.056 290.335 644.259 293.744 cv
642.743 295.58 641.15 297.359 639.48 299.05 cv
638.055 300.492 636.05 301.813 634.887 303.467 cv
633.125 305.989 633.609 309.383 635.992 311.053 cv
638.378 312.724 641.737 312.024 643.505 309.509 cv
644.324 308.333 644.659 306.711 645.209 305.394 cv
645.883 303.769 646.616 302.158 647.396 300.579 cv
648.975 297.412 650.802 294.339 653.087 291.615 cv
655.107 289.214 657.553 286.816 660.28 285.294 cv
661.23 284.773 662.258 284.532 663.253 284.172 cv
665.792 283.256 669.065 281.725 670.691 279.412 cv
cp
level3{
gsave
clp
[15.0758 15.0758 -15.0758 15.0758 664.398 270.485 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[15.0758 15.0758 -15.0758 15.0758 664.398 270.485 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
573.282 230.881 mo
574.575 225.059 571.188 219.353 565.706 218.135 cv
560.231 216.916 554.731 220.64 553.442 226.465 cv
552.909 228.856 553.117 231.767 554.109 233.954 cv
555.219 236.41 555.918 238.382 556.043 241.194 cv
556.245 245.588 555.626 250.019 554.35 254.24 cv
553.648 256.516 552.859 258.768 551.963 260.968 cv
551.197 262.845 549.849 264.834 549.41 266.807 cv
548.748 269.812 550.491 272.76 553.331 273.393 cv
556.178 274.022 559.017 272.091 559.685 269.091 cv
559.994 267.69 559.683 266.064 559.683 264.637 cv
559.685 262.877 559.744 261.11 559.858 259.352 cv
560.108 255.821 560.621 252.282 561.689 248.893 cv
562.638 245.901 563.98 242.75 565.917 240.299 cv
566.595 239.455 567.452 238.838 568.232 238.126 cv
570.229 236.309 572.666 233.642 573.282 230.881 cv
cp
level3{
gsave
clp
[19.6974 8.15889 -8.15889 19.6974 564.053 225.043 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[19.6974 8.15889 -8.15889 19.6974 564.053 225.043 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
531.38 193.543 mo
531.51 183.461 521.304 175.167 508.555 175.003 cv
495.837 174.835 485.391 182.863 485.259 192.944 cv
485.207 197.08 487.033 201.825 490.266 205.124 cv
493.887 208.813 496.363 211.841 497.97 216.45 cv
500.476 223.659 501.198 231.206 500.341 238.624 cv
499.875 242.631 499.18 246.621 498.219 250.57 cv
497.404 253.93 495.344 257.681 495.301 261.096 cv
495.233 266.298 500.518 270.592 507.124 270.677 cv
513.725 270.762 519.12 266.608 519.184 261.405 cv
519.215 258.985 517.761 256.4 517.101 254.036 cv
516.282 251.12 515.562 248.184 515.005 245.229 cv
513.888 239.294 513.352 233.258 514.132 227.287 cv
514.822 222.022 516.319 216.337 519.469 211.629 cv
520.558 210.003 522.178 208.693 523.591 207.247 cv
527.168 203.563 531.321 198.328 531.38 193.543 cv
cp
level3{
gsave
clp
[49.7016 -1.71434 2.82082 35.7067 506.364 189.322 ]ct
/2 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.909804 .423529 .207843 ]
/C1 [.980392 .854902 .8 ]
/N 1.77974 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.909804 .423529 .207843 ]
/C1 [.811765 .247059 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.811765 .247059 0 ]
/C1 [.454902 .74902 .278431 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.454902 .74902 .278431 ]
/C1 [.478431 .215686 .027451 ]
/N 3.02895 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.478431 .215686 .027451 ]
/C1 [.478431 .215686 .027451 ]
/N 1 
>>
]
/Bounds [.206667 .406061 .624242 .945455 ]
/Encode [1 0 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[49.7016 -1.71434 2.82082 35.7067 506.364 189.322 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~qYBp]p\4CSp%7nJoCDJBnaZ,<n*f]4md9E/m-O*)lg*j$lK[Wul07Hrkih6okih6oki_-kk2k^djQ,@]
io8qUi8EMMhVR)Egt^Z=g=k65f\"g-f%/C%eC;srdaHOjd*U+bcHXPTaMu3:_8*dt]=GG[['R$@Y,n\'
Vl$8aTq@pHR[KM-P`h/iNJraNLP:A4J:DuoH?aUUFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVH
FEDVHFEDVHFEDVHFEDYJF`hhLF`hhLF`hkNG'8%PG'8(RGB\7TG^+IXG^+LZH$O[]H?sm`H?sm`H?sm`
~>
<~g=F]ubK.W<^:Le\Z*(.+V5']SS!]M*OcPKZLk^S7JU`)pH?aXWFE;JBE,TW3D/F**Chmg$BkV-kARo:\
@UWYO?<pf@>?Y03=&r=#<)Z[l:esh\9h\2P8Ou?@7R]^46:!k$5=%Y*84lQO;,^Lt>$PEC@qKChCi=<7
G'J=\It<6,Ll.1QOcu)uR[p(EUSauiXfo"9[^`o^^:q=q^:q=q^:q=q^:q=q^:h4n]tD"j]=YYc\[f5Z
\$i]OZa-j?YHFt-Wi2hlUnXNRS=5h2P`_#cMMHk9IX?<^EGfN(@p`GA;bfqR5Wgta2`EZS2`EZS2`EZS
~>
<~bf7K4\?i?<V4jHIP`Ui[KReJrF`MD9BOtX[>Zk--;,9nY84H!75sIOq4$#A]2`<NN2)I*E0eb75/M&D%
.4?Pj,pX]Z+WqjJ*?,n7(`*r&'GD)k&.]6[$k!CK#R:P;"9S]*!!*-'"U52;$4@7P%hK<d'GVB#)&aJ8
*ZlOL,:"T`-n6_u/MAe41,LjH2`Wo\4[)(q6:4.07Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7R]a777BU46psC0
6UF++5s[b$5<h=p4Zkef3]T/Y2Dm<I1,1I9/hAM&-mp;d+sA$K)]BP/'G:rd$OI%C#6tJ=#6tJ=#6tJ=
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
411.716 204.861 mo
407.979 195.498 395.375 191.74 383.533 196.467 cv
371.72 201.181 365.141 212.593 368.876 221.958 cv
370.411 225.799 373.914 229.483 378.163 231.294 cv
382.921 233.316 386.367 235.167 389.615 238.81 cv
394.689 244.512 398.245 251.208 400.292 258.389 cv
401.395 262.27 402.279 266.221 402.903 270.237 cv
403.436 273.654 402.967 277.907 404.235 281.079 cv
406.163 285.912 412.688 287.855 418.825 285.406 cv
424.956 282.959 428.35 277.057 426.418 272.226 cv
425.521 269.977 423.188 268.146 421.674 266.214 cv
419.8 263.833 418.012 261.396 416.367 258.88 cv
413.064 253.823 410.259 248.452 408.694 242.638 cv
407.316 237.509 406.525 231.684 407.633 226.129 cv
408.017 224.211 409.013 222.379 409.763 220.503 cv
411.66 215.73 413.493 209.305 411.716 204.861 cv
cp
level3{
gsave
clp
[45.2557 -20.6075 16.2723 31.9084 386.989 210.535 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[45.2557 -20.6075 16.2723 31.9084 386.989 210.535 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
305.492 261.112 mo
298.456 253.891 285.374 255.243 276.242 264.142 cv
267.132 273.017 265.422 286.078 272.457 293.301 cv
275.344 296.262 279.989 298.327 284.609 298.373 cv
289.779 298.42 293.67 298.812 298.065 300.934 cv
304.936 304.26 310.783 309.085 315.421 314.937 cv
317.925 318.099 320.255 321.413 322.368 324.884 cv
324.168 327.837 325.363 331.945 327.748 334.391 cv
331.377 338.118 338.15 337.417 342.882 332.805 cv
347.611 328.199 348.487 321.446 344.854 317.722 cv
343.165 315.988 340.309 315.189 338.171 313.984 cv
335.529 312.501 332.944 310.934 330.461 309.239 cv
325.474 305.831 320.828 301.941 317.157 297.168 cv
313.921 292.958 310.962 287.879 309.858 282.322 cv
309.48 280.403 309.698 278.331 309.674 276.31 cv
309.599 271.175 308.834 264.536 305.492 261.112 cv
cp
level3{
gsave
clp
[33.9257 -36.352 27.245 23.2518 284.818 275.815 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[33.9257 -36.352 27.245 23.2518 284.818 275.815 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
228.88 353.73 mo
219.617 349.752 208.047 356.008 203.016 367.723 cv
197.996 379.409 201.415 392.131 210.678 396.111 cv
214.478 397.742 219.561 397.872 223.846 396.147 cv
228.641 394.212 232.385 393.085 237.259 393.363 cv
244.878 393.807 252.127 396.028 258.651 399.659 cv
262.175 401.622 265.595 403.792 268.876 406.191 cv
271.668 408.229 274.345 411.568 277.485 412.915 cv
282.264 414.968 288.253 411.729 290.86 405.658 cv
293.466 399.592 291.692 393.018 286.911 390.968 cv
284.685 390.012 281.741 390.369 279.304 390.072 cv
276.296 389.714 273.309 389.254 270.366 388.639 cv
264.454 387.399 258.673 385.583 253.455 382.579 cv
248.855 379.927 244.177 376.368 241.032 371.656 cv
239.947 370.027 239.356 368.03 238.561 366.171 cv
236.525 361.457 233.278 355.615 228.88 353.73 cv
cp
level3{
gsave
clp
[17.4314 -46.5677 34.0699 11.0543 215.408 375.227 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[17.4314 -46.5677 34.0699 11.0543 215.408 375.227 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
193.544 468.617 mo
183.462 468.487 175.168 478.694 175.003 491.443 cv
174.837 504.161 182.864 514.605 192.945 514.738 cv
197.081 514.791 201.825 512.965 205.124 509.731 cv
208.813 506.11 211.842 503.635 216.45 502.027 cv
223.66 499.52 231.207 498.799 238.624 499.657 cv
242.631 500.122 246.621 500.818 250.57 501.779 cv
253.93 502.594 257.682 504.654 261.097 504.695 cv
266.298 504.765 270.592 499.479 270.677 492.873 cv
270.764 486.272 266.608 480.877 261.407 480.813 cv
258.985 480.782 256.401 482.238 254.037 482.896 cv
251.122 483.716 248.185 484.435 245.23 484.993 cv
239.293 486.109 233.258 486.644 227.287 485.865 cv
222.023 485.175 216.339 483.678 211.63 480.528 cv
210.004 479.439 208.693 477.819 207.248 476.406 cv
203.563 472.829 198.328 468.675 193.544 468.617 cv
cp
level3{
gsave
clp
[-1.71435 -49.7018 35.7068 -2.82083 189.322 493.634 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.71435 -49.7018 35.7068 -2.82083 189.322 493.634 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
204.863 588.282 mo
195.499 592.02 191.741 604.624 196.467 616.465 cv
201.181 628.278 212.594 634.854 221.958 631.121 cv
225.799 629.588 229.483 626.085 231.295 621.834 cv
233.317 617.078 235.167 613.631 238.81 610.382 cv
244.512 605.308 251.208 601.754 258.39 599.707 cv
262.269 598.604 266.222 597.72 270.238 597.097 cv
273.654 596.563 277.908 597.031 281.08 595.762 cv
285.912 593.836 287.856 587.309 285.405 581.175 cv
282.96 575.041 277.057 571.647 272.227 573.579 cv
269.978 574.476 268.147 576.811 266.215 578.324 cv
263.835 580.199 261.397 581.985 258.881 583.632 cv
253.823 586.934 248.452 589.738 242.637 591.304 cv
237.51 592.68 231.685 593.474 226.129 592.364 cv
224.212 591.979 222.38 590.986 220.503 590.234 cv
215.731 588.338 209.305 586.504 204.863 588.282 cv
cp
level3{
gsave
clp
[-20.6072 -45.2552 31.908 -16.2721 210.534 613.008 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-20.6072 -45.2552 31.908 -16.2721 210.534 613.008 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
261.112 694.506 mo
253.892 701.543 255.244 714.625 264.142 723.757 cv
273.018 732.867 286.078 734.575 293.3 727.541 cv
296.263 724.653 298.326 720.008 298.373 715.39 cv
298.421 710.221 298.812 706.327 300.934 701.932 cv
304.26 695.063 309.086 689.216 314.938 684.577 cv
318.1 682.074 321.413 679.743 324.886 677.631 cv
327.836 675.832 331.947 674.637 334.391 672.25 cv
338.118 668.621 337.416 661.847 332.804 657.116 cv
328.199 652.386 321.447 651.51 317.723 655.144 cv
315.989 656.833 315.19 659.688 313.984 661.827 cv
312.502 664.47 310.935 667.054 309.24 669.537 cv
305.831 674.525 301.941 679.17 297.168 682.842 cv
292.958 686.074 287.88 689.038 282.323 690.139 cv
280.404 690.518 278.332 690.301 276.311 690.325 cv
271.175 690.398 264.536 691.164 261.112 694.506 cv
cp
level3{
gsave
clp
[-36.3522 -33.9259 23.2519 -27.2451 275.815 715.18 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-36.3522 -33.9259 23.2519 -27.2451 275.815 715.18 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
353.731 771.119 mo
349.752 780.383 356.008 791.952 367.724 796.984 cv
379.411 802.002 392.129 798.583 396.11 789.32 cv
397.742 785.521 397.871 780.439 396.146 776.152 cv
394.213 771.359 393.085 767.612 393.363 762.738 cv
393.807 755.121 396.028 747.871 399.659 741.346 cv
401.623 737.823 403.792 734.404 406.192 731.124 cv
408.229 728.331 411.569 725.653 412.914 722.514 cv
414.969 717.733 411.728 711.746 405.658 709.14 cv
399.592 706.531 393.019 708.307 390.968 713.088 cv
390.013 715.312 390.369 718.258 390.072 720.693 cv
389.714 723.701 389.255 726.689 388.639 729.632 cv
387.399 735.545 385.583 741.326 382.578 746.545 cv
379.926 751.142 376.368 755.822 371.656 758.967 cv
370.028 760.05 368.03 760.645 366.172 761.439 cv
361.456 763.474 355.615 766.72 353.731 771.119 cv
cp
level3{
gsave
clp
[-46.5678 -17.4315 11.0543 -34.07 375.227 784.592 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-46.5678 -17.4315 11.0543 -34.07 375.227 784.592 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
468.618 806.455 mo
468.488 816.536 478.695 824.832 491.443 824.998 cv
504.161 825.161 514.604 817.134 514.736 807.054 cv
514.79 802.919 512.963 798.175 509.73 794.874 cv
506.11 791.186 503.633 788.156 502.025 783.547 cv
499.521 776.339 498.799 768.79 499.656 761.372 cv
500.122 757.368 500.818 753.377 501.779 749.429 cv
502.592 746.068 504.655 742.317 504.694 738.902 cv
504.764 733.7 499.479 729.407 492.874 729.322 cv
486.272 729.233 480.877 733.389 480.813 738.591 cv
480.781 741.013 482.238 743.597 482.895 745.962 cv
483.716 748.877 484.436 751.812 484.993 754.768 cv
486.108 760.704 486.644 766.741 485.864 772.712 cv
485.174 777.976 483.678 783.662 480.527 788.369 cv
479.438 789.993 477.82 791.306 476.408 792.752 cv
472.828 796.435 468.674 801.671 468.618 806.455 cv
cp
level3{
gsave
clp
[-49.7025 1.71437 -2.82087 -35.7073 493.632 810.679 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-49.7025 1.71437 -2.82087 -35.7073 493.632 810.679 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
588.281 795.136 mo
592.02 804.499 604.624 808.258 616.466 803.533 cv
628.278 798.817 634.854 787.405 631.118 778.041 cv
629.585 774.199 626.083 770.516 621.833 768.703 cv
617.077 766.681 613.629 764.832 610.38 761.188 cv
605.309 755.487 601.753 748.79 599.705 741.607 cv
598.603 737.73 597.72 733.777 597.098 729.759 cv
596.562 726.346 597.032 722.091 595.761 718.92 cv
593.835 714.086 587.31 712.145 581.174 714.594 cv
575.04 717.037 571.646 722.94 573.578 727.771 cv
574.475 730.021 576.811 731.852 578.322 733.783 cv
580.196 736.164 581.984 738.601 583.63 741.117 cv
586.933 746.174 589.738 751.547 591.302 757.361 cv
592.679 762.488 593.474 768.314 592.363 773.87 cv
591.979 775.786 590.986 777.619 590.234 779.494 cv
588.337 784.268 586.504 790.695 588.281 795.136 cv
cp
level3{
gsave
clp
[-45.256 20.6076 -16.2724 -31.9086 613.008 789.465 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-45.256 20.6076 -16.2724 -31.9086 613.008 789.465 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
694.504 738.884 mo
701.541 746.105 714.626 744.756 723.757 735.858 cv
732.867 726.98 734.572 713.92 727.539 706.698 cv
724.654 703.737 720.007 701.674 715.387 701.625 cv
710.221 701.575 706.324 701.188 701.93 699.066 cv
695.063 695.739 689.214 690.912 684.575 685.061 cv
682.072 681.899 679.744 678.586 677.631 675.111 cv
675.83 672.163 674.636 668.051 672.248 665.607 cv
668.618 661.881 661.848 662.583 657.117 667.194 cv
652.385 671.8 651.508 678.551 655.141 682.276 cv
656.831 684.01 659.689 684.807 661.826 686.015 cv
664.467 687.497 667.052 689.063 669.534 690.759 cv
674.521 694.167 679.17 698.057 682.84 702.831 cv
686.074 707.041 689.037 712.118 690.139 717.676 cv
690.516 719.594 690.301 721.667 690.324 723.688 cv
690.396 728.822 691.164 735.463 694.504 738.884 cv
cp
level3{
gsave
clp
[-33.9256 36.352 -27.245 -23.2518 715.181 724.184 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-33.9256 36.352 -27.245 -23.2518 715.181 724.184 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
771.114 646.266 mo
780.381 650.244 791.952 643.991 796.984 632.274 cv
802.002 620.586 798.581 607.869 789.318 603.889 cv
785.52 602.256 780.437 602.129 776.15 603.851 cv
771.356 605.782 767.609 606.915 762.739 606.638 cv
755.121 606.19 747.87 603.97 741.346 600.34 cv
737.824 598.376 734.402 596.205 731.121 593.805 cv
728.33 591.77 725.653 588.428 722.512 587.084 cv
717.731 585.03 711.746 588.271 709.139 594.341 cv
706.529 600.407 708.305 606.98 713.087 609.031 cv
715.31 609.984 718.257 609.628 720.692 609.928 cv
723.7 610.284 726.687 610.743 729.63 611.36 cv
735.54 612.6 741.324 614.414 746.542 617.421 cv
751.142 620.072 755.823 623.629 758.967 628.344 cv
760.047 629.97 760.645 631.967 761.44 633.825 cv
763.471 638.542 766.719 644.384 771.114 646.266 cv
cp
level3{
gsave
clp
[-17.4316 46.5682 -34.0703 -11.0544 784.592 624.772 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-17.4316 46.5682 -34.0703 -11.0544 784.592 624.772 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
806.451 531.379 mo
816.534 531.51 824.831 521.303 824.998 508.553 cv
825.16 495.835 817.132 485.394 807.052 485.261 cv
802.919 485.207 798.173 487.035 794.872 490.266 cv
791.183 493.885 788.154 496.365 783.547 497.973 cv
776.339 500.476 768.788 501.198 761.372 500.341 cv
757.368 499.875 753.375 499.178 749.426 498.216 cv
746.068 497.404 742.315 495.341 738.9 495.303 cv
733.697 495.234 729.408 500.519 729.322 507.124 cv
729.233 513.729 733.388 519.121 738.591 519.187 cv
741.011 519.216 743.597 517.759 745.961 517.104 cv
748.875 516.283 751.811 515.563 754.765 515.006 cv
760.701 513.889 766.74 513.354 772.711 514.133 cv
777.975 514.823 783.659 516.318 788.368 519.47 cv
789.99 520.56 791.306 522.176 792.751 523.59 cv
796.433 527.17 801.669 531.323 806.451 531.379 cv
cp
level3{
gsave
clp
[1.71437 49.7025 -35.7073 2.82087 810.679 506.364 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.71437 49.7025 -35.7073 2.82087 810.679 506.364 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
795.132 411.714 mo
804.498 407.977 808.258 395.372 803.531 383.531 cv
798.815 371.717 787.402 365.145 778.038 368.878 cv
774.198 370.411 770.514 373.915 768.701 378.163 cv
766.678 382.918 764.829 386.369 761.188 389.618 cv
755.485 394.688 748.787 398.246 741.608 400.292 cv
737.729 401.393 733.773 402.276 729.757 402.899 cv
726.346 403.435 722.087 402.965 718.917 404.236 cv
714.086 406.163 712.145 412.688 714.592 418.822 cv
717.037 424.959 722.939 428.351 727.771 426.421 cv
730.019 425.522 731.851 423.185 733.785 421.676 cv
736.161 419.802 738.599 418.014 741.115 416.368 cv
746.174 413.064 751.544 410.259 757.362 408.694 cv
762.489 407.317 768.312 406.523 773.869 407.633 cv
775.783 408.019 777.618 409.008 779.494 409.762 cv
784.267 411.66 790.693 413.494 795.132 411.714 cv
cp
level3{
gsave
clp
[20.6076 45.256 -31.9085 16.2724 789.464 386.988 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[20.6076 45.256 -31.9085 16.2724 789.464 386.988 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
738.881 305.492 mo
746.104 298.455 744.754 285.371 735.855 276.24 cv
726.979 267.13 713.92 265.425 706.695 272.457 cv
703.734 275.343 701.672 279.991 701.622 284.608 cv
701.572 289.777 701.186 293.671 699.065 298.066 cv
695.738 304.933 690.91 310.783 685.062 315.421 cv
681.899 317.923 678.581 320.253 675.11 322.365 cv
672.163 324.166 668.05 325.361 665.606 327.748 cv
661.881 331.378 662.583 338.149 667.192 342.88 cv
671.801 347.613 678.552 348.488 682.276 344.856 cv
684.008 343.166 684.808 340.305 686.018 338.171 cv
687.494 335.531 689.061 332.946 690.758 330.461 cv
694.167 325.475 698.055 320.827 702.83 317.155 cv
707.041 313.921 712.117 310.958 717.676 309.858 cv
719.593 309.481 721.664 309.693 723.688 309.672 cv
728.822 309.599 735.461 308.834 738.881 305.492 cv
cp
level3{
gsave
clp
[36.3521 33.9258 -23.2519 27.2451 724.181 284.815 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[36.3521 33.9258 -23.2519 27.2451 724.181 284.815 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
646.262 228.88 mo
650.242 219.615 643.988 208.045 632.273 203.013 cv
620.585 197.994 607.869 201.417 603.887 210.678 cv
602.254 214.478 602.127 219.561 603.849 223.846 cv
605.781 228.64 606.913 232.387 606.637 237.258 cv
606.189 244.876 603.968 252.127 600.34 258.652 cv
598.377 262.172 596.203 265.595 593.803 268.874 cv
591.77 271.666 588.426 274.345 587.083 277.485 cv
585.031 282.264 588.271 288.251 594.338 290.857 cv
600.407 293.467 606.979 291.691 609.031 286.911 cv
609.983 284.687 609.629 281.738 609.928 279.303 cv
610.283 276.299 610.741 273.311 611.357 270.366 cv
612.6 264.454 614.412 258.673 617.42 253.453 cv
620.073 248.854 623.627 244.175 628.344 241.03 cv
629.968 239.948 631.966 239.351 633.826 238.558 cv
638.543 236.525 644.381 233.278 646.262 228.88 cv
cp
level3{
gsave
clp
[46.5679 17.4315 -11.0543 34.07 624.77 215.405 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[46.5679 17.4315 -11.0543 34.07 624.77 215.405 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
690.975 393.768 mo
685.799 396.763 679.172 394.988 676.195 389.813 cv
676.195 389.813 li
673.194 384.63 674.968 378.01 680.145 375.021 cv
693.272 367.444 li
698.448 364.449 705.071 366.232 708.055 371.407 cv
708.055 371.407 li
711.051 376.594 709.278 383.208 704.098 386.199 cv
690.975 393.768 li
cp
level3{
gsave
clp
[7.54772 13.0721 -19.669 11.3567 692.123 380.609 ]ct
/3 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.811765 .333333 .447059 ]
/C1 [.937255 .682353 .760784 ]
/N 1.06542 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.741176 .121569 .313726 ]
/C1 [.811765 .333333 .447059 ]
/N 1.24892 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.556863 .0901961 .235294 ]
/C1 [.741176 .121569 .313726 ]
/N 1.22037 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.556863 .0901961 .235294 ]
/C1 [.556863 .0901961 .235294 ]
/N 1 
>>
]
/Bounds [.293333 .593333 .85 ]
/Encode [1 0 1 0 1 0 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.54772 13.0721 -19.669 11.3567 692.123 380.609 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~n*]W2mHj3*lg!d#l07EqkND!ik2k^cjQ#:[io8qUi8EMMhVR,Fh;$f?gY:H9g"G$1f[na+f%/C%eC;sr
e'c[ldF$=fd*L%acHa_[c-=MWbfn8RbKJ&Nb/qcIaiMQEaN)?A`l?$<`Pog8`5KU4_o'C0_ns:-_SO()
_8*k%^qd_"^V@Ot^:q=q^:h4n]tM+m]Y(kf\[],W[^EKKZE^X<YHG"/XK/A#W2QVkV59u_U7n9RT:_^G
S=H(;R[KP1Q^3r&Pa%AqP*(lgOH5H_NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[
~>
<~Y,n\(W2HMhUS=HTSt2C@R@'>,P`q8mOH,<ZMi!7FL4t83JUi2tI!^0aGBS+NF)c/;DJa3)BkV-kARf1X
?sd5G>[(B7=&r=$<)Z[l:esk^9h\2P8P)HC7R]^56UF((5X.Fq4?P\d3B9&X2E!EL1G^d@0eb75/hJV*
.k3"t-n$Gj-7'r`,U4NX+sA*P+<M[I*Zc@D*Zc@C*??.@*??+>*#oq<*#fh9)]K_8)]BV5)B'M4)AsD1
)&X;0)&O2-(`4),(`4&*(Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl(
~>
<~_SEq#]tCtg\@8oS['R'CYHG"/X/`.tVkp2aU7n6PSt2C?R@'>,Q'@JqOcYWaNJi[NLkg_=KS+l-J:E#r
I!^0bG^"=RFE;JCEH#l8Df0H0D/=$(CMIQtBP;$kAnGUcA7T1[@U`bS?sm>K?X@&E?!LW=>?Y36=]nj/
='&I(<`N."<)cgq;c6Lk;,L1f:f'tb:JXb]:/4MX9h\5R91qlL8kDTG84Z9A7n6$<7R]a76psF16UO1,
6:*t(5sR\#5X.It5!D.o4Ztqk4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
457.988 285.545 mo
459.231 291.395 455.497 297.145 449.649 298.386 cv
449.649 298.386 li
443.803 299.627 438.055 295.897 436.811 290.048 cv
433.663 275.226 li
432.419 269.377 436.15 263.629 442.001 262.387 cv
442.001 262.387 li
447.849 261.144 453.597 264.876 454.84 270.725 cv
457.988 285.545 li
cp
level3{
gsave
clp
[14.7664 -3.13917 4.72308 22.2191 445.825 280.386 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.7664 -3.13917 4.72308 22.2191 445.825 280.386 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
301.813 407.935 mo
307.273 410.365 309.731 416.768 307.301 422.226 cv
307.301 422.226 li
304.87 427.688 298.467 430.147 293.007 427.716 cv
279.163 421.549 li
273.702 419.12 271.245 412.722 273.678 407.255 cv
273.678 407.255 li
276.108 401.796 282.508 399.339 287.969 401.771 cv
301.813 407.935 li
cp
level3{
gsave
clp
[6.14003 -13.7925 20.7532 9.23941 290.489 414.744 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.14003 -13.7925 20.7532 9.23941 290.489 414.744 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
283.062 473.688 mo
289.008 474.31 293.324 479.638 292.699 485.58 cv
292.699 485.58 li
292.074 491.53 286.747 495.844 280.799 495.215 cv
265.729 493.632 li
259.787 493.008 255.471 487.684 256.093 481.734 cv
256.093 481.734 li
256.716 475.79 262.048 471.478 267.994 472.101 cv
283.062 473.688 li
cp
level3{
gsave
clp
[1.57696 -15.0148 22.5931 2.37332 274.396 483.658 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.57696 -15.0148 22.5931 2.37332 274.396 483.658 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
285.547 542.012 mo
291.398 540.769 297.146 544.501 298.388 550.346 cv
298.388 550.346 li
299.633 556.197 295.901 561.948 290.049 563.19 cv
275.228 566.342 li
269.378 567.584 263.63 563.849 262.389 558.004 cv
262.389 558.004 li
261.144 552.154 264.88 546.407 270.728 545.161 cv
285.547 542.012 li
cp
level3{
gsave
clp
[-3.13934 -14.7672 22.2203 -4.72333 280.388 554.176 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.13934 -14.7672 22.2203 -4.72333 280.388 554.176 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
407.938 698.195 mo
410.368 692.729 416.769 690.27 422.227 692.702 cv
422.227 692.702 li
427.693 695.139 430.153 701.533 427.717 706.997 cv
421.553 720.84 li
419.123 726.302 412.723 728.757 407.262 726.325 cv
407.262 726.325 li
401.798 723.891 399.343 717.497 401.77 712.033 cv
407.938 698.195 li
cp
level3{
gsave
clp
[-13.7925 -6.14001 9.23937 -20.7531 414.745 709.513 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-13.7925 -6.14001 9.23937 -20.7531 414.745 709.513 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
473.69 716.944 mo
474.311 710.994 479.639 706.678 485.581 707.301 cv
485.581 707.301 li
491.535 707.932 495.847 713.255 495.22 719.199 cv
493.636 734.277 li
493.013 740.22 487.685 744.533 481.741 743.908 cv
481.741 743.908 li
475.791 743.275 471.479 737.956 472.102 732.013 cv
473.69 716.944 li
cp
level3{
gsave
clp
[-15.0162 -1.57711 2.37354 -22.5952 483.661 725.605 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-15.0162 -1.57711 2.37354 -22.5952 483.661 725.605 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
542.014 714.457 mo
540.768 708.605 544.503 702.856 550.347 701.612 cv
550.347 701.612 li
556.204 700.365 561.949 704.104 563.191 709.948 cv
566.345 724.774 li
567.588 730.626 563.852 736.367 558.006 737.609 cv
558.006 737.609 li
552.147 738.853 546.407 735.122 545.161 729.279 cv
542.014 714.457 li
cp
level3{
gsave
clp
[-14.7675 3.13941 -4.72344 -22.2208 554.177 719.611 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-14.7675 3.13941 -4.72344 -22.2208 554.177 719.611 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
698.194 592.059 mo
692.729 589.636 690.268 583.23 692.705 577.776 cv
692.705 577.776 li
695.133 572.302 701.537 569.849 707 572.284 cv
720.844 578.449 li
726.308 580.879 728.76 587.283 726.323 592.731 cv
726.323 592.731 li
723.888 598.206 717.496 600.657 712.031 598.226 cv
698.194 592.059 li
cp
level3{
gsave
clp
[-6.13861 13.7893 -20.7484 -9.23728 709.514 585.254 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-6.13861 13.7893 -20.7484 -9.23728 709.514 585.254 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
716.944 526.312 mo
710.994 525.688 706.676 520.356 707.311 514.421 cv
707.311 514.421 li
707.925 508.46 713.257 504.152 719.203 504.779 cv
734.274 506.362 li
740.223 506.982 744.535 512.319 743.906 518.256 cv
743.906 518.256 li
743.279 524.213 737.956 528.522 732.008 527.894 cv
716.944 526.312 li
cp
level3{
gsave
clp
[-1.5766 15.0114 -22.5879 -2.37278 725.608 516.337 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.5766 15.0114 -22.5879 -2.37278 725.608 516.337 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
714.459 457.983 mo
708.606 459.23 702.852 455.494 701.624 449.652 cv
701.624 449.652 li
700.36 443.793 704.105 438.049 709.947 436.808 cv
724.772 433.658 li
730.626 432.407 736.371 436.151 737.605 441.992 cv
737.605 441.992 li
738.856 447.851 735.122 453.593 729.274 454.837 cv
714.459 457.983 li
cp
level3{
gsave
clp
[3.13831 14.7624 -22.213 4.72179 719.615 445.821 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.13831 14.7624 -22.213 4.72179 719.615 445.821 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
393.773 309.025 mo
396.764 314.202 394.991 320.824 389.814 323.813 cv
389.814 323.813 li
384.634 326.802 378.015 325.027 375.026 319.851 cv
367.45 306.727 li
364.463 301.548 366.232 294.927 371.413 291.938 cv
371.413 291.938 li
376.589 288.949 383.209 290.722 386.201 295.899 cv
393.773 309.025 li
cp
level3{
gsave
clp
[13.075 -7.54938 11.3592 19.6734 380.614 307.875 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[13.075 -7.54938 11.3592 19.6734 380.614 307.875 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
339.964 351.196 mo
344.402 355.199 344.764 362.045 340.765 366.484 cv
340.765 366.484 li
336.763 370.929 329.92 371.288 325.475 367.288 cv
314.215 357.144 li
309.772 353.146 309.41 346.301 313.414 341.858 cv
313.414 341.858 li
317.411 337.416 324.257 337.056 328.702 341.057 cv
339.964 351.196 li
cp
level3{
gsave
clp
[10.1026 -11.2182 16.881 15.2011 327.089 354.172 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.1026 -11.2182 16.881 15.2011 327.089 354.172 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
309.024 606.227 mo
314.203 603.235 320.828 605.012 323.814 610.186 cv
323.814 610.186 li
326.806 615.365 325.033 621.987 319.854 624.972 cv
306.73 632.548 li
301.549 635.546 294.931 633.769 291.941 628.589 cv
291.941 628.589 li
288.95 623.413 290.724 616.794 295.905 613.804 cv
309.024 606.227 li
cp
level3{
gsave
clp
[-7.54886 -13.0741 19.672 -11.3584 307.878 619.387 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-7.54886 -13.0741 19.672 -11.3584 307.878 619.387 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
351.198 660.041 mo
355.198 655.597 362.046 655.234 366.486 659.235 cv
366.486 659.235 li
370.933 663.242 371.293 670.084 367.287 674.527 cv
357.147 685.788 li
353.149 690.236 346.302 690.593 341.862 686.594 cv
341.862 686.594 li
337.417 682.588 337.06 675.742 341.061 671.3 cv
351.198 660.041 li
cp
level3{
gsave
clp
[-11.2187 -10.103 15.2017 -16.8817 354.173 672.914 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-11.2187 -10.103 15.2017 -16.8817 354.173 672.914 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
606.229 690.976 mo
603.235 685.794 605.011 679.174 610.187 676.189 cv
610.187 676.189 li
615.37 673.193 621.989 674.966 624.977 680.144 cv
632.555 693.27 li
635.547 698.451 633.769 705.069 628.59 708.057 cv
628.59 708.057 li
623.405 711.048 616.795 709.276 613.804 704.1 cv
606.229 690.976 li
cp
level3{
gsave
clp
[-13.0734 7.54847 -11.3578 -19.671 619.391 692.121 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-13.0734 7.54847 -11.3578 -19.671 619.391 692.121 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
660.046 648.803 mo
655.598 644.798 655.24 637.953 659.237 633.522 cv
659.237 633.522 li
663.245 629.065 670.086 628.709 674.527 632.713 cv
685.793 642.851 li
690.241 646.85 690.593 653.699 686.593 658.138 cv
686.593 658.138 li
682.582 662.583 675.743 662.94 671.3 658.943 cv
660.046 648.803 li
cp
level3{
gsave
clp
[-10.1023 11.2179 -16.8806 -15.2007 672.918 645.828 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-10.1023 11.2179 -16.8806 -15.2007 672.918 645.828 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
648.8 339.95 mo
644.801 344.401 637.953 344.762 633.528 340.759 cv
633.528 340.759 li
629.061 336.757 628.71 329.91 632.709 325.47 cv
642.85 314.206 li
646.849 309.759 653.701 309.408 658.135 313.408 cv
658.135 313.408 li
662.585 317.415 662.938 324.253 658.944 328.7 cv
648.8 339.95 li
cp
level3{
gsave
clp
[11.216 10.1006 -15.1981 16.8777 645.829 327.081 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[11.216 10.1006 -15.1981 16.8777 645.829 327.081 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
592.062 301.801 mo
589.634 307.271 583.231 309.731 577.782 307.292 cv
577.782 307.292 li
572.299 304.864 569.85 298.463 572.283 293.003 cv
578.45 279.155 li
580.877 273.688 587.286 271.237 592.729 273.675 cv
592.729 273.675 li
598.21 276.108 600.655 282.505 598.229 287.969 cv
592.062 301.801 li
cp
level3{
gsave
clp
[13.7882 6.1381 -9.23651 20.7467 585.257 290.485 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[13.7882 6.1381 -9.23651 20.7467 585.257 290.485 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
526.313 283.054 mo
525.689 289.005 520.357 293.324 514.426 292.686 cv
514.426 292.686 li
508.461 292.071 504.153 286.743 504.777 280.797 cv
506.362 265.722 li
506.983 259.773 512.322 255.461 518.255 256.096 cv
518.255 256.096 li
524.215 256.719 528.521 262.046 527.898 267.992 cv
526.313 283.054 li
cp
level3{
gsave
clp
[15.0103 1.57648 -2.3726 22.5863 516.339 274.391 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[15.0103 1.57648 -2.3726 22.5863 516.339 274.391 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
503.494 281.5 mo
503.494 287.478 498.646 292.325 492.669 292.325 cv
492.669 292.325 li
486.689 292.325 481.844 287.478 481.844 281.5 cv
481.844 266.342 li
481.844 260.366 486.689 255.521 492.669 255.521 cv
492.669 255.521 li
498.646 255.521 503.494 260.366 503.494 266.342 cv
503.494 281.5 li
cp
level3{
gsave
clp
[15.0969 0 0 22.7163 492.669 273.923 ]ct
/4 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.94902 .8 .611765 ]
/C1 [.94902 .8 .611765 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.894118 .6 .223529 ]
/C1 [.94902 .8 .611765 ]
/N 1.3157 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.623529 .286275 .0509804 ]
/C1 [.894118 .6 .223529 ]
/N 1.04092 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.623529 .286275 .0509804 ]
/C1 [.623529 .286275 .0509804 ]
/N 1 
>>
]
/Bounds [.02 .326667 .89 ]
/Encode [0 1 1 0 1 0 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[15.0969 0 0 22.7163 492.669 273.923 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~o()ABo()>@naZ,<nF5o8n*f`5mdBN1mHs<.m-O**m-F!'lg*j$lK[[!l07Hskih6okih3mkND$kk2tgg
k2tdejlPUcjlPRajQ,C_jQ,C_j5].YiSi_Qhr!;Ih;-lAgY:H9g"G$1f@SU)e^`1!e'landF$@gd*L%`
cHXVXbfe2Pb/qcHaN)?@`l5p8`5BL0_SO((^q[Xu^:h4n]Y(kg]"5G_\@B#W[^NTO['[0GZEgd@Z*:I9
YHG%1XfSV)X/`2"WMuhpVl-DhV5:#aUna]ZU7n9STV.pLT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJ
~>
<~bfn;Tbfn8QaiMNC`l5m6_SX.)^V7Fq]Xtbd\[],X[^EKLZa-j@Yck75Xf\\*X/`.uW2HPjV59u`US=KV
TqJ'NT:VXFSXc4>S!oe7R@0J2R$a5,QBd`"P`q;oOcb`eO,f6[NJrgSMMd7ILkph@L4t>7KS+l.JUr?%
IsuipI=-EhH[9s_G^+FVG'.qLFE;MDEH,r:Df9N2D/=$(CMITuBkV-lAnGUcA7T1Z@UW\Q?sd8I?!U]?
>?b97=]nj.=&r@%<E)pr;c6Lj;,C%a:/4MX9MA)P8kMZH8P)KF8P)KF8P)KF8P)KF8P)KF8P)KF8P)KF
~>
<~S=H+>S=H%8Q^*btOH5BZMMR%AKS"`(I=-?dGBS(LEc>r6ChdZtAn>I]@:*>H>Zt94<`N*t;G^.a9h\2P
84Q-<6pj:,5sRXu4Zkhg3]]8]3&ilV2`EWQ2E!EM2)I-H1G^gB1,:R=0eb:80J>(4/hSb./M/M)/1W5$
.k3"u.4H\o-n$Gj-RL/e-7'ra,U=W[,9nBV+sA*Q+WqmM+!2RG*Zc=B*??+>*#fh9)B'M4)&X;/(`4&*
(Ddi&()7Q!'GM5q',)#l&eYcg&J5Qc&.]9^%h9'Z%LijV%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
480.634 282.328 mo
481.261 288.274 476.947 293.604 470.999 294.229 cv
470.999 294.229 li
465.055 294.854 459.729 290.54 459.104 284.594 cv
457.52 269.52 li
456.895 263.577 461.208 258.25 467.155 257.623 cv
467.155 257.623 li
473.099 257 478.429 261.313 479.049 267.258 cv
480.634 282.328 li
cp
level3{
gsave
clp
[15.0149 -1.57697 2.37333 22.5932 469.077 275.926 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[15.0149 -1.57697 2.37333 22.5932 469.077 275.926 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
435.802 291.113 mo
437.65 296.799 434.54 302.906 428.852 304.753 cv
428.852 304.753 li
423.165 306.602 417.06 303.491 415.212 297.803 cv
410.529 283.392 li
408.685 277.705 411.791 271.596 417.479 269.75 cv
417.479 269.75 li
423.165 267.901 429.272 271.017 431.121 276.699 cv
435.802 291.113 li
cp
level3{
gsave
clp
[14.3586 -4.66638 7.02105 21.6046 423.166 287.25 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.3586 -4.66638 7.02105 21.6046 423.166 287.25 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
414.317 298.967 mo
416.749 304.432 414.295 310.83 408.833 313.262 cv
408.833 313.262 li
403.371 315.693 396.973 313.236 394.542 307.775 cv
388.378 293.929 li
385.947 288.469 388.4 282.071 393.865 279.639 cv
393.865 279.639 li
399.325 277.206 405.725 279.663 408.157 285.123 cv
414.317 298.967 li
cp
level3{
gsave
clp
[13.7914 -6.13956 9.23869 20.7516 401.351 296.45 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[13.7914 -6.13956 9.23869 20.7516 401.351 296.45 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
312.521 387.721 mo
317.698 390.713 319.473 397.334 316.486 402.511 cv
316.486 402.511 li
313.496 407.688 306.873 409.464 301.696 406.474 cv
288.572 398.895 li
283.397 395.906 281.618 389.288 284.611 384.109 cv
284.611 384.109 li
287.598 378.932 294.221 377.157 299.396 380.146 cv
312.521 387.721 li
cp
level3{
gsave
clp
[7.54923 -13.0747 19.673 11.3589 300.549 393.31 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.54923 -13.0747 19.673 11.3589 300.549 393.31 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
293.274 429.156 mo
298.959 431.004 302.073 437.111 300.226 442.793 cv
300.226 442.793 li
298.379 448.482 292.271 451.596 286.586 449.748 cv
272.171 445.063 li
266.491 443.216 263.373 437.109 265.222 431.421 cv
265.222 431.421 li
267.068 425.737 273.179 422.626 278.863 424.471 cv
293.274 429.156 li
cp
level3{
gsave
clp
[4.66635 -14.3586 21.6044 7.02101 282.724 437.108 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.66635 -14.3586 21.6044 7.02101 282.724 437.108 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
286.999 451.154 mo
292.85 452.397 296.585 458.146 295.339 463.988 cv
295.339 463.988 li
294.1 469.841 288.35 473.576 282.5 472.331 cv
267.679 469.179 li
261.832 467.936 258.097 462.191 259.338 456.338 cv
259.338 456.338 li
260.582 450.493 266.332 446.756 272.179 448.002 cv
286.999 451.154 li
cp
level3{
gsave
clp
[3.13921 -14.7666 22.2194 4.72314 277.338 460.167 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.13921 -14.7666 22.2194 4.72314 277.338 460.167 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
281.501 496.508 mo
287.479 496.506 292.329 501.354 292.327 507.328 cv
292.327 507.328 li
292.329 513.309 287.481 518.159 281.501 518.155 cv
266.348 518.155 li
260.37 518.155 255.522 513.311 255.522 507.33 cv
255.522 507.33 li
255.522 501.354 260.37 496.506 266.348 496.504 cv
281.501 496.508 li
cp
level3{
gsave
clp
[0 -15.0969 22.7162 0 273.924 507.33 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -15.0969 22.7162 0 273.924 507.33 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
282.33 519.365 mo
288.276 518.738 293.607 523.055 294.23 528.997 cv
294.23 528.997 li
294.857 534.946 290.543 540.271 284.595 540.896 cv
269.525 542.479 li
263.579 543.106 258.251 538.793 257.627 532.845 cv
257.627 532.845 li
257.002 526.904 261.318 521.571 267.265 520.946 cv
282.33 519.365 li
cp
level3{
gsave
clp
[-1.57691 -15.0143 22.5923 -2.37324 275.928 530.922 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.57691 -15.0143 22.5923 -2.37324 275.928 530.922 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
291.112 564.199 mo
296.801 562.35 302.91 565.459 304.754 571.146 cv
304.754 571.146 li
306.607 576.835 303.493 582.943 297.805 584.79 cv
283.393 589.471 li
277.709 591.317 271.6 588.207 269.753 582.521 cv
269.753 582.521 li
267.903 576.837 271.019 570.726 276.704 568.879 cv
291.112 564.199 li
cp
level3{
gsave
clp
[-4.66628 -14.3583 21.6041 -7.0209 287.253 576.834 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.66628 -14.3583 21.6041 -7.0209 287.253 576.834 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
298.967 585.683 mo
304.429 583.249 310.832 585.706 313.263 591.167 cv
313.263 591.167 li
315.699 596.631 313.241 603.029 307.777 605.461 cv
293.931 611.622 li
288.471 614.053 282.072 611.602 279.641 606.136 cv
279.641 606.136 li
277.209 600.676 279.666 594.274 285.126 591.846 cv
298.967 585.683 li
cp
level3{
gsave
clp
[-6.13987 -13.7922 20.7527 -9.23917 296.453 598.653 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-6.13987 -13.7922 20.7527 -9.23917 296.453 598.653 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
429.161 706.731 mo
431.005 701.045 437.114 697.93 442.795 699.771 cv
442.795 699.771 li
448.487 701.629 451.601 707.729 449.749 713.419 cv
445.064 727.831 li
443.219 733.52 437.112 736.629 431.43 734.78 cv
431.43 734.78 li
425.738 732.93 422.628 726.827 424.473 721.139 cv
429.161 706.731 li
cp
level3{
gsave
clp
[-14.359 -4.66648 7.02121 -21.605 437.112 717.275 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-14.359 -4.66648 7.02121 -21.605 437.112 717.275 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
451.157 713.003 mo
452.398 707.151 458.146 703.418 463.994 704.66 cv
463.994 704.66 li
469.844 705.906 473.577 711.648 472.333 717.501 cv
469.182 732.327 li
467.94 738.175 462.191 741.907 456.345 740.664 cv
456.345 740.664 li
450.494 739.414 446.757 733.673 448.003 727.821 cv
451.157 713.003 li
cp
level3{
gsave
clp
[-14.7683 -3.13956 4.72367 -22.2219 460.169 722.662 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-14.7683 -3.13956 4.72367 -22.2219 460.169 722.662 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
496.509 718.508 mo
496.507 712.52 501.353 707.678 507.328 707.678 cv
507.328 707.678 li
513.313 707.678 518.164 712.518 518.16 718.506 cv
518.162 733.654 li
518.162 739.633 513.311 744.479 507.334 744.478 cv
507.334 744.478 li
501.353 744.476 496.507 739.633 496.505 733.654 cv
496.509 718.508 li
cp
level3{
gsave
clp
[-15.0965 0 0 -22.7156 507.333 726.078 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-15.0965 0 0 -22.7156 507.333 726.078 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
519.367 717.674 mo
518.738 711.726 523.055 706.396 528.997 705.77 cv
528.997 705.77 li
534.951 705.145 540.274 709.457 540.897 715.405 cv
542.484 730.479 li
543.111 736.428 538.793 741.75 532.847 742.369 cv
532.847 742.369 li
526.9 742.996 521.573 738.687 520.946 732.742 cv
519.367 717.674 li
cp
level3{
gsave
clp
[-15.0144 1.57692 -2.37326 -22.5926 530.923 724.069 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-15.0144 1.57692 -2.37326 -22.5926 530.923 724.069 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
564.202 708.892 mo
562.35 703.201 565.464 697.094 571.146 695.25 cv
571.146 695.25 li
576.841 693.397 582.948 696.508 584.791 702.194 cv
589.476 716.61 li
591.322 722.296 588.208 728.4 582.523 730.247 cv
582.523 730.247 li
576.828 732.094 570.726 728.987 568.879 723.299 cv
564.202 708.892 li
cp
level3{
gsave
clp
[-14.3573 4.66594 -7.0204 -21.6025 576.836 712.749 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-14.3573 4.66594 -7.0204 -21.6025 576.836 712.749 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
585.688 701.035 mo
583.249 695.571 585.709 689.168 591.167 686.743 cv
591.167 686.743 li
596.633 684.306 603.034 686.766 605.459 692.225 cv
611.626 706.071 li
614.06 711.531 611.602 717.931 606.136 720.359 cv
606.136 720.359 li
600.667 722.791 594.273 720.34 591.843 714.875 cv
585.688 701.035 li
cp
level3{
gsave
clp
[-13.7904 6.13908 -9.23797 -20.75 598.652 703.551 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-13.7904 6.13908 -9.23797 -20.75 598.652 703.551 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
687.484 612.276 mo
682.302 609.283 680.524 602.662 683.518 597.492 cv
683.518 597.492 li
686.509 592.303 693.129 590.53 698.309 593.525 cv
711.435 601.104 li
716.615 604.091 718.383 610.714 715.391 615.886 cv
715.391 615.886 li
712.398 621.072 705.78 622.84 700.603 619.853 cv
687.484 612.276 li
cp
level3{
gsave
clp
[-7.54844 13.0734 -19.6709 -11.3577 699.454 606.688 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-7.54844 13.0734 -19.6709 -11.3577 699.454 606.688 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
706.732 570.841 mo
701.043 568.996 697.926 562.883 699.779 557.204 cv
699.779 557.204 li
701.626 551.51 707.733 548.398 713.42 550.251 cv
727.831 554.93 li
733.521 556.778 736.632 562.891 734.779 568.569 cv
734.779 568.569 li
732.931 574.267 726.828 577.37 721.135 575.523 cv
706.732 570.841 li
cp
level3{
gsave
clp
[-4.66609 14.3577 -21.6032 -7.02061 717.28 562.887 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.66609 14.3577 -21.6032 -7.02061 717.28 562.887 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
713.004 548.839 mo
707.152 547.602 703.413 541.851 704.667 536.01 cv
704.667 536.01 li
705.904 530.15 711.65 526.42 717.5 527.666 cv
732.327 530.817 li
738.181 532.055 741.906 537.815 740.662 543.652 cv
740.662 543.652 li
739.412 549.512 733.674 553.24 727.819 551.996 cv
713.004 548.839 li
cp
level3{
gsave
clp
[-3.1389 14.7651 -22.2172 -4.72267 722.665 539.831 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.1389 14.7651 -22.2172 -4.72267 722.665 539.831 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
718.505 503.487 mo
712.52 503.494 707.676 498.642 707.68 492.672 cv
707.68 492.672 li
707.676 486.68 712.52 481.835 718.503 481.839 cv
733.654 481.839 li
739.638 481.835 744.483 486.69 744.474 492.66 cv
744.474 492.66 li
744.476 498.65 739.634 503.494 733.652 503.494 cv
718.505 503.487 li
cp
level3{
gsave
clp
[0 15.0949 -22.7132 0 726.077 492.667 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 15.0949 -22.7132 0 726.077 492.667 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
717.674 480.629 mo
711.726 481.258 706.393 476.944 705.776 471.002 cv
705.776 471.002 li
705.144 465.048 709.46 459.722 715.404 459.099 cv
730.479 457.515 li
736.429 456.888 741.754 461.208 742.365 467.146 cv
742.365 467.146 li
742.998 473.104 738.686 478.424 732.737 479.048 cv
717.674 480.629 li
cp
level3{
gsave
clp
[1.57646 15.01 -22.5859 2.37257 724.07 469.074 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.57646 15.01 -22.5859 2.37257 724.07 469.074 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
708.888 435.794 mo
703.197 437.646 697.09 434.535 695.254 428.854 cv
695.254 428.854 li
693.393 423.158 696.509 417.053 702.193 415.207 cv
716.611 410.526 li
722.297 408.671 728.406 411.791 730.242 417.472 cv
730.242 417.472 li
732.093 423.17 728.987 429.271 723.295 431.12 cv
708.888 435.794 li
cp
level3{
gsave
clp
[4.66557 14.3561 -21.6008 7.01983 712.748 423.162 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.66557 14.3561 -21.6008 7.01983 712.748 423.162 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
701.033 414.312 mo
695.569 416.748 689.167 414.292 686.749 408.834 cv
686.749 408.834 li
684.303 403.365 686.763 396.965 692.223 394.538 cv
706.068 388.373 li
711.531 385.935 717.936 388.401 720.354 393.857 cv
720.354 393.857 li
722.795 399.33 720.338 405.722 714.873 408.156 cv
701.033 414.312 li
cp
level3{
gsave
clp
[6.13826 13.7885 -20.7472 9.23674 703.551 401.346 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.13826 13.7885 -20.7472 9.23674 703.551 401.346 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
374.396 321.175 mo
377.91 326.013 376.839 332.782 372.003 336.297 cv
372.003 336.297 li
367.164 339.812 360.396 338.738 356.878 333.901 cv
347.975 321.641 li
344.462 316.804 345.529 310.033 350.369 306.518 cv
350.369 306.518 li
355.204 303.007 361.976 304.079 365.49 308.914 cv
374.396 321.175 li
cp
level3{
gsave
clp
[12.2157 -8.87532 13.356 18.3795 361.185 321.409 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[12.2157 -8.87532 13.356 18.3795 361.185 321.409 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
356.392 335.283 mo
360.393 339.728 360.034 346.573 355.593 350.573 cv
355.593 350.573 li
351.148 354.574 344.304 354.213 340.301 349.772 cv
330.162 338.51 li
326.163 334.065 326.52 327.223 330.965 323.22 cv
330.965 323.22 li
335.408 319.222 342.251 319.581 346.251 324.022 cv
356.392 335.283 li
cp
level3{
gsave
clp
[11.2185 -10.1028 15.2014 16.8814 343.278 336.898 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[11.2185 -10.1028 15.2014 16.8814 343.278 336.898 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
325.283 368.741 mo
330.118 372.256 331.193 379.027 327.683 383.863 cv
327.683 383.863 li
324.168 388.698 317.395 389.77 312.557 386.259 cv
300.3 377.35 li
295.464 373.838 294.385 367.067 297.903 362.228 cv
297.903 362.228 li
301.418 357.393 308.189 356.319 313.025 359.832 cv
325.283 368.741 li
cp
level3{
gsave
clp
[8.87494 -12.2152 18.3787 13.3554 312.792 373.047 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.87494 -12.2152 18.3787 13.3554 312.792 373.047 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
321.177 625.608 mo
326.012 622.092 332.786 623.165 336.298 627.997 cv
336.298 627.997 li
339.813 632.838 338.744 639.607 333.902 643.122 cv
321.646 652.027 li
316.806 655.546 310.036 654.471 306.521 649.636 cv
306.521 649.636 li
303.009 644.798 304.08 638.027 308.917 634.51 cv
321.177 625.608 li
cp
level3{
gsave
clp
[-8.87487 -12.2151 18.3785 -13.3553 321.409 638.816 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-8.87487 -12.2151 18.3785 -13.3553 321.409 638.816 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
335.285 643.613 mo
339.728 639.609 346.576 639.967 350.575 644.409 cv
350.575 644.409 li
354.577 648.854 354.221 655.703 349.773 659.695 cv
338.512 669.841 li
334.069 673.843 327.226 673.479 323.224 669.039 cv
323.224 669.039 li
319.223 664.594 319.582 657.749 324.025 653.751 cv
335.285 643.613 li
cp
level3{
gsave
clp
[-10.1028 -11.2185 16.8815 -15.2015 336.9 656.725 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-10.1028 -11.2185 16.8815 -15.2015 336.9 656.725 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
368.743 674.721 mo
372.257 669.88 379.028 668.807 383.864 672.322 cv
383.864 672.322 li
388.704 675.838 389.777 682.605 386.26 687.443 cv
377.351 699.705 li
373.84 704.542 367.068 705.613 362.233 702.1 cv
362.233 702.1 li
357.394 698.584 356.321 691.814 359.835 686.975 cv
368.743 674.721 li
cp
level3{
gsave
clp
[-12.2138 -8.87394 13.3539 -18.3766 373.047 687.21 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-12.2138 -8.87394 13.3539 -18.3766 373.047 687.21 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
387.726 687.484 mo
390.715 682.302 397.337 680.529 402.512 683.518 cv
402.512 683.518 li
407.693 686.509 409.47 693.128 406.475 698.308 cv
398.898 711.431 li
395.911 716.61 389.291 718.38 384.112 715.394 cv
384.112 715.394 li
378.934 712.402 377.159 705.781 380.147 700.605 cv
387.726 687.484 li
cp
level3{
gsave
clp
[-13.0747 -7.54918 11.3589 -19.6728 393.312 699.456 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-13.0747 -7.54918 11.3589 -19.6728 393.312 699.456 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
625.611 678.825 mo
622.092 673.987 623.167 667.212 627.996 663.707 cv
627.996 663.707 li
632.843 660.188 639.609 661.256 643.122 666.098 cv
652.03 678.361 li
655.55 683.196 654.471 689.962 649.636 693.473 cv
649.636 693.473 li
644.788 696.993 638.026 695.918 634.51 691.084 cv
625.611 678.825 li
cp
level3{
gsave
clp
[-12.2137 8.87387 -13.3538 -18.3765 638.816 678.59 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-12.2137 8.87387 -13.3538 -18.3765 638.816 678.59 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
643.616 664.715 mo
639.609 660.272 639.968 653.424 644.409 649.432 cv
644.409 649.432 li
648.858 645.423 655.702 645.781 659.695 650.227 cv
669.842 661.49 li
673.847 665.933 673.482 672.777 669.037 676.774 cv
669.037 676.774 li
664.589 680.783 657.75 680.42 653.751 675.977 cv
643.616 664.715 li
cp
level3{
gsave
clp
[-11.2173 10.1017 -15.1998 -16.8796 656.725 663.103 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-11.2173 10.1017 -15.1998 -16.8796 656.725 663.103 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
674.724 631.257 mo
669.88 627.745 668.809 620.967 672.321 616.14 cv
672.321 616.14 li
675.836 611.295 682.607 610.221 687.442 613.741 cv
699.706 622.647 li
704.548 626.16 705.615 632.935 702.099 637.763 cv
702.099 637.763 li
698.58 642.608 691.813 643.679 686.974 640.164 cv
674.724 631.257 li
cp
level3{
gsave
clp
[-8.87382 12.2137 -18.3764 -13.3537 687.211 626.951 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-8.87382 12.2137 -18.3764 -13.3537 687.211 626.951 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
678.827 374.386 mo
673.985 377.906 667.211 376.834 663.714 371.998 cv
663.714 371.998 li
660.184 367.157 661.258 360.387 666.098 356.875 cv
678.358 347.967 li
683.197 344.449 689.968 345.527 693.47 350.363 cv
693.47 350.363 li
696.993 355.208 695.916 361.972 691.081 365.488 cv
678.827 374.386 li
cp
level3{
gsave
clp
[8.87168 12.2107 -18.3719 13.3505 678.592 361.179 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.87168 12.2107 -18.3719 13.3505 678.592 361.179 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
664.715 356.38 mo
660.272 360.391 653.426 360.03 649.437 355.589 cv
649.437 355.589 li
645.421 351.141 645.782 344.298 650.227 340.295 cv
661.492 330.156 li
665.932 326.15 672.784 326.519 676.772 330.958 cv
676.772 330.958 li
680.785 335.412 680.418 342.247 675.976 346.253 cv
664.715 356.38 li
cp
level3{
gsave
clp
[10.1017 11.2172 -16.8796 15.1998 663.104 343.272 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.1017 11.2172 -16.8796 15.1998 663.104 343.272 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
631.256 325.273 mo
627.744 330.116 620.968 331.191 616.147 327.673 cv
616.147 327.673 li
611.292 324.158 610.224 317.387 613.738 312.554 cv
622.649 300.291 li
626.158 295.451 632.941 294.384 637.763 297.9 cv
637.763 297.9 li
642.61 301.421 643.674 308.184 640.167 313.024 cv
631.256 325.273 li
cp
level3{
gsave
clp
[12.2115 8.87226 -13.3513 18.3731 626.953 312.786 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[12.2115 8.87226 -13.3513 18.3731 626.953 312.786 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
612.274 312.512 mo
609.285 317.694 602.663 319.474 597.502 316.477 cv
597.502 316.477 li
592.302 313.49 590.534 306.867 593.522 301.69 cv
601.104 288.566 li
604.093 283.384 610.717 281.615 615.885 284.605 cv
615.885 284.605 li
621.072 287.601 622.838 294.219 619.856 299.396 cv
612.274 312.512 li
cp
level3{
gsave
clp
[13.073 7.54823 -11.3574 19.6704 606.691 300.54 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[13.073 7.54823 -11.3574 19.6704 606.691 300.54 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
570.841 293.265 mo
568.996 298.957 562.884 302.073 557.217 300.215 cv
557.217 300.215 li
551.509 298.374 548.398 292.266 550.25 286.581 cv
554.933 272.166 li
556.776 266.477 562.896 263.367 568.568 265.219 cv
568.568 265.219 li
574.271 267.072 577.368 273.173 575.527 278.861 cv
570.841 293.265 li
cp
level3{
gsave
clp
[14.3548 4.66513 -7.01917 21.5988 562.89 282.716 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.3548 4.66513 -7.01917 21.5988 562.89 282.716 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
548.839 286.991 mo
547.602 292.846 541.852 296.585 536.016 295.332 cv
536.016 295.332 li
530.147 294.094 526.421 288.342 527.666 282.499 cv
530.818 267.671 li
532.056 261.82 537.815 258.089 543.652 259.339 cv
543.652 259.339 li
549.513 260.583 553.236 266.331 551.996 272.178 cv
548.839 286.991 li
cp
level3{
gsave
clp
[14.7641 3.13869 -4.72235 22.2157 539.831 277.334 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.7641 3.13869 -4.72235 22.2157 539.831 277.334 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
479.456 350.186 mo
479.456 361.009 470.629 369.785 459.746 369.785 cv
448.861 369.785 440.04 361.009 440.04 350.186 cv
440.04 339.362 448.861 330.587 459.746 330.587 cv
470.629 330.587 479.456 339.362 479.456 350.186 cv
cp
level3{
gsave
clp
[19.7077 0 0 19.5977 461.672 352.577 ]ct
/5 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.827451 .458824 .545098 ]
/C1 [.898039 .772549 .8 ]
/N 1.0846 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.827451 .458824 .545098 ]
/C1 [.701961 .215686 .364706 ]
/N 1.03726 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.701961 .215686 .364706 ]
/C1 [.501961 .156863 .258824 ]
/N 1.23377 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.501961 .156863 .258824 ]
/C1 [.501961 .156863 .258824 ]
/N 1 
>>
]
/Bounds [.24 .636667 .99 ]
/Encode [1 0 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[19.7077 0 0 19.5977 461.672 352.577 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~jlGL`j5]1Zio8qUiS`YPhr!>KhVR,Fh;-lAgt^Z=gY1B8g"G'3f\"j.f@SX*f%/C%e^`1!eC;sre'lan
daHOjdEp7ecd0q`cHa_[c-=JVbfe2QbK@uMaiVZGaN2EBa2Z-=`l5p9`5KU3_o'@._SO()^qdb#^V@Ls
^:q:o]tD"j]=Y\d]"5G_\[]/Z\$riT[^NTO[C!<JZa7!DZEgd@Z*CO;Yck75Y-"h-XK8J'WiE%tW2QVk
VPU,bUna]ZU7n6QT:_^HSXc4>S!ob5R$a5+QBd]!PEM)kOcYWbNfB$WMi3ILM26qBL4t>7K7ec,J:N0#
~>
<~`P]R.^V.:l\[])U['Hs@Y-"b)WMcViUS=HSSt2@>R?s5)PEM&hNfAsSM26n?KS+i+IsufmH?jaZG'.nK
F)uAAEH#l8Df0E/Ci!m%C2%BqB4kggARo=]@q&kT?sm>J?<piA>?b97=]ed-<`W4#<)Z^n;,L.d:JOYZ
9MA)P8kDTF7n6$<779O26:*t(5X.Is4Ztni4$#D_3&iiT2E!HO2E!HO2E!EM2)R6K2)I-H1c.$G1G^gC
1G^dA1,:U?1,1L<0ekC:0JG170/"t30/"q1/hSb./M/P+/M&G(/1`;%.k<,".Olnt.4H\p.4?Sm-n$Jl
~>
<~bf\&Ka2Z*:_SO%&^:h1j\[],W[C!9GYck43XK/A#W2HMhUS=HTT:VUDS!ob4Q^3o$PEM&iO,f3YN/NRN
M2@(FLkgb@L5(D9KS4u1K7\]+JUi9$It)orI=6KjH[C*cH?jd\G^"@TG'8"NFEDSFEcQ/>EH#l8Df0H0
D/=$(CMR["Bk_6oB4kggAS#C_A7K+Y@UW\Q?sd8I?<piA>[1N=>[1K;>?b97>$>*4=]nm0=BJ[,='&F'
<`W4#<E)ps<)Z^o;GpCi;,L.d:f'q`:JOY[9he>U9MA)P91hfK8P)HD84Q0?7Rfj977BU46UO4-6:+"*
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
517.353 360.184 mo
517.353 371.007 508.526 379.783 497.644 379.783 cv
486.759 379.783 477.938 371.007 477.938 360.184 cv
477.938 349.361 486.759 340.586 497.644 340.586 cv
508.526 340.586 517.353 349.361 517.353 360.184 cv
cp
level3{
gsave
clp
[19.7077 0 0 19.5977 499.568 362.575 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[19.7077 0 0 19.5977 499.568 362.575 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
554.135 369.862 mo
554.135 380.686 545.309 389.461 534.426 389.461 cv
523.541 389.461 514.719 380.686 514.719 369.862 cv
514.719 359.039 523.541 350.264 534.426 350.264 cv
545.309 350.264 554.135 359.039 554.135 369.862 cv
cp
level3{
gsave
clp
[19.7085 0 0 19.5985 536.35 372.253 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[19.7085 0 0 19.5985 536.35 372.253 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
591.732 379.59 mo
591.732 390.414 582.906 399.189 572.023 399.189 cv
561.138 399.189 552.315 390.414 552.315 379.59 cv
552.315 368.767 561.138 359.992 572.023 359.992 cv
582.906 359.992 591.732 368.767 591.732 379.59 cv
cp
level3{
gsave
clp
[19.7085 0 0 19.5985 573.946 381.981 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[19.7085 0 0 19.5985 573.946 381.981 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
359.985 442.883 mo
369.358 448.294 372.545 460.327 367.104 469.752 cv
361.661 479.179 349.651 482.43 340.277 477.019 cv
330.903 471.606 327.715 459.58 333.158 450.153 cv
338.599 440.728 350.612 437.471 359.985 442.883 cv
cp
level3{
gsave
clp
[9.85443 -17.0674 16.9731 9.79871 353.164 459.481 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.85443 -17.0674 16.9731 9.79871 353.164 459.481 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
387.592 415.063 mo
396.966 420.475 400.153 432.506 394.711 441.931 cv
389.269 451.357 377.258 454.609 367.885 449.197 cv
358.511 443.785 355.323 431.759 360.766 422.332 cv
366.207 412.907 378.218 409.651 387.592 415.063 cv
cp
level3{
gsave
clp
[9.85404 -17.0667 16.9724 9.79833 380.771 431.66 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.85404 -17.0667 16.9724 9.79833 380.771 431.66 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
414.365 388.047 mo
423.738 393.458 426.925 405.49 421.483 414.915 cv
416.041 424.342 404.031 427.594 394.657 422.182 cv
385.283 416.771 382.095 404.743 387.538 395.317 cv
392.979 385.892 404.992 382.635 414.365 388.047 cv
cp
level3{
gsave
clp
[9.85424 -17.0671 16.9728 9.79853 407.543 404.646 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.85424 -17.0671 16.9728 9.79853 407.543 404.646 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
441.589 360.352 mo
450.961 365.763 454.148 377.795 448.708 387.219 cv
443.265 396.646 431.253 399.898 421.881 394.487 cv
412.508 389.075 409.319 377.047 414.762 367.621 cv
420.203 358.196 432.215 354.94 441.589 360.352 cv
cp
level3{
gsave
clp
[9.85386 -17.0664 16.9721 9.79815 434.768 376.949 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.85386 -17.0664 16.9721 9.79815 434.768 376.949 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
380.528 592.697 mo
389.901 587.285 401.914 590.542 407.356 599.968 cv
412.798 609.395 409.608 621.422 400.235 626.832 cv
390.863 632.245 378.853 628.992 373.41 619.565 cv
367.968 610.14 371.154 598.109 380.528 592.697 cv
cp
level3{
gsave
clp
[-9.85404 -17.0667 16.9724 -9.79833 391.491 606.902 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-9.85404 -17.0667 16.9724 -9.79833 391.491 606.902 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
370.238 554.878 mo
379.612 549.468 391.625 552.722 397.066 562.147 cv
402.508 571.574 399.319 583.6 389.945 589.013 cv
380.573 594.426 368.563 591.173 363.12 581.746 cv
357.679 572.32 360.865 560.291 370.238 554.878 cv
cp
level3{
gsave
clp
[-9.85442 -17.0674 16.9731 -9.79871 381.201 569.083 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-9.85442 -17.0674 16.9731 -9.79871 381.201 569.083 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
360.228 518.185 mo
369.602 512.772 381.614 516.029 387.056 525.454 cv
392.499 534.881 389.31 546.908 379.936 552.319 cv
370.563 557.732 358.553 554.479 353.111 545.053 cv
347.669 535.628 350.854 523.596 360.228 518.185 cv
cp
level3{
gsave
clp
[-9.85386 -17.0664 16.9721 -9.79815 371.19 532.39 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-9.85386 -17.0664 16.9721 -9.79815 371.19 532.39 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
349.856 480.76 mo
359.229 475.348 371.242 478.604 376.683 488.028 cv
382.125 497.456 378.937 509.483 369.563 514.895 cv
360.19 520.308 348.179 517.055 342.738 507.628 cv
337.295 498.203 340.482 486.172 349.856 480.76 cv
cp
level3{
gsave
clp
[-9.85424 -17.0671 16.9728 -9.79853 360.819 494.966 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-9.85424 -17.0671 16.9728 -9.79853 360.819 494.966 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
520.542 649.813 mo
520.54 638.991 529.368 630.214 540.251 630.214 cv
551.136 630.216 559.958 638.991 559.956 649.813 cv
559.958 660.637 551.136 669.411 540.251 669.411 cv
529.366 669.411 520.54 660.637 520.542 649.813 cv
cp
level3{
gsave
clp
[-19.7081 0 0 -19.5981 538.327 647.423 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-19.7081 0 0 -19.5981 538.327 647.423 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
482.645 639.815 mo
482.646 628.992 491.471 620.216 502.354 620.216 cv
513.239 620.218 522.058 628.992 522.06 639.815 cv
522.06 650.64 513.239 659.414 502.352 659.414 cv
491.47 659.414 482.646 650.64 482.645 639.815 cv
cp
level3{
gsave
clp
[-19.7081 0 0 -19.5981 500.43 637.425 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-19.7081 0 0 -19.5981 500.43 637.425 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
445.862 630.138 mo
445.861 619.313 454.688 610.538 465.571 610.538 cv
476.457 610.538 485.278 619.315 485.277 630.136 cv
485.278 640.962 476.456 649.734 465.571 649.734 cv
454.688 649.734 445.861 640.96 445.862 630.138 cv
cp
level3{
gsave
clp
[-19.7077 0 0 -19.5977 463.646 627.747 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-19.7077 0 0 -19.5977 463.646 627.747 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
408.265 620.407 mo
408.265 609.584 417.091 600.81 427.973 600.81 cv
438.859 600.81 447.681 609.584 447.681 620.407 cv
447.681 631.231 438.859 640.008 427.974 640.006 cv
417.091 640.008 408.265 631.231 408.265 620.407 cv
cp
level3{
gsave
clp
[-19.7081 0 0 -19.5981 426.05 618.019 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-19.7081 0 0 -19.5981 426.05 618.019 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
640.012 557.115 mo
630.639 551.705 627.451 539.671 632.894 530.246 cv
638.338 520.821 650.348 517.568 659.719 522.98 cv
669.095 528.393 672.282 540.419 666.84 549.847 cv
661.396 559.273 649.386 562.528 640.012 557.115 cv
cp
level3{
gsave
clp
[-9.85424 17.0671 -16.9728 -9.79852 646.833 540.519 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-9.85424 17.0671 -16.9728 -9.79852 646.833 540.519 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
612.405 584.938 mo
603.032 579.523 599.845 567.492 605.287 558.067 cv
610.729 548.643 622.738 545.392 632.112 550.803 cv
641.485 556.215 644.675 568.24 639.23 577.668 cv
633.791 587.093 621.778 590.348 612.405 584.938 cv
cp
level3{
gsave
clp
[-9.85386 17.0664 -16.9721 -9.79815 619.225 568.341 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-9.85386 17.0664 -16.9721 -9.79815 619.225 568.341 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
585.633 611.953 mo
576.258 606.54 573.073 594.509 578.515 585.083 cv
583.957 575.656 595.969 572.406 605.338 577.816 cv
614.714 583.229 617.901 595.256 612.459 604.681 cv
607.016 614.106 595.005 617.363 585.633 611.953 cv
cp
level3{
gsave
clp
[-9.85443 17.0674 -16.9731 -9.79871 592.453 595.356 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-9.85443 17.0674 -16.9731 -9.79871 592.453 595.356 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
558.407 639.647 mo
549.033 634.235 545.849 622.205 551.288 612.781 cv
556.732 603.353 568.743 600.1 578.116 605.513 cv
587.489 610.923 590.68 622.953 585.234 632.378 cv
579.794 641.806 567.781 645.06 558.407 639.647 cv
cp
level3{
gsave
clp
[-9.85424 17.0671 -16.9728 -9.79853 565.229 623.051 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-9.85424 17.0671 -16.9728 -9.79853 565.229 623.051 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
619.468 407.302 mo
610.096 412.714 598.081 409.458 592.641 400.031 cv
587.199 390.604 590.388 378.577 599.761 373.167 cv
609.135 367.754 621.144 371.006 626.587 380.433 cv
632.031 389.86 628.844 401.89 619.468 407.302 cv
cp
level3{
gsave
clp
[9.85405 17.0667 -16.9724 9.79834 608.506 393.096 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.85405 17.0667 -16.9724 9.79834 608.506 393.096 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
629.76 445.12 mo
620.385 450.532 608.371 447.276 602.93 437.851 cv
597.49 428.425 600.679 416.398 610.051 410.987 cv
619.427 405.575 631.434 408.826 636.876 418.254 cv
642.319 427.678 639.132 439.709 629.76 445.12 cv
cp
level3{
gsave
clp
[9.85424 17.0671 -16.9728 9.79852 618.796 430.916 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.85424 17.0671 -16.9728 9.79852 618.796 430.916 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
639.771 481.814 mo
630.395 487.227 618.384 483.97 612.94 474.544 cv
607.498 465.117 610.689 453.09 620.06 447.681 cv
629.435 442.267 641.444 445.521 646.885 454.947 cv
652.327 464.372 649.142 476.403 639.771 481.814 cv
cp
level3{
gsave
clp
[9.85424 17.0671 -16.9728 9.79853 628.806 467.609 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.85424 17.0671 -16.9728 9.79853 628.806 467.609 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
650.142 519.24 mo
640.768 524.653 628.757 521.394 623.315 511.971 cv
617.871 502.542 621.059 490.516 630.435 485.104 cv
639.806 479.691 651.819 482.943 657.26 492.372 cv
662.702 501.797 659.515 513.827 650.142 519.24 cv
cp
level3{
gsave
clp
[9.85424 17.0671 -16.9728 9.79853 639.18 505.033 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.85424 17.0671 -16.9728 9.79853 639.18 505.033 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
585.533 335.462 mo
583.569 339.465 567.044 354.042 564.391 352.75 cv
561.933 351.545 563.119 329.454 565.084 325.455 cv
567.044 321.448 573.213 320.44 578.86 323.209 cv
584.503 325.973 587.49 331.461 585.533 335.462 cv
cp
level3{
gsave
clp
[13.3665 16.9924 18.4869 -25.1259 571.225 332.827 ]ct
/6 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.431373 .729412 .254902 ]
/C1 [.823529 .960784 .745098 ]
/N 1.29783 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.431373 .729412 .254902 ]
/C1 [.278431 .501961 .145098 ]
/N 1.27683 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.278431 .501961 .145098 ]
/C1 [.145098 .258824 .0745098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.145098 .258824 .0745098 ]
/C1 [.145098 .258824 .0745098 ]
/N 1 
>>
]
/Bounds [.193333 .443333 .766667 ]
/Encode [1 0 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[13.3665 16.9924 18.4869 -25.1259 571.225 332.827 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~da-.[a2Pp2]t:e_Za$[7Wi)\gTq7dCR$Nu!O,]'SLPCJ6J:;onH$FLTF)l8>Df0E/D/F**CMR^#C2%Bq
BP1siAn>L`@q/tV@:3JM?=$oB>[(B8=]ed-<`W4"<)Z[l;,C%`:/+DT91hcH84Q-=77BX56pj=/6:*t(
5sR\"5<_7p4Ztni4?GVc3]]8]3&ilV2`<QO2)R3I1G^gB1,1L<0JG.5/hSb./M&G(.k<)!.Ocep-mpAi
-71#b,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`
~>
<~p%._Cmd9?*ki_*hj5JqQh;$`;f[eU&da?Ffc-4ARaiMNA`5BI.^q[Xu]tCth]"5G_\[]/Y[^NTN['R'D
Z*:F7Y-"e+Wi;qqVl$;dUS=HTT:VUDS!ob4Q^3o$PEM&iO,f0WMM[.EL4t;4JUi6!IXQTjH[9s^G^"=R
F`_\FEcH&:Df0E.Chmd"BkV-kAn>L_@q&kS?sd5G?!LT;>$4s/=&r=#<)Z[l;,C%`:/+DT91hcH84Q-<
779L06:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*
~>
<~^:Le\Z)t%(UnOBLR$EhqN/<:AJ:;iiF`VM=CM7<i@:*8C=B/9s:JFJR84H$86:!k%5X7S!5<h=q5!;%l
4?P_f4$#D`3B9&Y2`EZR2Dm?K1c$pC1,1L;0J>(3/hJY+/1W5#.Ocep-mp>g,paf^,U=W[,9nEW+sJ3T
+X&!P+<VdL+<M[I+!2OF*Zc=B*??.?*#oq;)]K_8)B'M4)AsD1)&O2-(`4&*(Ddi&()@Z#'bqGu'GM5q
',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
400.273 343.658 mo
402.758 347.361 407.12 368.96 404.674 370.613 cv
402.401 372.138 383.863 360.066 381.383 356.363 cv
378.892 352.664 381.104 346.818 386.324 343.311 cv
391.539 339.804 397.786 339.963 400.273 343.658 cv
cp
level3{
gsave
clp
[21.3997 -3.07941 -12.5172 -28.5734 390.842 354.737 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[21.3997 -3.07941 -12.5172 -28.5734 390.842 354.737 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
314.74 508.196 mo
319.189 507.896 340.076 514.916 340.284 517.861 cv
340.469 520.593 320.746 530.612 316.299 530.907 cv
311.848 531.215 307.893 526.375 307.464 520.102 cv
307.036 513.833 310.297 508.501 314.74 508.196 cv
cp
level3{
gsave
clp
[8.03304 -20.0713 -31.0033 -3.44742 319.621 521.895 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.03304 -20.0713 -31.0033 -3.44742 319.621 521.895 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
414.469 664.538 mo
416.433 660.535 432.956 645.958 435.61 647.249 cv
438.069 648.455 436.883 670.546 434.916 674.545 cv
432.958 678.552 426.787 679.56 421.14 676.792 cv
415.499 674.029 412.509 668.541 414.469 664.538 cv
cp
level3{
gsave
clp
[-13.3665 -16.9924 -18.4869 25.1259 428.775 667.169 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-13.3665 -16.9924 -18.4869 25.1259 428.775 667.169 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
599.728 656.342 mo
597.244 652.639 592.882 631.041 595.328 629.387 cv
597.601 627.861 616.139 639.934 618.618 643.637 cv
621.109 647.336 618.896 653.184 613.676 656.69 cv
608.463 660.195 602.217 660.039 599.728 656.342 cv
cp
level3{
gsave
clp
[-21.3998 3.07942 12.5173 28.5735 609.166 645.272 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-21.3998 3.07942 12.5173 28.5735 609.166 645.272 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
685.26 491.804 mo
680.811 492.105 659.926 485.083 659.716 482.138 cv
659.531 479.407 679.256 469.388 683.703 469.092 cv
688.152 468.785 692.109 473.626 692.536 479.9 cv
692.964 486.167 689.705 491.499 685.26 491.804 cv
cp
level3{
gsave
clp
[-8.03319 20.0717 31.0039 3.44749 680.387 478.091 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-8.03319 20.0717 31.0039 3.44749 680.387 478.091 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
443.23 574.535 mo
447.557 572.596 451.95 571.269 456.309 570.52 cv
460.663 569.768 465.09 569.824 469.254 571.202 cv
471.332 571.894 473.306 572.938 475.104 574.28 cv
477.037 575.682 478.129 577.085 479.395 578.81 cv
480.609 580.514 481.763 582.342 482.854 584.313 cv
483.9 586.297 484.952 588.354 485.878 590.516 cv
484.596 588.602 483.412 586.684 482.155 584.927 cv
480.937 583.142 479.715 581.437 478.419 579.949 cv
476.121 577.015 472.406 574.325 468.574 573.113 cv
464.702 571.783 460.525 571.646 456.301 572.021 cv
454.18 572.207 452.035 572.564 449.864 573.011 cv
447.683 573.409 445.481 573.951 443.23 574.535 cv
cp
.568627 0 .4 rgb
f
571.145 564.065 mo
572.082 571.072 570.198 578.78 565.387 584.854 cv
562.959 587.843 559.76 590.318 556.155 591.812 cv
552.556 593.318 548.635 593.86 544.893 593.509 cv
541.14 593.176 537.575 592.016 534.37 590.334 cv
531.173 588.57 528.337 586.676 525.365 585.127 cv
519.505 581.978 513.701 579.789 508.146 580.385 cv
502.576 580.867 497.307 584.005 491.999 588.005 cv
490.67 589.007 489.341 590.072 488.016 591.171 cv
486.722 592.262 485.338 593.529 483.762 594.48 cv
480.668 596.444 477.104 597.774 473.279 598.297 cv
471.375 598.568 469.384 598.599 467.427 598.438 cv
465.692 598.354 463.966 598.104 462.276 597.656 cv
458.899 596.777 455.684 595.08 452.985 592.709 cv
447.569 587.906 444.485 580.785 443.679 573.792 cv
444.906 580.681 448.187 587.57 453.607 591.938 cv
456.261 594.18 459.37 595.651 462.611 596.412 cv
464.232 596.793 465.892 597 467.555 597.039 cv
469.297 597.116 471.257 597.067 473.021 596.754 cv
476.626 596.164 479.997 594.836 482.939 592.985 cv
484.427 592.085 485.68 590.925 487.076 589.755 cv
488.445 588.605 489.81 587.514 491.176 586.473 cv
496.633 582.334 502.086 578.93 507.967 578.362 cv
513.848 577.805 519.931 580.203 525.954 583.484 cv
528.976 585.079 532 587.095 535.036 588.78 cv
538.125 590.387 541.492 591.56 545.033 591.962 cv
548.563 592.372 552.259 591.962 555.686 590.625 cv
559.115 589.303 562.201 587.027 564.617 584.225 cv
569.514 578.593 571.646 571.059 571.145 564.065 cv
cp
.180392 .490196 0 rgb
f
571.3 564.209 mo
570.718 560.686 570.398 557.236 570.187 553.954 cv
569.982 550.669 569.924 547.548 570.177 544.647 cv
570.46 541.75 571.23 538.907 572.612 536.355 cv
573.979 533.777 576.004 531.454 578.441 529.342 cv
580.883 527.228 583.732 525.319 586.777 523.556 cv
589.899 521.81 592.902 520.156 595.53 517.801 cv
600.801 513.297 604.641 506.443 604.256 499.13 cv
604.025 491.827 599.68 485.146 593.987 481.128 cv
592.565 480.1 591.052 479.211 589.489 478.461 cv
588.693 478.084 587.916 477.756 587.089 477.437 cv
586.22 477.097 585.415 476.728 584.623 476.347 cv
581.452 474.824 578.57 473.137 576.01 471.335 cv
573.455 469.524 571.229 467.596 569.467 465.402 cv
567.713 463.201 566.418 460.736 565.542 457.937 cv
563.838 452.333 563.397 445.564 562.986 438.409 cv
563.826 445.493 564.431 452.13 566.404 457.486 cv
568.271 462.902 571.918 466.882 577.066 470.257 cv
579.621 471.938 582.472 473.52 585.521 474.956 cv
586.282 475.307 587.075 475.649 587.851 475.946 cv
588.668 476.247 589.543 476.586 590.352 476.966 cv
592 477.724 593.593 478.635 595.103 479.694 cv
601.118 483.824 605.969 490.963 606.28 499.047 cv
606.637 507.149 602.332 514.478 596.784 519.104 cv
594.047 521.512 590.741 523.265 587.777 524.871 cv
584.811 526.563 582.006 528.334 579.588 530.31 cv
577.172 532.285 575.155 534.471 573.755 536.927 cv
572.326 539.355 571.505 542.087 571.106 544.917 cv
570.363 550.538 570.663 557.155 571.3 564.209 cv
cp
f
535.907 423.52 mo
532.589 424.813 529.283 425.808 526.068 426.606 cv
522.855 427.393 519.711 427.96 516.666 428.077 cv
513.628 428.171 510.698 427.765 507.949 426.701 cv
505.2 425.637 502.647 423.905 500.284 421.719 cv
497.915 419.536 495.723 416.92 493.645 414.093 cv
491.579 411.183 489.6 408.401 486.965 406.061 cv
481.9 401.36 474.593 398.403 467.365 399.784 cv
460.125 401.02 454.109 406.343 451.077 412.595 cv
450.299 414.17 449.668 415.793 449.199 417.46 cv
448.954 418.289 448.779 419.124 448.6 419.997 cv
448.405 420.888 448.193 421.739 447.975 422.59 cv
447.088 425.961 446.062 429.104 444.902 431.966 cv
443.732 434.821 442.429 437.403 440.762 439.569 cv
439.094 441.735 437.042 443.481 434.556 444.865 cv
429.564 447.55 422.924 449.115 415.992 450.389 cv
422.791 448.706 429.257 447.007 433.938 444.106 cv
438.716 441.271 441.561 436.869 443.654 431.142 cv
444.7 428.299 445.631 425.199 446.461 421.939 cv
446.663 421.128 446.861 420.295 447.021 419.471 cv
447.17 418.61 447.367 417.72 447.598 416.848 cv
448.061 415.099 448.692 413.378 449.495 411.724 cv
452.578 405.122 458.981 399.215 467.004 397.788 cv
475.04 396.322 482.887 399.691 488.102 404.665 cv
490.797 407.103 492.918 410.179 494.827 412.942 cv
496.828 415.704 498.882 418.291 501.109 420.47 cv
503.34 422.643 505.748 424.394 508.375 425.498 cv
511 426.615 513.828 427.09 516.787 427.11 cv
522.714 427.143 529.174 425.586 535.907 423.52 cv
cp
.568627 0 .4 rgb
f
415.417 450.093 mo
412.618 443.652 412.179 435.822 415.413 428.558 cv
417.034 424.974 419.68 421.716 422.964 419.369 cv
426.24 417.002 430.117 415.626 433.926 415.247 cv
437.746 414.844 441.497 415.395 444.917 416.577 cv
448.346 417.845 451.381 419.35 454.464 420.53 cv
460.566 422.964 466.299 424.627 471.649 423.532 cv
477.015 422.571 482.008 418.958 486.868 414.444 cv
488.082 413.317 489.286 412.117 490.471 410.876 cv
491.627 409.662 492.846 408.229 494.27 407.107 cv
497.06 404.788 500.323 403.008 503.883 401.912 cv
507.434 400.811 511.304 400.422 515.1 400.995 cv
518.894 401.544 522.562 403.095 525.573 405.402 cv
531.652 410.094 534.732 417.314 535.455 424.263 cv
534.322 417.415 531.01 410.433 524.979 406.201 cv
519.071 401.816 510.98 401.062 504.334 403.396 cv
500.983 404.533 497.9 406.292 495.245 408.489 cv
493.897 409.573 492.798 410.86 491.551 412.187 cv
490.329 413.475 489.09 414.707 487.841 415.889 cv
482.843 420.571 477.663 424.445 472.013 425.526 cv
466.357 426.614 460.378 424.749 454.118 422.226 cv
450.987 421.005 447.747 419.413 444.495 418.208 cv
441.206 417.092 437.661 416.51 434.052 416.796 cv
430.451 417.071 426.813 418.289 423.682 420.43 cv
420.547 422.557 417.976 425.574 416.317 428.964 cv
412.901 435.811 413.032 443.553 415.417 450.093 cv
cp
.180392 .490196 0 rgb
f
415.233 449.998 mo
416.757 453.208 417.997 456.426 419.035 459.556 cv
420.071 462.694 420.879 465.765 421.234 468.778 cv
421.579 471.789 421.407 474.734 420.567 477.566 cv
419.729 480.396 418.209 483.095 416.207 485.633 cv
414.212 488.176 411.765 490.572 409.09 492.845 cv
406.338 495.112 403.68 497.253 401.502 500 cv
397.108 505.297 394.459 512.548 395.967 519.557 cv
397.301 526.581 402.526 532.401 408.677 535.52 cv
410.213 536.315 411.817 536.986 413.457 537.525 cv
414.282 537.798 415.101 538.022 415.958 538.239 cv
416.857 538.474 417.695 538.745 418.528 539.032 cv
421.85 540.181 424.892 541.582 427.612 543.116 cv
430.325 544.663 432.708 546.336 434.62 548.297 cv
436.541 550.253 437.994 552.516 439.12 555.16 cv
441.291 560.472 442.504 567.217 443.396 574.262 cv
442.083 567.321 440.726 560.732 438.309 555.705 cv
435.989 550.602 432.112 547.143 426.664 544.288 cv
423.962 542.881 420.969 541.588 417.785 540.512 cv
416.997 540.246 416.172 540.003 415.367 539.801 cv
414.52 539.6 413.624 539.368 412.773 539.099 cv
411.053 538.559 409.373 537.879 407.75 537.061 cv
401.293 533.907 395.504 527.703 393.978 519.957 cv
392.38 512.193 395.395 504.412 400.042 498.951 cv
402.312 496.138 405.248 493.844 407.868 491.741 cv
410.476 489.553 412.899 487.299 414.901 484.9 cv
416.898 482.501 418.44 479.946 419.333 477.236 cv
420.235 474.527 420.488 471.677 420.264 468.731 cv
419.823 462.847 417.777 456.562 415.233 449.998 cv
cp
f
443.068 574.807 mo
436.395 576.955 428.416 576.516 421.485 572.29 cv
418.039 570.204 415.132 567.078 413.208 563.529 cv
411.269 559.979 410.313 556.043 410.374 552.278 cv
410.375 548.504 411.222 544.886 412.617 541.576 cv
414.076 538.265 415.67 535.277 416.873 532.164 cv
419.357 526.057 420.894 520.131 419.588 514.635 cv
418.398 509.129 414.53 504.183 409.735 499.587 cv
408.534 498.437 407.261 497.31 405.948 496.205 cv
404.653 495.137 403.158 494.002 401.948 492.661 cv
399.462 490.041 397.463 486.933 396.118 483.484 cv
394.773 480.046 394.087 476.243 394.37 472.429 cv
394.631 468.619 395.894 464.848 397.959 461.666 cv
402.177 455.243 409.132 451.606 416.006 450.396 cv
409.271 452.011 402.556 455.857 398.799 462.2 cv
394.894 468.431 394.757 476.516 397.569 482.932 cv
398.939 486.173 400.906 489.104 403.269 491.603 cv
404.429 492.878 405.781 493.885 407.182 495.041 cv
408.544 496.177 409.864 497.335 411.11 498.519 cv
416.093 503.242 420.245 508.377 421.568 514.21 cv
422.894 520.067 421.158 526.254 418.57 532.568 cv
417.32 535.738 415.62 538.922 414.219 542.083 cv
412.882 545.276 412.021 548.711 411.928 552.29 cv
411.79 555.859 412.609 559.573 414.351 562.955 cv
416.083 566.334 418.752 569.35 421.998 571.444 cv
428.476 575.789 436.329 576.529 443.068 574.807 cv
cp
.568627 0 .4 rgb
f
564.157 449.616 mo
565.004 448.358 565.956 447.2 566.906 446.028 cv
567.89 444.891 568.861 443.741 569.979 442.708 cv
569.171 443.987 568.201 445.147 567.249 446.314 cv
566.256 447.446 565.264 448.581 564.157 449.616 cv
cp
.180392 .490196 0 rgb
f
565.06 454.465 mo
566.486 452.878 568.007 451.392 569.52 449.902 cv
571.071 448.447 572.61 446.98 574.284 445.655 cv
572.884 447.269 571.347 448.737 569.823 450.22 cv
568.265 451.665 566.709 453.115 565.06 454.465 cv
cp
.568627 0 .4 rgb
f
566.978 460.233 mo
568.883 458.616 570.874 457.113 572.87 455.61 cv
574.889 454.149 576.906 452.677 579.04 451.374 cv
577.136 453 575.121 454.468 573.122 455.958 cv
571.093 457.407 569.072 458.872 566.978 460.233 cv
cp
.180392 .490196 0 rgb
f
571.112 466.287 mo
573.04 464.957 575.032 463.742 577.021 462.523 cv
579.038 461.345 581.044 460.155 583.15 459.128 cv
581.241 460.491 579.236 461.683 577.242 462.893 cv
575.218 464.059 573.201 465.23 571.112 466.287 cv
cp
.568627 0 .4 rgb
f
575.916 470.355 mo
577.533 469.473 579.207 468.728 580.879 467.981 cv
582.573 467.279 584.255 466.568 586.017 466.038 cv
584.402 466.929 582.718 467.647 581.042 468.385 cv
579.346 469.077 577.66 469.78 575.916 470.355 cv
cp
.180392 .490196 0 rgb
f
582.387 474.313 mo
583.247 473.806 584.164 473.447 585.078 473.08 cv
586.011 472.761 586.935 472.428 587.924 472.266 cv
587.067 472.788 586.148 473.137 585.232 473.5 cv
584.3 473.815 583.37 474.138 582.387 474.313 cv
cp
.568627 0 .4 rgb
f
590.095 484.131 mo
591.297 483.63 592.547 483.292 593.795 482.938 cv
595.056 482.641 596.31 482.324 597.617 482.197 cv
596.417 482.723 595.166 483.055 593.92 483.4 cv
592.656 483.693 591.397 483.996 590.095 484.131 cv
cp
.180392 .490196 0 rgb
f
590.213 488.965 mo
592.075 488.484 593.96 488.166 595.846 487.837 cv
597.74 487.564 599.632 487.273 601.554 487.187 cv
599.695 487.692 597.808 487.996 595.919 488.315 cv
594.022 488.581 592.131 488.854 590.213 488.965 cv
cp
.568627 0 .4 rgb
f
590.519 495.824 mo
592.884 495.511 595.259 495.37 597.635 495.222 cv
600.013 495.131 602.392 495.026 604.776 495.136 cv
602.407 495.456 600.028 495.569 597.655 495.706 cv
595.276 495.788 592.904 495.886 590.519 495.824 cv
cp
.180392 .490196 0 rgb
f
590.375 504.192 mo
592.45 504.021 594.523 504.016 596.593 503.996 cv
598.668 504.035 600.737 504.053 602.81 504.277 cv
600.732 504.475 598.664 504.464 596.589 504.475 cv
594.52 504.428 592.448 504.393 590.375 504.192 cv
cp
.568627 0 .4 rgb
f
590.022 511.145 mo
591.625 511.141 593.208 511.307 594.791 511.462 cv
596.368 511.673 597.948 511.87 599.5 512.267 cv
597.895 512.276 596.315 512.093 594.73 511.93 cv
593.156 511.712 591.577 511.509 590.022 511.145 cv
cp
.180392 .490196 0 rgb
f
590.517 517.646 mo
591.469 517.594 592.398 517.707 593.329 517.811 cv
594.251 517.969 595.176 518.109 596.076 518.439 cv
595.122 518.502 594.194 518.382 593.264 518.273 cv
592.342 518.114 591.417 517.963 590.517 517.646 cv
cp
.568627 0 .4 rgb
f
581.677 526.936 mo
583.137 527.082 584.568 527.38 585.999 527.663 cv
587.42 528.001 588.845 528.316 590.234 528.814 cv
588.767 528.695 587.339 528.388 585.906 528.101 cv
584.489 527.758 583.066 527.426 581.677 526.936 cv
cp
.180392 .490196 0 rgb
f
577.813 530.145 mo
579.648 530.539 581.44 531.075 583.235 531.602 cv
585.014 532.177 586.797 532.735 588.525 533.472 cv
586.683 533.099 584.896 532.551 583.102 532.018 cv
581.325 531.434 579.548 530.86 577.813 530.145 cv
cp
.568627 0 .4 rgb
f
573.696 534.867 mo
575.864 535.6 577.974 536.466 580.086 537.329 cv
582.176 538.237 584.272 539.136 586.292 540.211 cv
584.118 539.487 582.021 538.595 579.915 537.722 cv
577.831 536.805 575.736 535.9 573.696 534.867 cv
cp
.180392 .490196 0 rgb
f
570.627 541.704 mo
572.502 542.485 574.313 543.392 576.127 544.291 cv
577.918 545.232 579.717 546.161 581.435 547.254 cv
579.548 546.496 577.745 545.573 575.938 544.667 cv
574.149 543.717 572.356 542.771 570.627 541.704 cv
cp
.568627 0 .4 rgb
f
569.798 547.813 mo
571.152 548.551 572.424 549.405 573.696 550.259 cv
574.942 551.151 576.195 552.032 577.341 553.065 cv
575.98 552.338 574.723 551.461 573.453 550.6 cv
572.214 549.701 570.964 548.813 569.798 547.813 cv
cp
.180392 .490196 0 rgb
f
569.936 555.278 mo
570.764 555.709 571.495 556.265 572.229 556.808 cv
572.936 557.394 573.649 557.967 574.252 558.681 cv
573.416 558.26 572.689 557.698 571.956 557.151 cv
571.256 556.562 570.545 555.979 569.936 555.278 cv
cp
.568627 0 .4 rgb
f
566.43 567.776 mo
567.468 568.543 568.384 569.432 569.313 570.309 cv
570.2 571.228 571.101 572.13 571.867 573.175 cv
570.809 572.426 569.896 571.533 568.975 570.65 cv
568.091 569.728 567.202 568.815 566.43 567.776 cv
cp
.180392 .490196 0 rgb
f
562.57 570.656 mo
563.881 571.947 565.062 573.344 566.254 574.734 cv
567.399 576.164 568.563 577.58 569.565 579.131 cv
568.234 577.852 567.063 576.442 565.879 575.045 cv
564.738 573.611 563.59 572.188 562.57 570.656 cv
cp
.568627 0 .4 rgb
f
556.247 573.625 mo
557.755 575.573 559.121 577.613 560.493 579.651 cv
561.816 581.719 563.151 583.78 564.307 585.962 cv
562.791 584.019 561.449 581.962 560.087 579.917 cv
558.772 577.842 557.443 575.777 556.247 573.625 cv
cp
.180392 .490196 0 rgb
f
548.948 577.656 mo
550.18 579.437 551.272 581.301 552.371 583.157 cv
553.423 585.046 554.491 586.922 555.382 588.903 cv
554.129 587.135 553.05 585.261 551.957 583.397 cv
550.914 581.51 549.862 579.623 548.948 577.656 cv
cp
.568627 0 .4 rgb
f
542.906 581.033 mo
543.728 582.462 544.395 583.959 545.068 585.448 cv
545.691 586.964 546.326 588.472 546.778 590.058 cv
545.949 588.632 545.301 587.129 544.635 585.633 cv
544.018 584.115 543.387 582.606 542.906 581.033 cv
cp
.180392 .490196 0 rgb
f
537.669 585.063 mo
538.184 585.846 538.541 586.689 538.91 587.535 cv
539.228 588.396 539.559 589.254 539.715 590.181 cv
539.191 589.403 538.84 588.555 538.476 587.711 cv
538.16 586.845 537.837 585.986 537.669 585.063 cv
cp
.568627 0 .4 rgb
f
523.837 583.021 mo
524.342 584.109 524.692 585.246 525.061 586.381 cv
525.378 587.527 525.711 588.668 525.869 589.863 cv
525.344 588.778 524.996 587.64 524.636 586.508 cv
524.324 585.357 524.003 584.213 523.837 583.021 cv
cp
.180392 .490196 0 rgb
f
519.124 581.198 mo
519.625 582.781 519.979 584.392 520.342 586.002 cv
520.655 587.624 520.984 589.244 521.133 590.899 cv
520.611 589.322 520.271 587.705 519.915 586.091 cv
519.607 584.471 519.292 582.851 519.124 581.198 cv
cp
.568627 0 .4 rgb
f
512.92 579.927 mo
513.309 581.924 513.549 583.935 513.795 585.95 cv
513.99 587.965 514.199 589.979 514.219 592.012 cv
513.82 590.015 513.604 587.999 513.365 585.986 cv
513.18 583.972 512.978 581.955 512.92 579.927 cv
cp
.180392 .490196 0 rgb
f
505.274 580.609 mo
505.516 582.468 505.615 584.33 505.724 586.194 cv
505.781 588.061 505.854 589.928 505.746 591.8 cv
505.479 589.941 505.396 588.077 505.298 586.212 cv
505.245 584.346 505.188 582.479 505.274 580.609 cv
cp
.568627 0 .4 rgb
f
499.289 582.945 mo
499.361 584.407 499.279 585.854 499.204 587.303 cv
499.079 588.747 498.968 590.194 498.672 591.623 cv
498.593 590.161 498.693 588.714 498.775 587.268 cv
498.905 585.823 499.023 584.382 499.289 582.945 cv
cp
.180392 .490196 0 rgb
f
492.795 586.93 mo
492.871 587.833 492.788 588.716 492.716 589.602 cv
492.592 590.48 492.483 591.361 492.194 592.224 cv
492.106 591.317 492.197 590.435 492.274 589.55 cv
492.402 588.67 492.52 587.791 492.795 586.93 cv
cp
.568627 0 .4 rgb
f
481.959 583.664 mo
481.591 585.982 481.084 588.267 480.595 590.563 cv
480.053 592.841 479.539 595.125 478.827 597.368 cv
479.129 595.034 479.643 592.749 480.143 590.458 cv
480.697 588.184 481.25 585.907 481.959 583.664 cv
cp
.180392 .490196 0 rgb
f
478.874 579.756 mo
477.966 582.939 476.929 586.081 475.898 589.223 cv
474.815 592.347 473.752 595.479 472.481 598.545 cv
473.342 595.346 474.41 592.212 475.458 589.076 cv
476.557 585.956 477.649 582.836 478.874 579.756 cv
cp
.568627 0 .4 rgb
f
474.071 575.422 mo
472.596 579.227 470.963 582.959 469.34 586.697 cv
467.668 590.413 466.009 594.138 464.18 597.781 cv
465.657 593.977 467.298 590.249 468.923 586.51 cv
470.597 582.797 472.259 579.074 474.071 575.422 cv
cp
.180392 .490196 0 rgb
f
466.213 572.13 mo
464.912 575.591 463.46 578.986 462.019 582.389 cv
460.528 585.768 459.053 589.153 457.404 592.466 cv
458.694 588.999 460.154 585.607 461.6 582.208 cv
463.095 578.83 464.58 575.447 466.213 572.13 cv
cp
.568627 0 .4 rgb
f
459.344 571.58 mo
458.217 574.17 456.941 576.684 455.674 579.198 cv
454.357 581.689 453.053 584.185 451.573 586.589 cv
452.702 584.001 453.997 581.498 455.271 578.986 cv
456.592 576.5 457.897 574.006 459.344 571.58 cv
cp
.180392 .490196 0 rgb
f
451.58 572.709 mo
450.99 574.226 450.253 575.67 449.526 577.118 cv
448.753 578.54 447.995 579.971 447.067 581.314 cv
447.646 579.789 448.391 578.353 449.12 576.906 cv
449.899 575.483 450.668 574.06 451.58 572.709 cv
cp
.568627 0 .4 rgb
f
441.959 564.221 mo
440.803 566.261 439.526 568.229 438.265 570.202 cv
436.958 572.149 435.675 574.111 434.225 575.966 cv
435.328 573.887 436.608 571.924 437.878 569.954 cv
439.194 568.015 440.51 566.076 441.959 564.221 cv
cp
.180392 .490196 0 rgb
f
440.478 559.514 mo
438.508 562.175 436.435 564.751 434.367 567.331 cv
432.255 569.879 430.16 572.439 427.896 574.86 cv
429.826 572.168 431.926 569.611 434.009 567.043 cv
436.134 564.507 438.253 561.969 440.478 559.514 cv
cp
.568627 0 .4 rgb
f
437.917 554.072 mo
435.071 556.999 432.131 559.815 429.177 562.621 cv
426.186 565.388 423.197 568.157 420.031 570.739 cv
422.892 567.828 425.893 565.074 428.864 562.283 cv
431.872 559.535 434.861 556.767 437.917 554.072 cv
cp
.180392 .490196 0 rgb
f
433.203 548.66 mo
430.359 551.021 427.438 553.283 424.522 555.547 cv
421.57 557.77 418.634 560.011 415.564 562.076 cv
418.372 559.668 421.316 557.437 424.247 555.188 cv
427.208 552.982 430.168 550.772 433.203 548.66 cv
cp
.568627 0 .4 rgb
f
428.027 545.209 mo
425.666 546.76 423.232 548.179 420.797 549.59 cv
418.335 550.959 415.878 552.334 413.314 553.516 cv
415.677 551.973 418.136 550.598 420.579 549.196 cv
423.05 547.839 425.506 546.467 428.027 545.209 cv
cp
.180392 .490196 0 rgb
f
421.141 542.029 mo
419.782 542.928 418.347 543.686 416.917 544.451 cv
415.463 545.171 414.019 545.905 412.483 546.467 cv
413.837 545.55 415.277 544.807 416.709 544.046 cv
418.167 543.333 419.619 542.609 421.141 542.029 cv
cp
.568627 0 .4 rgb
f
418.727 530.6 mo
416.631 531.662 414.484 532.593 412.338 533.531 cv
410.171 534.426 408.016 535.338 405.783 536.077 cv
407.857 534.973 410.007 534.049 412.158 533.114 cv
414.328 532.229 416.495 531.341 418.727 530.6 cv
cp
.180392 .490196 0 rgb
f
420.044 525.76 mo
416.951 526.939 413.811 527.982 410.675 529.035 cv
407.522 530.034 404.377 531.054 401.167 531.877 cv
404.251 530.661 407.396 529.64 410.535 528.602 cv
413.691 527.612 416.847 526.616 420.044 525.76 cv
cp
.568627 0 .4 rgb
f
420.638 519.477 mo
416.699 520.544 412.729 521.458 408.755 522.369 cv
404.771 523.227 400.791 524.092 396.762 524.736 cv
400.704 523.682 404.687 522.818 408.662 521.924 cv
412.647 521.08 416.628 520.217 420.638 519.477 cv
cp
.180392 .490196 0 rgb
f
419.044 511.907 mo
415.432 512.688 411.794 513.326 408.16 513.973 cv
404.514 514.567 400.873 515.181 397.196 515.593 cv
400.803 514.775 404.444 514.162 408.083 513.527 cv
411.729 512.946 415.375 512.356 419.044 511.907 cv
cp
.568627 0 .4 rgb
f
415.927 506.191 mo
413.126 506.564 410.32 506.78 407.509 506.995 cv
404.699 507.161 401.889 507.336 399.064 507.307 cv
401.866 506.937 404.676 506.755 407.486 506.549 cv
410.297 506.395 413.107 506.221 415.927 506.191 cv
cp
.180392 .490196 0 rgb
f
411.019 500.282 mo
409.409 500.534 407.788 500.628 406.171 500.73 cv
404.551 500.78 402.931 500.847 401.303 500.725 cv
402.912 500.455 404.531 500.375 406.149 500.277 cv
407.769 500.232 409.392 500.176 411.019 500.282 cv
cp
.568627 0 .4 rgb
f
412.734 488.408 mo
410.391 488.507 408.052 488.457 405.709 488.421 cv
403.371 488.333 401.028 488.269 398.69 488.015 cv
401.033 487.869 403.375 487.922 405.716 487.965 cv
408.055 488.063 410.398 488.154 412.734 488.408 cv
cp
.180392 .490196 0 rgb
f
415.939 484.505 mo
412.634 484.312 409.344 483.972 406.052 483.64 cv
402.764 483.255 399.476 482.89 396.209 482.321 cv
399.52 482.481 402.81 482.844 406.102 483.188 cv
409.387 483.583 412.671 483.971 415.939 484.505 cv
cp
.568627 0 .4 rgb
f
419.058 478.996 mo
415.028 478.356 411.032 477.565 407.032 476.77 cv
403.047 475.922 399.059 475.079 395.12 474.018 cv
399.147 474.669 403.135 475.513 407.128 476.324 cv
411.112 477.188 415.1 478.031 419.058 478.996 cv
cp
.180392 .490196 0 rgb
f
420.7 471.507 mo
417.09 470.717 413.514 469.792 409.937 468.874 cv
406.373 467.904 402.803 466.955 399.287 465.804 cv
402.911 466.555 406.479 467.507 410.053 468.439 cv
413.613 469.422 417.176 470.398 420.7 471.507 cv
cp
.568627 0 .4 rgb
f
420.237 465.12 mo
417.543 464.271 414.908 463.278 412.272 462.283 cv
409.657 461.24 407.037 460.205 404.493 458.974 cv
407.185 459.831 409.806 460.861 412.438 461.867 cv
415.05 462.921 417.67 463.958 420.237 465.12 cv
cp
.180392 .490196 0 rgb
f
418.302 457.781 mo
416.745 457.303 415.25 456.681 413.75 456.068 cv
412.271 455.405 410.787 454.76 409.376 453.938 cv
410.941 454.396 412.431 455.032 413.928 455.652 cv
415.405 456.32 416.882 456.978 418.302 457.781 cv
cp
.568627 0 .4 rgb
f
425.484 447.613 mo
423.382 446.572 421.353 445.408 419.311 444.258 cv
417.298 443.063 415.269 441.891 413.338 440.55 cv
415.47 441.534 417.5 442.704 419.536 443.863 cv
421.543 445.068 423.553 446.272 425.484 447.613 cv
cp
.180392 .490196 0 rgb
f
430.099 445.892 mo
427.327 444.082 424.632 442.163 421.933 440.249 cv
419.265 438.289 416.584 436.351 414.033 434.234 cv
416.835 436.004 419.511 437.95 422.2 439.88 cv
424.857 441.852 427.518 443.818 430.099 445.892 cv
cp
.568627 0 .4 rgb
f
435.361 443 mo
432.258 440.354 429.254 437.6 426.258 434.833 cv
423.3 432.031 420.337 429.226 417.548 426.245 cv
420.641 428.909 423.588 431.719 426.569 434.501 cv
429.512 437.322 432.473 440.125 435.361 443 cv
cp
.180392 .490196 0 rgb
f
440.423 437.92 mo
437.865 435.258 435.398 432.508 432.926 429.764 cv
430.495 426.982 428.046 424.217 425.762 421.304 cv
428.365 423.933 430.805 426.708 433.262 429.466 cv
435.679 432.26 438.097 435.049 440.423 437.92 cv
cp
.568627 0 .4 rgb
f
443.42 432.582 mo
441.71 430.335 440.125 428.008 438.543 425.676 cv
437.006 423.317 435.462 420.962 434.102 418.485 cv
435.808 420.737 437.349 423.095 438.917 425.435 cv
440.441 427.803 441.984 430.161 443.42 432.582 cv
cp
.180392 .490196 0 rgb
f
446.004 425.59 mo
445.035 424.281 444.199 422.895 443.354 421.512 cv
442.553 420.104 441.737 418.705 441.09 417.205 cv
442.081 418.501 442.903 419.895 443.74 421.282 cv
444.534 422.696 445.334 424.103 446.004 425.59 cv
cp
.568627 0 .4 rgb
f
455.468 422.705 mo
454.358 420.637 453.372 418.506 452.375 416.391 cv
451.426 414.251 450.452 412.12 449.653 409.908 cv
450.823 411.945 451.802 414.079 452.79 416.201 cv
453.729 418.349 454.669 420.493 455.468 422.705 cv
cp
.180392 .490196 0 rgb
f
460.241 423.963 mo
459.021 420.884 457.932 417.762 456.838 414.643 cv
455.793 411.502 454.727 408.37 453.865 405.17 cv
455.128 408.234 456.188 411.369 457.269 414.497 cv
458.298 417.637 459.334 420.778 460.241 423.963 cv
cp
.568627 0 .4 rgb
f
466.345 424.574 mo
465.292 420.632 464.386 416.66 463.49 412.683 cv
462.645 408.694 461.797 404.709 461.18 400.677 cv
462.218 404.625 463.057 408.613 463.935 412.591 cv
464.762 416.58 465.608 420.563 466.345 424.574 cv
cp
.180392 .490196 0 rgb
f
473.685 423.135 mo
472.994 419.502 472.439 415.851 471.877 412.2 cv
471.368 408.545 470.836 404.891 470.515 401.206 cv
471.25 404.833 471.776 408.488 472.322 412.138 cv
472.816 415.798 473.318 419.457 473.685 423.135 cv
cp
.568627 0 .4 rgb
f
479.343 420.21 mo
479.076 417.4 478.964 414.585 478.854 411.771 cv
478.793 408.954 478.725 406.136 478.867 403.316 cv
479.128 406.128 479.2 408.945 479.299 411.758 cv
479.348 414.576 479.412 417.392 479.343 420.21 cv
cp
.180392 .490196 0 rgb
f
485.37 415.564 mo
485.197 413.942 485.184 412.319 485.158 410.697 cv
485.188 409.077 485.198 407.456 485.4 405.836 cv
485.591 407.46 485.592 409.081 485.611 410.702 cv
485.576 412.324 485.552 413.946 485.37 415.564 cv
cp
.568627 0 .4 rgb
f
497.871 418.062 mo
497.943 415.719 498.164 413.385 498.368 411.051 cv
498.625 408.723 498.858 406.391 499.281 404.075 cv
499.258 406.426 499.034 408.759 498.821 411.092 cv
498.555 413.419 498.293 415.747 497.871 418.062 cv
cp
.180392 .490196 0 rgb
f
501.501 421.54 mo
501.945 418.258 502.533 415.004 503.114 411.748 cv
503.745 408.506 504.357 405.256 505.172 402.047 cv
504.764 405.335 504.151 408.584 503.56 411.834 cv
502.915 415.079 502.28 418.322 501.501 421.54 cv
cp
.568627 0 .4 rgb
f
506.72 425.082 mo
507.674 421.116 508.776 417.193 509.887 413.271 cv
511.045 409.361 512.2 405.453 513.568 401.608 cv
512.603 405.571 511.445 409.479 510.322 413.398 cv
509.147 417.302 507.992 421.212 506.72 425.082 cv
cp
.180392 .490196 0 rgb
f
514.048 427.31 mo
515.121 423.773 516.329 420.284 517.529 416.789 cv
518.777 413.313 520.008 409.83 521.435 406.416 cv
520.397 409.968 519.166 413.45 517.953 416.938 cv
516.69 420.411 515.435 423.883 514.048 427.31 cv
cp
.568627 0 .4 rgb
f
520.473 427.344 mo
521.529 424.725 522.726 422.175 523.924 419.625 cv
525.165 417.098 526.403 414.567 527.826 412.125 cv
526.764 414.744 525.532 417.277 524.324 419.823 cv
523.07 422.345 521.833 424.875 520.473 427.344 cv
cp
.180392 .490196 0 rgb
f
527.954 426 mo
528.549 424.482 529.283 423.035 530.009 421.584 cv
530.782 420.157 531.538 418.722 532.466 417.374 cv
531.891 418.901 531.144 420.344 530.412 421.792 cv
529.632 423.217 528.864 424.643 527.954 426 cv
cp
.568627 0 .4 rgb
f
506.027 535.887 mo
508.238 544.069 504.508 552.194 497.696 554.035 cv
490.882 555.875 483.569 550.733 481.359 542.551 cv
479.148 534.37 482.878 526.244 489.691 524.404 cv
496.503 522.563 503.816 527.706 506.027 535.887 cv
cp
level3{
gsave
clp
[14.1237 0 0 14.1237 499.027 539.553 ]ct
/7 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.905882 .811765 .388235 ]
/C1 [1 1 1 ]
/N 1.0846 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.831373 .541176 .133333 ]
/C1 [.905882 .811765 .388235 ]
/N 1.25292 
>>
]
/Bounds [.327586 ]
/Encode [1 0 1 0 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.1237 0 0 14.1237 499.027 539.553 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#srVc]mr;?Hhqtg0cqYBs_q"XXYp\4FUp@e1Pp%7nKo^h\Go()ABnaZ/=nF5o8n*f]4md9E/mHj3+
m-F!'lK[["l07Hskih6okND$kk2tggk2tggjlPUcjlPUbjQ,C_jQ,@]j5]1[j5].Yio8tWio8qUiSibS
iS`YPi8EPOi8<GLhr!>Khqm5HhVR,GhVI#Dh;-oCh;-lAgt^]?gt^Z=gY:K;gY:K:g=k97g=k97g"G'3
g"G'3g"=s0f\"j/f\"j.f@SX+f@SX+f@JO(f%/F'f%/F'e^`4#e^`4#e^`4#eC<!teC<!teC<!teC<!t
~>
<~s8Muqr;6BfqYBp]p\+=Rp%7kIo()>?nF,i6mHs9,lg!d"l0.<nk2tdejQ#:[io/hRhr!;Ih;$f?gY1B7
g"=p.f%/C%eC;srdaHOjd*U+bcHa\Zbfn8Rb0%iJaN2EB`l?$;`Pf^4_ns:,_8*k$^V7Fq]tD"i]=YYc
\[f5[\$rfS[C*BK['R*EZE^[=Yct=7Y-+n/XK8M(X/`2!WMuhpVl-DhVPU,bUnjc\U8"?TTqJ'NT:_^H
SXl=AS=H(<R[T\5R@0G0Q^=&)QBmf$Q'@MtPEV2nP*1riOcYZdO,o?^NfK-ZNK&mUN/W[QMi3LNMMd:K
~>
<~s8;`gp@RqFmd06&k2bO[hVHr>f@A?tccsYTa2Ps4^V.7i\$`TKYcb(-W2?AbTq@mFR?s2'P)t]_MM[+B
K7SQ%I!U'^F`VSBDJa0(BP1me@U`bS@:3JM?X@&E?!LW=>?Y36=]nj/='&F'<E3$u<)Z^n;Gg:g:f'q`
:/4MX9h\5R91hfK8P)HD7n6'=7R]a66psC06:+")5sR\#5<h=q5!;%k4?P\e3]];^3B/uX2`EZR2Dm?L
1c.$F1GU^@0ekC:0JG.50.nk0/M/P*/1`;%.k3"u.4H\o-n$Jk-RU5f-71#b,paf^,U=TZ,9nBV+sJ3T
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
472.503 503.987 mo
474.714 512.17 470.983 520.295 464.171 522.136 cv
457.358 523.976 450.044 518.834 447.834 510.651 cv
445.624 502.471 449.354 494.345 456.167 492.505 cv
462.979 490.663 470.292 495.807 472.503 503.987 cv
cp
level3{
gsave
clp
[14.123 0 0 14.123 465.503 507.654 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.123 0 0 14.123 465.503 507.654 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
304.693 54.4336 mo
323.15 54.4336 li
323.15 43.0664 li
323.15 41.0352 323.022 39.6973 322.769 39.0527 cv
322.574 38.5649 322.164 38.1445 321.539 37.793 cv
320.699 37.3242 319.81 37.0898 318.873 37.0898 cv
317.466 37.0898 li
317.466 36.0059 li
334.458 36.0059 li
334.458 37.0898 li
333.052 37.0898 li
332.115 37.0898 331.226 37.3145 330.386 37.7637 cv
329.761 38.0762 329.336 38.5503 329.112 39.1846 cv
328.887 39.8193 328.775 41.1138 328.775 43.0664 cv
328.775 68.7012 li
328.775 70.7129 328.902 72.041 329.156 72.6855 cv
329.351 73.1738 329.751 73.5938 330.357 73.9453 cv
331.216 74.4141 332.115 74.6484 333.052 74.6484 cv
334.458 74.6484 li
334.458 75.7324 li
317.466 75.7324 li
317.466 74.6484 li
318.873 74.6484 li
320.494 74.6484 321.675 74.1699 322.417 73.2129 cv
322.905 72.5879 323.15 71.0845 323.15 68.7012 cv
323.15 56.6016 li
304.693 56.6016 li
304.693 68.7012 li
304.693 70.7129 304.82 72.041 305.074 72.6855 cv
305.269 73.1738 305.679 73.5938 306.304 73.9453 cv
307.144 74.4141 308.033 74.6484 308.97 74.6484 cv
310.406 74.6484 li
310.406 75.7324 li
293.384 75.7324 li
293.384 74.6484 li
294.791 74.6484 li
296.431 74.6484 297.622 74.1699 298.365 73.2129 cv
298.833 72.5879 299.068 71.0845 299.068 68.7012 cv
299.068 43.0664 li
299.068 41.0352 298.94 39.6973 298.687 39.0527 cv
298.492 38.5649 298.091 38.1445 297.486 37.793 cv
296.626 37.3242 295.728 37.0898 294.791 37.0898 cv
293.384 37.0898 li
293.384 36.0059 li
310.406 36.0059 li
310.406 37.0898 li
308.97 37.0898 li
308.033 37.0898 307.144 37.3145 306.304 37.7637 cv
305.699 38.0762 305.279 38.5503 305.044 39.1846 cv
304.81 39.8193 304.693 41.1138 304.693 43.0664 cv
304.693 54.4336 li
cp
0 0 0 rgb
f
342.076 57.3047 mo
354.498 57.3047 li
354.399 55.5864 354.194 54.375 353.882 53.6719 cv
353.394 52.5781 352.667 51.7192 351.7 51.0938 cv
350.733 50.4688 349.722 50.1563 348.667 50.1563 cv
347.046 50.1563 345.596 50.7861 344.317 52.0459 cv
343.038 53.3057 342.291 55.0591 342.076 57.3047 cv
cp
342.076 59.0039 mo
342.056 62.9883 343.023 66.1133 344.976 68.3789 cv
346.929 70.645 349.224 71.7773 351.861 71.7773 cv
353.619 71.7773 355.146 71.2939 356.446 70.3271 cv
357.745 69.3604 358.833 67.7051 359.712 65.3613 cv
360.621 65.9473 li
360.21 68.6235 359.019 71.0596 357.046 73.2568 cv
355.073 75.4541 352.603 76.5527 349.634 76.5527 cv
346.412 76.5527 343.653 75.2979 341.358 72.7881 cv
339.063 70.2788 337.916 66.9043 337.916 62.666 cv
337.916 58.0767 339.092 54.4971 341.446 51.9287 cv
343.799 49.3608 346.753 48.0762 350.308 48.0762 cv
353.315 48.0762 355.787 49.0679 357.72 51.0498 cv
359.654 53.0322 360.621 55.6836 360.621 59.0039 cv
342.076 59.0039 li
cp
f
371.636 56.2207 mo
371.636 66.2402 li
371.636 68.4082 371.724 69.834 371.9 70.5176 cv
372.173 71.6504 372.842 72.6465 373.907 73.5059 cv
374.971 74.3657 376.314 74.7949 377.935 74.7949 cv
379.888 74.7949 381.47 74.0332 382.681 72.5098 cv
384.263 70.5176 385.054 67.7153 385.054 64.1016 cv
385.054 60 384.156 56.8462 382.359 54.6387 cv
381.109 53.1152 379.625 52.3535 377.906 52.3535 cv
376.968 52.3535 376.041 52.5879 375.123 53.0566 cv
374.419 53.4082 373.257 54.4629 371.636 56.2207 cv
cp
362.261 51.5625 mo
370.523 48.2227 li
371.636 48.2227 li
371.636 54.4922 li
373.023 52.1294 374.415 50.4741 375.811 49.5264 cv
377.208 48.5791 378.677 48.1055 380.22 48.1055 cv
382.916 48.1055 385.162 49.1602 386.958 51.2695 cv
389.166 53.8477 390.269 57.207 390.269 61.3477 cv
390.269 65.9766 388.941 69.8047 386.285 72.832 cv
384.097 75.3125 381.343 76.5527 378.023 76.5527 cv
376.578 76.5527 375.328 76.3477 374.273 75.9375 cv
373.492 75.6445 372.613 75.0586 371.636 74.1797 cv
371.636 82.3535 li
371.636 84.189 371.749 85.3564 371.973 85.8545 cv
372.198 86.3525 372.588 86.748 373.145 87.041 cv
373.702 87.334 374.712 87.4805 376.177 87.4805 cv
376.177 88.5645 li
362.115 88.5645 li
362.115 87.4805 li
362.847 87.4805 li
363.921 87.4995 364.839 87.2944 365.601 86.8652 cv
365.972 86.6499 366.26 86.3037 366.465 85.8252 cv
366.67 85.3462 366.773 84.1304 366.773 82.1777 cv
366.773 56.8066 li
366.773 55.0684 366.695 53.9648 366.539 53.4961 cv
366.382 53.0273 366.133 52.6758 365.792 52.4414 cv
365.45 52.207 364.986 52.0898 364.4 52.0898 cv
363.931 52.0898 363.335 52.2266 362.613 52.5 cv
362.261 51.5625 li
cp
f
409.4 69.9609 mo
409.4 59.7363 li
406.451 60.9082 404.546 61.7388 403.687 62.2266 cv
402.144 63.0864 401.041 63.9844 400.376 64.9219 cv
399.712 65.8594 399.38 66.8848 399.38 67.998 cv
399.38 69.4043 399.8 70.5718 400.64 71.499 cv
401.48 72.4268 402.447 72.8906 403.541 72.8906 cv
405.025 72.8906 406.978 71.9141 409.4 69.9609 cv
cp
409.4 71.8652 mo
406.646 73.9941 404.917 75.2246 404.214 75.5566 cv
403.16 76.0444 402.037 76.2891 400.845 76.2891 cv
398.99 76.2891 397.461 75.6548 396.26 74.3848 cv
395.059 73.1152 394.458 71.4453 394.458 69.375 cv
394.458 68.0669 394.751 66.9336 395.337 65.9766 cv
396.138 64.6484 397.53 63.3984 399.512 62.2266 cv
401.495 61.0547 404.791 59.6294 409.4 57.9492 cv
409.4 56.8945 li
409.4 54.2188 408.975 52.3828 408.125 51.3867 cv
407.276 50.3906 406.041 49.8926 404.419 49.8926 cv
403.189 49.8926 402.212 50.2251 401.49 50.8887 cv
400.748 51.5527 400.376 52.3145 400.376 53.1738 cv
400.435 54.873 li
400.435 55.7715 400.206 56.4653 399.747 56.9531 cv
399.288 57.4414 398.687 57.6855 397.945 57.6855 cv
397.222 57.6855 396.631 57.4321 396.172 56.9238 cv
395.713 56.416 395.484 55.7227 395.484 54.8438 cv
395.484 53.1641 396.343 51.6211 398.062 50.2148 cv
399.781 48.8086 402.193 48.1055 405.298 48.1055 cv
407.681 48.1055 409.634 48.5059 411.158 49.3066 cv
412.31 49.9121 413.16 50.8594 413.707 52.1484 cv
414.058 52.9883 414.234 54.7075 414.234 57.3047 cv
414.234 66.416 li
414.234 68.9751 414.283 70.5425 414.38 71.1182 cv
414.478 71.6943 414.639 72.0806 414.864 72.2754 cv
415.088 72.4707 415.347 72.5684 415.64 72.5684 cv
415.953 72.5684 416.226 72.5 416.46 72.3633 cv
416.871 72.1099 417.662 71.3965 418.833 70.2246 cv
418.833 71.8652 li
416.646 74.7949 414.556 76.2598 412.564 76.2598 cv
411.607 76.2598 410.845 75.9272 410.279 75.2637 cv
409.712 74.6001 409.419 73.4668 409.4 71.8652 cv
cp
f
428.619 40.0781 mo
428.619 48.8965 li
434.888 48.8965 li
434.888 50.9473 li
428.619 50.9473 li
428.619 68.3496 li
428.619 70.0884 428.868 71.2603 429.366 71.8652 cv
429.864 72.4707 430.503 72.7734 431.285 72.7734 cv
431.929 72.7734 432.554 72.5732 433.16 72.1729 cv
433.765 71.7729 434.234 71.1816 434.566 70.4004 cv
435.708 70.4004 li
435.025 72.3149 434.058 73.7549 432.808 74.7217 cv
431.558 75.6885 430.269 76.1719 428.941 76.1719 cv
428.042 76.1719 427.164 75.9229 426.304 75.4248 cv
425.445 74.9268 424.81 74.2139 424.4 73.2861 cv
423.99 72.3589 423.785 70.9277 423.785 68.9941 cv
423.785 50.9473 li
419.537 50.9473 li
419.537 49.9805 li
420.611 49.5513 421.709 48.8232 422.833 47.7979 cv
423.956 46.7725 424.957 45.5566 425.835 44.1504 cv
426.285 43.4082 426.91 42.0513 427.71 40.0781 cv
428.619 40.0781 li
cp
f
444.322 34.0723 mo
445.142 34.0723 445.84 34.3608 446.417 34.9365 cv
446.993 35.5127 447.281 36.2109 447.281 37.0313 cv
447.281 37.8516 446.993 38.5547 446.417 39.1406 cv
445.84 39.7266 445.142 40.0195 444.322 40.0195 cv
443.501 40.0195 442.798 39.7266 442.212 39.1406 cv
441.626 38.5547 441.333 37.8516 441.333 37.0313 cv
441.333 36.2109 441.622 35.5127 442.198 34.9365 cv
442.774 34.3608 443.482 34.0723 444.322 34.0723 cv
cp
446.753 48.1055 mo
446.753 69.668 li
446.753 71.3481 446.875 72.4658 447.12 73.0225 cv
447.364 73.5791 447.725 73.9941 448.204 74.2676 cv
448.682 74.5415 449.556 74.6777 450.826 74.6777 cv
450.826 75.7324 li
437.789 75.7324 li
437.789 74.6777 li
439.097 74.6777 439.976 74.5508 440.425 74.2969 cv
440.875 74.0435 441.231 73.623 441.495 73.0371 cv
441.758 72.4512 441.89 71.3281 441.89 69.668 cv
441.89 59.3262 li
441.89 56.416 441.802 54.5317 441.626 53.6719 cv
441.49 53.0469 441.275 52.6128 440.982 52.3682 cv
440.689 52.124 440.289 52.002 439.781 52.002 cv
439.234 52.002 438.57 52.1484 437.789 52.4414 cv
437.378 51.3867 li
445.464 48.1055 li
446.753 48.1055 li
cp
f
461.958 40.0781 mo
461.958 48.8965 li
468.228 48.8965 li
468.228 50.9473 li
461.958 50.9473 li
461.958 68.3496 li
461.958 70.0884 462.208 71.2603 462.706 71.8652 cv
463.204 72.4707 463.843 72.7734 464.625 72.7734 cv
465.269 72.7734 465.894 72.5732 466.5 72.1729 cv
467.105 71.7729 467.574 71.1816 467.906 70.4004 cv
469.048 70.4004 li
468.365 72.3149 467.398 73.7549 466.148 74.7217 cv
464.898 75.6885 463.609 76.1719 462.281 76.1719 cv
461.382 76.1719 460.503 75.9229 459.644 75.4248 cv
458.785 74.9268 458.15 74.2139 457.74 73.2861 cv
457.33 72.3589 457.125 70.9277 457.125 68.9941 cv
457.125 50.9473 li
452.876 50.9473 li
452.876 49.9805 li
453.951 49.5513 455.049 48.8232 456.172 47.7979 cv
457.295 46.7725 458.296 45.5566 459.175 44.1504 cv
459.625 43.4082 460.25 42.0513 461.05 40.0781 cv
461.958 40.0781 li
cp
f
477.662 34.0723 mo
478.482 34.0723 479.18 34.3608 479.756 34.9365 cv
480.333 35.5127 480.621 36.2109 480.621 37.0313 cv
480.621 37.8516 480.333 38.5547 479.756 39.1406 cv
479.18 39.7266 478.482 40.0195 477.662 40.0195 cv
476.841 40.0195 476.138 39.7266 475.552 39.1406 cv
474.966 38.5547 474.673 37.8516 474.673 37.0313 cv
474.673 36.2109 474.961 35.5127 475.538 34.9365 cv
476.114 34.3608 476.822 34.0723 477.662 34.0723 cv
cp
480.093 48.1055 mo
480.093 69.668 li
480.093 71.3481 480.215 72.4658 480.459 73.0225 cv
480.704 73.5791 481.065 73.9941 481.543 74.2676 cv
482.022 74.5415 482.896 74.6777 484.166 74.6777 cv
484.166 75.7324 li
471.128 75.7324 li
471.128 74.6777 li
472.437 74.6777 473.316 74.5508 473.765 74.2969 cv
474.214 74.0435 474.571 73.623 474.834 73.0371 cv
475.098 72.4512 475.23 71.3281 475.23 69.668 cv
475.23 59.3262 li
475.23 56.416 475.142 54.5317 474.966 53.6719 cv
474.83 53.0469 474.615 52.6128 474.322 52.3682 cv
474.029 52.124 473.628 52.002 473.121 52.002 cv
472.574 52.002 471.91 52.1484 471.128 52.4414 cv
470.718 51.3867 li
478.804 48.1055 li
480.093 48.1055 li
cp
f
504.85 48.1055 mo
504.85 57.2461 li
503.883 57.2461 li
503.141 54.375 502.188 52.4224 501.025 51.3867 cv
499.864 50.3516 498.384 49.834 496.587 49.834 cv
495.22 49.834 494.117 50.1958 493.277 50.918 cv
492.437 51.6406 492.017 52.4414 492.017 53.3203 cv
492.017 54.4146 492.33 55.3521 492.955 56.1328 cv
493.56 56.9341 494.791 57.7837 496.646 58.6816 cv
500.923 60.7617 li
504.889 62.6953 506.871 65.2441 506.871 68.4082 cv
506.871 70.8501 505.947 72.8174 504.102 74.3115 cv
502.256 75.8057 500.191 76.5527 497.906 76.5527 cv
496.265 76.5527 494.39 76.2598 492.281 75.6738 cv
491.636 75.479 491.109 75.3809 490.699 75.3809 cv
490.25 75.3809 489.898 75.6348 489.644 76.1426 cv
488.677 76.1426 li
488.677 66.5625 li
489.644 66.5625 li
490.191 69.2974 491.236 71.3574 492.779 72.7441 cv
494.322 74.1313 496.05 74.8242 497.964 74.8242 cv
499.312 74.8242 500.411 74.4287 501.26 73.6377 cv
502.109 72.8467 502.535 71.8945 502.535 70.7813 cv
502.535 69.4336 502.061 68.3013 501.113 67.3828 cv
500.167 66.4648 498.277 65.3027 495.445 63.8965 cv
492.613 62.4902 490.757 61.2207 489.878 60.0879 cv
489 58.9746 488.56 57.5684 488.56 55.8691 cv
488.56 53.6621 489.317 51.8164 490.831 50.332 cv
492.344 48.8481 494.302 48.1055 496.705 48.1055 cv
497.759 48.1055 499.039 48.3301 500.542 48.7793 cv
501.539 49.0723 502.203 49.2188 502.535 49.2188 cv
502.848 49.2188 503.092 49.1504 503.268 49.0137 cv
503.443 48.8774 503.648 48.5742 503.883 48.1055 cv
504.85 48.1055 li
cp
f
536.344 72.8613 mo
538.609 73.3887 540.846 73.6523 543.053 73.6523 cv
546.588 73.6523 549.283 72.8569 551.139 71.2646 cv
552.994 69.6729 553.922 67.7051 553.922 65.3613 cv
553.922 63.8188 553.502 62.334 552.662 60.9082 cv
551.822 59.4829 550.455 58.3594 548.561 57.5391 cv
546.666 56.7188 544.322 56.3086 541.529 56.3086 cv
540.318 56.3086 539.283 56.3281 538.424 56.3672 cv
537.564 56.4067 536.871 56.4746 536.344 56.5723 cv
536.344 72.8613 li
cp
536.344 53.877 mo
537.066 54.0137 537.891 54.1162 538.818 54.1846 cv
539.746 54.2534 540.768 54.2871 541.881 54.2871 cv
544.732 54.2871 546.875 53.9795 548.311 53.3643 cv
549.746 52.749 550.846 51.8071 551.607 50.5371 cv
552.369 49.2676 552.75 47.8813 552.75 46.377 cv
552.75 44.0527 551.803 42.0703 549.908 40.4297 cv
548.014 38.7891 545.25 37.9688 541.617 37.9688 cv
539.664 37.9688 537.906 38.1841 536.344 38.6133 cv
536.344 53.877 li
cp
551.695 55.459 mo
554.449 56.0449 556.51 56.9824 557.877 58.2715 cv
559.771 60.0688 560.719 62.2661 560.719 64.8633 cv
560.719 66.8364 560.094 68.7261 558.844 70.5322 cv
557.594 72.3389 555.879 73.6572 553.701 74.4873 cv
551.523 75.3179 548.199 75.7324 543.727 75.7324 cv
524.977 75.7324 li
524.977 74.6484 li
526.471 74.6484 li
528.131 74.6484 529.322 74.1211 530.045 73.0664 cv
530.494 72.3828 530.719 70.9277 530.719 68.7012 cv
530.719 43.0371 li
530.719 40.5762 530.436 39.0234 529.869 38.3789 cv
529.107 37.5195 527.975 37.0898 526.471 37.0898 cv
524.977 37.0898 li
524.977 36.0059 li
542.145 36.0059 li
545.348 36.0059 547.916 36.2402 549.85 36.709 cv
552.779 37.4121 555.016 38.6572 556.559 40.4443 cv
558.102 42.2314 558.873 44.2871 558.873 46.6113 cv
558.873 48.6035 558.268 50.3862 557.057 51.958 cv
555.846 53.5303 554.059 54.6973 551.695 55.459 cv
cp
f
620.514 36.0059 mo
620.514 37.0898 li
619.107 37.3438 618.043 37.793 617.32 38.4375 cv
616.285 39.3945 615.367 40.8594 614.566 42.832 cv
600.709 76.6406 li
599.625 76.6406 li
584.742 42.3926 li
583.98 40.6348 583.443 39.561 583.131 39.1699 cv
582.643 38.5649 582.041 38.0908 581.328 37.749 cv
580.615 37.4077 579.654 37.188 578.443 37.0898 cv
578.443 36.0059 li
594.674 36.0059 li
594.674 37.0898 li
592.838 37.2656 591.646 37.5781 591.1 38.0273 cv
590.553 38.4771 590.279 39.0527 590.279 39.7559 cv
590.279 40.7329 590.729 42.2563 591.627 44.3262 cv
601.734 67.6172 li
611.109 44.6191 li
612.027 42.3535 612.486 40.7813 612.486 39.9023 cv
612.486 39.3359 612.203 38.7939 611.637 38.2764 cv
611.07 37.7593 610.113 37.3931 608.766 37.1777 cv
608.668 37.1587 608.502 37.1294 608.268 37.0898 cv
608.268 36.0059 li
620.514 36.0059 li
cp
f
626.344 34.0723 mo
627.164 34.0723 627.861 34.3608 628.438 34.9365 cv
629.014 35.5127 629.303 36.2109 629.303 37.0313 cv
629.303 37.8516 629.014 38.5547 628.438 39.1406 cv
627.861 39.7266 627.164 40.0195 626.344 40.0195 cv
625.523 40.0195 624.82 39.7266 624.234 39.1406 cv
623.648 38.5547 623.355 37.8516 623.355 37.0313 cv
623.355 36.2109 623.643 35.5127 624.219 34.9365 cv
624.795 34.3608 625.504 34.0723 626.344 34.0723 cv
cp
628.775 48.1055 mo
628.775 69.668 li
628.775 71.3481 628.896 72.4658 629.141 73.0225 cv
629.385 73.5791 629.746 73.9941 630.225 74.2676 cv
630.703 74.5415 631.578 74.6777 632.848 74.6777 cv
632.848 75.7324 li
619.811 75.7324 li
619.811 74.6777 li
621.119 74.6777 621.998 74.5508 622.447 74.2969 cv
622.896 74.0435 623.252 73.623 623.516 73.0371 cv
623.779 72.4512 623.912 71.3281 623.912 69.668 cv
623.912 59.3262 li
623.912 56.416 623.824 54.5317 623.648 53.6719 cv
623.512 53.0469 623.297 52.6128 623.004 52.3682 cv
622.711 52.124 622.311 52.002 621.803 52.002 cv
621.256 52.002 620.592 52.1484 619.811 52.4414 cv
619.4 51.3867 li
627.486 48.1055 li
628.775 48.1055 li
cp
f
644.039 48.1055 mo
644.039 54.1406 li
646.285 50.1172 648.59 48.1055 650.953 48.1055 cv
652.027 48.1055 652.916 48.4326 653.619 49.0869 cv
654.322 49.7417 654.674 50.498 654.674 51.3574 cv
654.674 52.1191 654.42 52.7637 653.912 53.291 cv
653.404 53.8184 652.799 54.082 652.096 54.082 cv
651.412 54.082 650.645 53.7451 649.795 53.0713 cv
648.945 52.3975 648.316 52.0605 647.906 52.0605 cv
647.555 52.0605 647.174 52.2559 646.764 52.6465 cv
645.885 53.4478 644.977 54.7661 644.039 56.6016 cv
644.039 69.4629 li
644.039 70.9473 644.225 72.0703 644.596 72.832 cv
644.85 73.3594 645.299 73.7988 645.943 74.1504 cv
646.588 74.502 647.516 74.6777 648.727 74.6777 cv
648.727 75.7324 li
634.986 75.7324 li
634.986 74.6777 li
636.354 74.6777 637.369 74.4629 638.033 74.0332 cv
638.521 73.7212 638.863 73.2231 639.059 72.5391 cv
639.156 72.207 639.205 71.2603 639.205 69.6973 cv
639.205 59.2969 li
639.205 56.1724 639.141 54.312 639.014 53.7158 cv
638.887 53.1201 638.652 52.686 638.311 52.4121 cv
637.969 52.1387 637.545 52.002 637.037 52.002 cv
636.432 52.002 635.748 52.1484 634.986 52.4414 cv
634.693 51.3867 li
642.809 48.1055 li
644.039 48.1055 li
cp
f
679.693 48.8965 mo
679.693 65.1563 li
679.693 68.2617 679.766 70.1616 679.912 70.8545 cv
680.059 71.5479 680.293 72.0313 680.615 72.3047 cv
680.938 72.5786 681.314 72.7148 681.744 72.7148 cv
682.35 72.7148 683.033 72.5493 683.795 72.2168 cv
684.205 73.2422 li
676.178 76.5527 li
674.859 76.5527 li
674.859 70.8691 li
672.555 73.3696 670.797 74.9414 669.586 75.5859 cv
668.375 76.2305 667.096 76.5527 665.748 76.5527 cv
664.244 76.5527 662.939 76.1177 661.836 75.249 cv
660.732 74.3804 659.967 73.2617 659.537 71.8945 cv
659.107 70.5278 658.893 68.5942 658.893 66.0938 cv
658.893 54.1113 li
658.893 52.8418 658.756 51.9629 658.482 51.4746 cv
658.209 50.9868 657.803 50.6104 657.266 50.3467 cv
656.729 50.083 655.758 49.9614 654.352 49.9805 cv
654.352 48.8965 li
663.756 48.8965 li
663.756 66.8555 li
663.756 69.356 664.189 70.9966 665.059 71.7773 cv
665.928 72.5586 666.979 72.9492 668.209 72.9492 cv
669.049 72.9492 670 72.6855 671.064 72.1582 cv
672.129 71.6309 673.395 70.625 674.859 69.1406 cv
674.859 53.9355 li
674.859 52.4121 674.58 51.3823 674.023 50.8447 cv
673.467 50.3076 672.311 50.02 670.553 49.9805 cv
670.553 48.8965 li
679.693 48.8965 li
cp
f
703.512 48.1055 mo
703.512 57.2461 li
702.545 57.2461 li
701.803 54.375 700.85 52.4224 699.688 51.3867 cv
698.525 50.3516 697.047 49.834 695.25 49.834 cv
693.883 49.834 692.779 50.1958 691.939 50.918 cv
691.1 51.6406 690.68 52.4414 690.68 53.3203 cv
690.68 54.4146 690.992 55.3521 691.617 56.1328 cv
692.223 56.9341 693.453 57.7837 695.309 58.6816 cv
699.586 60.7617 li
703.551 62.6953 705.533 65.2441 705.533 68.4082 cv
705.533 70.8501 704.609 72.8174 702.764 74.3115 cv
700.918 75.8057 698.854 76.5527 696.568 76.5527 cv
694.928 76.5527 693.053 76.2598 690.943 75.6738 cv
690.299 75.479 689.771 75.3809 689.361 75.3809 cv
688.912 75.3809 688.561 75.6348 688.307 76.1426 cv
687.34 76.1426 li
687.34 66.5625 li
688.307 66.5625 li
688.854 69.2974 689.898 71.3574 691.441 72.7441 cv
692.984 74.1313 694.713 74.8242 696.627 74.8242 cv
697.975 74.8242 699.072 74.4287 699.922 73.6377 cv
700.771 72.8467 701.197 71.8945 701.197 70.7813 cv
701.197 69.4336 700.723 68.3013 699.775 67.3828 cv
698.828 66.4648 696.939 65.3027 694.107 63.8965 cv
691.275 62.4902 689.42 61.2207 688.541 60.0879 cv
687.662 58.9746 687.223 57.5684 687.223 55.8691 cv
687.223 53.6621 687.979 51.8164 689.492 50.332 cv
691.006 48.8481 692.965 48.1055 695.367 48.1055 cv
696.422 48.1055 697.701 48.3301 699.205 48.7793 cv
700.201 49.0723 700.865 49.2188 701.197 49.2188 cv
701.51 49.2188 701.754 49.1504 701.93 49.0137 cv
702.105 48.8774 702.311 48.5742 702.545 48.1055 cv
703.512 48.1055 li
cp
f
218.232 114.929 mo
218.232 125.106 li
222.996 125.106 li
226.359 125.106 228.583 124.641 229.667 123.709 cv
230.75 122.777 231.292 121.521 231.292 119.938 cv
231.292 118.907 231.093 118.025 230.695 117.293 cv
230.296 116.561 229.672 115.983 228.823 115.562 cv
227.973 115.14 226.324 114.929 223.875 114.929 cv
218.232 114.929 li
cp
218.232 104.171 mo
218.232 112.222 li
222.96 112.222 li
225.246 112.222 226.845 111.853 227.759 111.114 cv
228.673 110.376 229.13 109.239 229.13 107.704 cv
229.13 106.638 228.767 105.782 228.041 105.138 cv
227.314 104.493 225.486 104.171 222.556 104.171 cv
218.232 104.171 li
cp
214.962 127.884 mo
214.962 101.394 li
222.767 101.394 li
223.962 101.394 224.979 101.417 225.817 101.464 cv
226.655 101.511 227.516 101.663 228.401 101.921 cv
229.286 102.179 230.044 102.568 230.677 103.09 cv
231.31 103.611 231.779 104.224 232.083 104.927 cv
232.388 105.63 232.541 106.433 232.541 107.335 cv
232.541 109.679 231.357 111.483 228.99 112.749 cv
228.99 112.89 li
230.783 113.265 232.183 114.053 233.191 115.254 cv
234.199 116.455 234.703 117.946 234.703 119.728 cv
234.703 122.247 233.797 124.236 231.987 125.695 cv
230.176 127.154 227.595 127.884 224.244 127.884 cv
214.962 127.884 li
cp
f
250.91 123.155 mo
250.91 117.39 li
246.539 117.589 243.729 118.072 242.481 118.84 cv
241.233 119.607 240.609 120.665 240.609 122.013 cv
240.609 124.392 242.05 125.581 244.933 125.581 cv
246.89 125.581 248.882 124.772 250.91 123.155 cv
cp
250.91 127.884 mo
250.91 125.669 li
249.257 126.864 247.898 127.623 246.832 127.945 cv
245.765 128.268 244.681 128.429 243.58 128.429 cv
241.81 128.429 240.339 127.843 239.167 126.671 cv
237.996 125.499 237.41 124.011 237.41 122.206 cv
237.41 119.897 238.28 118.16 240.02 116.994 cv
241.76 115.828 245.39 115.134 250.91 114.911 cv
250.91 114.313 li
250.91 112.931 250.5 111.908 249.679 111.246 cv
248.859 110.584 247.417 110.253 245.355 110.253 cv
243.539 110.253 241.517 110.722 239.291 111.659 cv
239.15 111.659 li
239.15 108.442 li
241.341 107.845 243.451 107.546 245.478 107.546 cv
248.419 107.546 250.573 108.094 251.938 109.189 cv
253.303 110.285 253.986 111.987 253.986 114.296 cv
253.986 127.884 li
250.91 127.884 li
cp
f
262.933 127.884 mo
259.839 127.884 li
259.839 100.216 li
262.933 100.216 li
262.933 127.884 li
cp
f
275.22 128.271 mo
271.119 128.271 269.068 126.015 269.068 121.503 cv
269.068 110.552 li
266.8 110.552 li
266.8 108.021 li
269.085 108.021 li
269.085 102.308 li
272.162 102.308 li
272.162 108.021 li
279.123 108.021 li
279.123 110.552 li
272.162 110.552 li
272.162 119.745 li
272.162 121.831 272.305 123.182 272.592 123.797 cv
272.879 124.412 273.316 124.863 273.902 125.15 cv
274.488 125.438 275.238 125.581 276.152 125.581 cv
277.019 125.581 277.974 125.37 279.017 124.948 cv
279.123 124.948 li
279.123 127.761 li
277.728 128.101 276.427 128.271 275.22 128.271 cv
cp
f
285.714 127.884 mo
282.621 127.884 li
282.621 108.021 li
285.714 108.021 li
285.714 127.884 li
cp
285.908 104.048 mo
282.41 104.048 li
282.41 100.831 li
285.908 100.831 li
285.908 104.048 li
cp
f
317.337 127.884 mo
317.337 116.757 li
317.337 114.612 317.188 113.18 316.889 112.459 cv
316.59 111.738 316.133 111.211 315.518 110.877 cv
314.903 110.543 314.126 110.376 313.189 110.376 cv
311.583 110.376 309.691 111.261 307.511 113.03 cv
307.582 113.64 307.617 114.419 307.617 115.368 cv
307.617 127.884 li
304.523 127.884 li
304.523 116.757 li
304.523 114.554 304.374 113.104 304.075 112.406 cv
303.776 111.709 303.325 111.196 302.721 110.868 cv
302.118 110.54 301.353 110.376 300.427 110.376 cv
298.751 110.376 296.882 111.231 294.82 112.942 cv
294.82 127.884 li
291.726 127.884 li
291.726 108.021 li
294.82 108.021 li
294.82 110.411 li
297.175 108.442 299.402 107.458 301.5 107.458 cv
304.207 107.458 306.035 108.542 306.984 110.71 cv
309.539 108.542 311.964 107.458 314.261 107.458 cv
318.375 107.458 320.431 109.954 320.431 114.946 cv
320.431 127.884 li
317.337 127.884 li
cp
f
333.966 110.095 mo
332.056 110.095 330.585 110.769 329.554 112.116 cv
328.523 113.464 328.007 115.415 328.007 117.97 cv
328.007 120.489 328.523 122.423 329.554 123.771 cv
330.585 125.118 332.056 125.792 333.966 125.792 cv
335.876 125.792 337.347 125.118 338.378 123.771 cv
339.41 122.423 339.925 120.489 339.925 117.97 cv
339.925 112.72 337.939 110.095 333.966 110.095 cv
cp
333.966 128.429 mo
331.142 128.429 328.91 127.494 327.269 125.625 cv
325.628 123.756 324.808 121.204 324.808 117.97 cv
324.808 114.735 325.634 112.175 327.287 110.288 cv
328.939 108.401 331.166 107.458 333.966 107.458 cv
336.767 107.458 338.994 108.396 340.646 110.271 cv
342.298 112.146 343.125 114.712 343.125 117.97 cv
343.125 121.228 342.301 123.785 340.655 125.643 cv
339.008 127.5 336.779 128.429 333.966 128.429 cv
cp
f
347.642 127.884 mo
347.642 108.021 li
350.736 108.021 li
350.736 111.079 li
353.22 109.04 355.511 108.021 357.609 108.021 cv
358.347 108.021 359.091 108.079 359.841 108.196 cv
359.841 111.431 li
359.718 111.431 li
358.746 111.196 357.761 111.079 356.765 111.079 cv
354.773 111.079 352.763 111.923 350.736 113.61 cv
350.736 127.884 li
347.642 127.884 li
cp
f
364.218 115.896 mo
375.873 115.896 li
375.779 111.946 373.968 109.972 370.441 109.972 cv
368.66 109.972 367.218 110.499 366.117 111.554 cv
365.015 112.608 364.382 114.056 364.218 115.896 cv
cp
371.478 128.341 mo
368.173 128.341 365.61 127.447 363.788 125.66 cv
361.965 123.873 361.054 121.345 361.054 118.075 cv
361.054 114.829 361.927 112.248 363.673 110.332 cv
365.419 108.416 367.734 107.458 370.617 107.458 cv
373.242 107.458 375.278 108.243 376.725 109.813 cv
378.172 111.384 378.896 113.622 378.896 116.528 cv
378.896 118.233 li
364.218 118.233 li
364.218 120.624 364.866 122.461 366.161 123.744 cv
367.456 125.027 369.246 125.669 371.531 125.669 cv
373.804 125.669 376.078 124.878 378.351 123.296 cv
378.492 123.296 li
378.492 126.653 li
375.667 127.778 373.33 128.341 371.478 128.341 cv
cp
f
416.83 125.915 mo
413.033 127.567 409.927 128.394 407.513 128.394 cv
403.294 128.394 400.016 127.198 397.678 124.808 cv
395.34 122.417 394.171 119.019 394.171 114.612 cv
394.171 110.335 395.361 106.983 397.74 104.558 cv
400.119 102.132 403.376 100.919 407.513 100.919 cv
410.572 100.919 413.671 101.722 416.812 103.327 cv
416.812 107.177 li
416.566 107.177 li
413.695 104.845 410.49 103.679 406.951 103.679 cv
404.044 103.679 401.756 104.651 400.086 106.597 cv
398.417 108.542 397.582 111.179 397.582 114.507 cv
397.582 117.987 398.452 120.709 400.192 122.672 cv
401.932 124.635 404.32 125.616 407.355 125.616 cv
409.582 125.616 411.662 125.194 413.595 124.351 cv
413.595 117.53 li
406.722 117.53 li
406.722 114.683 li
416.83 114.683 li
416.83 125.915 li
cp
f
421.734 127.884 mo
421.734 108.021 li
424.828 108.021 li
424.828 111.079 li
427.312 109.04 429.603 108.021 431.701 108.021 cv
432.439 108.021 433.183 108.079 433.933 108.196 cv
433.933 111.431 li
433.81 111.431 li
432.837 111.196 431.853 111.079 430.857 111.079 cv
428.865 111.079 426.855 111.923 424.828 113.61 cv
424.828 127.884 li
421.734 127.884 li
cp
f
444.304 110.095 mo
442.394 110.095 440.923 110.769 439.892 112.116 cv
438.861 113.464 438.345 115.415 438.345 117.97 cv
438.345 120.489 438.861 122.423 439.892 123.771 cv
440.923 125.118 442.394 125.792 444.304 125.792 cv
446.214 125.792 447.685 125.118 448.716 123.771 cv
449.748 122.423 450.263 120.489 450.263 117.97 cv
450.263 112.72 448.277 110.095 444.304 110.095 cv
cp
444.304 128.429 mo
441.48 128.429 439.248 127.494 437.607 125.625 cv
435.966 123.756 435.146 121.204 435.146 117.97 cv
435.146 114.735 435.972 112.175 437.625 110.288 cv
439.277 108.401 441.503 107.458 444.304 107.458 cv
447.105 107.458 449.332 108.396 450.984 110.271 cv
452.636 112.146 453.462 114.712 453.462 117.97 cv
453.462 121.228 452.639 123.785 450.993 125.643 cv
449.346 127.5 447.117 128.429 444.304 128.429 cv
cp
f
474.257 127.884 mo
471.164 127.884 li
471.164 125.493 li
468.761 127.45 466.458 128.429 464.255 128.429 cv
462.181 128.429 460.593 127.787 459.492 126.504 cv
458.39 125.221 457.839 123.384 457.839 120.993 cv
457.839 108.021 li
460.933 108.021 li
460.933 119.183 li
460.933 121.737 461.276 123.431 461.961 124.263 cv
462.647 125.095 463.763 125.511 465.31 125.511 cv
467.138 125.511 469.089 124.661 471.164 122.962 cv
471.164 108.021 li
474.257 108.021 li
474.257 127.884 li
cp
f
483.328 112.731 mo
483.328 124.333 li
485.085 125.118 486.714 125.511 488.214 125.511 cv
490.148 125.511 491.66 124.84 492.75 123.498 cv
493.839 122.156 494.384 120.261 494.384 117.812 cv
494.384 112.854 492.597 110.376 489.023 110.376 cv
487.125 110.376 485.226 111.161 483.328 112.731 cv
cp
483.328 126.741 mo
483.328 135.214 li
480.234 135.214 li
480.234 108.021 li
483.328 108.021 li
483.328 110.218 li
485.589 108.378 487.787 107.458 489.919 107.458 cv
492.263 107.458 494.126 108.369 495.509 110.191 cv
496.892 112.014 497.583 114.519 497.583 117.706 cv
497.583 120.835 496.746 123.378 495.07 125.335 cv
493.394 127.292 491.32 128.271 488.847 128.271 cv
486.96 128.271 485.121 127.761 483.328 126.741 cv
cp
f
535.641 101.394 mo
525.182 127.884 li
522.158 127.884 li
511.699 101.394 li
515.197 101.394 li
523.775 123.419 li
532.318 101.394 li
535.641 101.394 li
cp
f
548.314 127.884 mo
538.102 127.884 li
538.102 125.44 li
541.582 125.44 li
541.582 103.837 li
538.102 103.837 li
538.102 101.394 li
548.314 101.394 li
548.314 103.837 li
544.852 103.837 li
544.852 125.44 li
548.314 125.44 li
548.314 127.884 li
cp
f
562.834 127.884 mo
552.621 127.884 li
552.621 125.44 li
556.102 125.44 li
556.102 103.837 li
552.621 103.837 li
552.621 101.394 li
562.834 101.394 li
562.834 103.837 li
559.371 103.837 li
559.371 125.44 li
562.834 125.44 li
562.834 127.884 li
cp
f
590.713 135.214 mo
586.969 135.214 li
584.578 132.437 582.846 129.647 581.773 126.847 cv
580.701 124.046 580.166 120.999 580.166 117.706 cv
580.166 111.343 582.434 105.513 586.969 100.216 cv
590.713 100.216 li
590.713 100.392 li
588.381 102.442 586.514 105 585.113 108.064 cv
583.713 111.129 583.014 114.343 583.014 117.706 cv
583.014 121.081 583.711 124.295 585.105 127.348 cv
586.5 130.4 588.369 132.964 590.713 135.038 cv
590.713 135.214 li
cp
f
608.871 123.173 mo
608.871 111.413 li
607.137 110.616 605.514 110.218 604.002 110.218 cv
602.057 110.218 600.539 110.9 599.449 112.266 cv
598.359 113.631 597.814 115.55 597.814 118.022 cv
597.814 123.015 599.602 125.511 603.176 125.511 cv
605.18 125.511 607.078 124.731 608.871 123.173 cv
cp
608.871 127.884 mo
608.871 125.687 li
606.609 127.515 604.418 128.429 602.297 128.429 cv
599.953 128.429 598.086 127.509 596.697 125.669 cv
595.309 123.829 594.615 121.315 594.615 118.128 cv
594.615 114.976 595.453 112.409 597.129 110.429 cv
598.805 108.448 600.873 107.458 603.334 107.458 cv
605.057 107.458 606.902 107.979 608.871 109.022 cv
608.871 100.216 li
611.965 100.216 li
611.965 127.884 li
608.871 127.884 li
cp
f
623.549 128.358 mo
621.064 128.358 618.732 127.813 616.553 126.724 cv
616.553 123.138 li
616.676 123.138 li
619.043 124.896 621.393 125.774 623.725 125.774 cv
626.994 125.774 628.629 124.743 628.629 122.681 cv
628.629 121.872 628.412 121.245 627.979 120.8 cv
627.545 120.354 626.643 119.974 625.271 119.657 cv
624.123 119.435 622.805 119.147 621.316 118.796 cv
619.828 118.444 618.676 117.826 617.861 116.941 cv
617.047 116.057 616.641 114.923 616.641 113.54 cv
616.641 111.782 617.355 110.344 618.785 109.225 cv
620.215 108.105 622.125 107.546 624.516 107.546 cv
626.977 107.546 629.139 108.026 631.002 108.987 cv
631.002 112.397 li
630.879 112.397 li
628.828 110.886 626.654 110.13 624.357 110.13 cv
622.939 110.13 621.82 110.391 621 110.912 cv
620.18 111.434 619.77 112.157 619.77 113.083 cv
619.77 113.903 619.988 114.53 620.428 114.964 cv
620.867 115.397 621.744 115.778 623.057 116.106 cv
626.941 116.95 li
628.547 117.302 629.754 117.92 630.563 118.805 cv
631.371 119.689 631.775 120.835 631.775 122.241 cv
631.775 124.058 631.031 125.531 629.543 126.662 cv
628.055 127.793 626.057 128.358 623.549 128.358 cv
cp
f
639.404 104.171 mo
639.404 125.106 li
642.814 125.106 li
646.998 125.106 650.039 124.222 651.938 122.452 cv
653.836 120.683 654.785 118.069 654.785 114.612 cv
654.785 111.331 653.824 108.771 651.902 106.931 cv
649.98 105.091 646.951 104.171 642.814 104.171 cv
639.404 104.171 li
cp
636.135 127.884 mo
636.135 101.394 li
642.516 101.394 li
646.242 101.394 649.172 101.88 651.305 102.853 cv
653.438 103.825 655.121 105.311 656.357 107.309 cv
657.594 109.307 658.213 111.759 658.213 114.665 cv
658.213 118.274 657.043 121.38 654.705 123.981 cv
652.367 126.583 648.328 127.884 642.586 127.884 cv
636.135 127.884 li
cp
f
683.262 127.884 mo
679.465 127.884 li
666.123 104.892 li
666.123 127.884 li
663.082 127.884 li
663.082 101.394 li
667.617 101.394 li
680.221 123.12 li
680.221 101.394 li
683.262 101.394 li
683.262 127.884 li
cp
f
703.389 117.601 mo
698.625 104.54 li
693.879 117.601 li
703.389 117.601 li
cp
707.098 127.884 mo
704.373 120.325 li
692.877 120.325 li
690.152 127.884 li
686.83 127.884 li
696.639 101.394 li
700.805 101.394 li
710.596 127.884 li
707.098 127.884 li
cp
f
723.445 117.776 mo
712.477 117.776 li
712.477 114.823 li
723.445 114.823 li
723.445 117.776 li
cp
f
732.393 104.171 mo
732.393 114.542 li
736.242 114.542 li
738.668 114.542 740.408 114.05 741.463 113.065 cv
742.518 112.081 743.045 110.646 743.045 108.759 cv
743.045 105.7 740.977 104.171 736.84 104.171 cv
732.393 104.171 li
cp
750.779 127.884 mo
746.508 127.884 li
737.789 117.231 li
732.393 117.231 li
732.393 127.884 li
729.123 127.884 li
729.123 101.394 li
736.629 101.394 li
740.156 101.394 742.678 102.056 744.195 103.38 cv
745.713 104.704 746.473 106.444 746.473 108.601 cv
746.473 112.245 744.686 114.812 741.111 116.3 cv
750.779 127.884 li
cp
f
759.393 127.884 mo
759.393 104.241 li
749.988 104.241 li
749.988 101.394 li
772.066 101.394 li
772.066 104.241 li
762.662 104.241 li
762.662 127.884 li
759.393 127.884 li
cp
f
778.553 135.214 mo
774.809 135.214 li
774.809 135.038 li
777.164 132.94 779.035 130.371 780.424 127.33 cv
781.813 124.289 782.508 121.081 782.508 117.706 cv
782.508 114.343 781.811 111.135 780.416 108.082 cv
779.021 105.029 777.152 102.466 774.809 100.392 cv
774.809 100.216 li
778.553 100.216 li
783.088 105.513 785.355 111.343 785.355 117.706 cv
785.355 120.987 784.824 124.022 783.764 126.812 cv
782.703 129.601 780.967 132.401 778.553 135.214 cv
cp
f
64.2695 345.898 mo
52.3486 345.898 li
52.3486 326.766 li
54.71 326.766 li
54.71 343.841 li
64.2695 343.841 li
64.2695 345.898 li
cp
f
68.8906 345.898 mo
66.6563 345.898 li
66.6563 331.552 li
68.8906 331.552 li
68.8906 345.898 li
cp
69.0303 328.683 mo
66.5039 328.683 li
66.5039 326.36 li
69.0303 326.36 li
69.0303 328.683 li
cp
f
75.4668 334.955 mo
75.4668 343.333 li
76.7363 343.901 77.9126 344.184 78.9961 344.184 cv
80.3926 344.184 81.4844 343.7 82.2715 342.73 cv
83.0586 341.761 83.4521 340.392 83.4521 338.624 cv
83.4521 335.043 82.1616 333.253 79.5801 333.253 cv
78.209 333.253 76.8379 333.821 75.4668 334.955 cv
cp
75.4668 345.073 mo
75.4668 351.192 li
73.2324 351.192 li
73.2324 331.552 li
75.4668 331.552 li
75.4668 333.139 li
77.1001 331.81 78.687 331.146 80.2275 331.146 cv
81.9204 331.146 83.2661 331.804 84.2646 333.121 cv
85.2632 334.436 85.7627 336.246 85.7627 338.547 cv
85.7627 340.807 85.1577 342.644 83.9473 344.057 cv
82.7368 345.47 81.2388 346.177 79.4531 346.177 cv
78.0903 346.177 76.7617 345.809 75.4668 345.073 cv
cp
f
91.3105 345.898 mo
89.0762 345.898 li
89.0762 331.552 li
91.3105 331.552 li
91.3105 345.898 li
cp
91.4502 328.683 mo
88.9238 328.683 li
88.9238 326.36 li
91.4502 326.36 li
91.4502 328.683 li
cp
f
104.92 342.496 mo
104.92 334.002 li
103.667 333.427 102.495 333.139 101.403 333.139 cv
99.9985 333.139 98.9023 333.632 98.1152 334.619 cv
97.3281 335.604 96.9346 336.99 96.9346 338.776 cv
96.9346 342.381 98.2251 344.184 100.807 344.184 cv
102.254 344.184 103.625 343.622 104.92 342.496 cv
cp
104.92 345.898 mo
104.92 344.311 li
103.287 345.631 101.704 346.292 100.172 346.292 cv
98.479 346.292 97.1313 345.627 96.1284 344.298 cv
95.1255 342.969 94.624 341.154 94.624 338.852 cv
94.624 336.576 95.229 334.722 96.4395 333.292 cv
97.6499 331.861 99.1436 331.146 100.921 331.146 cv
102.165 331.146 103.498 331.523 104.92 332.276 cv
104.92 325.916 li
107.154 325.916 li
107.154 345.898 li
104.92 345.898 li
cp
f
122.541 334.942 mo
122.541 343.448 li
123.811 344.015 124.987 344.298 126.07 344.298 cv
127.475 344.298 128.569 343.807 129.352 342.826 cv
130.135 341.844 130.526 340.456 130.526 338.662 cv
130.526 335.056 129.236 333.253 126.654 333.253 cv
125.283 333.253 123.912 333.816 122.541 334.942 cv
cp
122.554 345.136 mo
122.363 345.898 li
120.307 345.898 li
120.307 325.916 li
122.541 325.916 li
122.541 333.126 li
124.174 331.806 125.761 331.146 127.302 331.146 cv
128.986 331.146 130.33 331.81 131.333 333.139 cv
132.335 334.468 132.837 336.288 132.837 338.598 cv
132.837 340.883 132.232 342.737 131.021 344.159 cv
129.811 345.581 128.313 346.292 126.527 346.292 cv
125.131 346.292 123.806 345.907 122.554 345.136 cv
cp
f
138.385 345.898 mo
136.15 345.898 li
136.15 331.552 li
138.385 331.552 li
138.385 345.898 li
cp
138.524 328.683 mo
135.998 328.683 li
135.998 326.36 li
138.524 326.36 li
138.524 328.683 li
cp
f
144.986 345.898 mo
142.752 345.898 li
142.752 325.916 li
144.986 325.916 li
144.986 345.898 li
cp
f
157.986 342.483 mo
157.986 338.319 li
154.83 338.462 152.8 338.812 151.899 339.367 cv
150.998 339.92 150.547 340.684 150.547 341.658 cv
150.547 343.375 151.588 344.235 153.67 344.235 cv
155.083 344.235 156.522 343.651 157.986 342.483 cv
cp
157.986 345.898 mo
157.986 344.298 li
156.793 345.162 155.811 345.709 155.041 345.943 cv
154.271 346.175 153.488 346.292 152.692 346.292 cv
151.415 346.292 150.352 345.869 149.506 345.022 cv
148.66 344.175 148.236 343.101 148.236 341.797 cv
148.236 340.13 148.865 338.875 150.122 338.033 cv
151.378 337.191 154 336.69 157.986 336.529 cv
157.986 336.097 li
157.986 335.098 157.69 334.36 157.098 333.882 cv
156.505 333.404 155.464 333.165 153.975 333.165 cv
152.663 333.165 151.203 333.503 149.595 334.18 cv
149.493 334.18 li
149.493 331.857 li
151.076 331.425 152.599 331.209 154.063 331.209 cv
156.188 331.209 157.743 331.605 158.729 332.396 cv
159.715 333.188 160.208 334.417 160.208 336.084 cv
160.208 345.898 li
157.986 345.898 li
cp
f
176.382 331.552 mo
167.965 351.192 li
165.578 351.192 li
168.244 345.276 li
162.468 331.552 li
164.893 331.552 li
169.463 342.47 li
174.046 331.552 li
176.382 331.552 li
cp
f
179.975 337.24 mo
188.392 337.24 li
188.324 334.387 187.016 332.961 184.469 332.961 cv
183.182 332.961 182.141 333.342 181.346 334.104 cv
180.55 334.866 180.093 335.911 179.975 337.24 cv
cp
185.218 346.228 mo
182.831 346.228 180.979 345.583 179.664 344.292 cv
178.348 343.001 177.689 341.175 177.689 338.814 cv
177.689 336.469 178.32 334.605 179.581 333.222 cv
180.842 331.837 182.514 331.146 184.596 331.146 cv
186.492 331.146 187.962 331.713 189.007 332.847 cv
190.053 333.981 190.575 335.598 190.575 337.697 cv
190.575 338.928 li
179.975 338.928 li
179.975 340.655 180.442 341.982 181.377 342.908 cv
182.313 343.835 183.605 344.298 185.256 344.298 cv
186.898 344.298 188.54 343.727 190.182 342.584 cv
190.283 342.584 li
190.283 345.009 li
188.244 345.822 186.555 346.228 185.218 346.228 cv
cp
f
193.749 345.898 mo
193.749 331.552 li
195.983 331.552 li
195.983 333.761 li
197.778 332.289 199.432 331.552 200.947 331.552 cv
201.48 331.552 202.018 331.594 202.56 331.679 cv
202.56 334.015 li
202.471 334.015 li
201.768 333.846 201.057 333.761 200.338 333.761 cv
198.899 333.761 197.448 334.371 195.983 335.589 cv
195.983 345.898 li
193.749 345.898 li
cp
f
70.6553 377.098 mo
70.6553 369.062 li
70.6553 367.513 70.5474 366.478 70.3315 365.958 cv
70.1157 365.437 69.7856 365.056 69.3413 364.816 cv
68.897 364.574 68.3364 364.454 67.6592 364.454 cv
66.4995 364.454 65.1328 365.092 63.5586 366.371 cv
63.6094 366.811 63.6348 367.374 63.6348 368.059 cv
63.6348 377.098 li
61.4004 377.098 li
61.4004 369.062 li
61.4004 367.471 61.2925 366.423 61.0767 365.919 cv
60.8608 365.417 60.5352 365.046 60.0991 364.809 cv
59.6631 364.572 59.1108 364.454 58.4424 364.454 cv
57.2319 364.454 55.8823 365.072 54.3926 366.307 cv
54.3926 377.098 li
52.1582 377.098 li
52.1582 362.752 li
54.3926 362.752 li
54.3926 364.479 li
56.0938 363.057 57.7017 362.346 59.2168 362.346 cv
61.1719 362.346 62.4922 363.129 63.1777 364.695 cv
65.0229 363.129 66.7749 362.346 68.4336 362.346 cv
71.4043 362.346 72.8896 364.149 72.8896 367.754 cv
72.8896 377.098 li
70.6553 377.098 li
cp
f
78.3359 368.44 mo
86.7529 368.44 li
86.6851 365.587 85.3774 364.162 82.8301 364.162 cv
81.5435 364.162 80.5024 364.542 79.707 365.304 cv
78.9116 366.066 78.4546 367.111 78.3359 368.44 cv
cp
83.5791 377.428 mo
81.1924 377.428 79.3408 376.783 78.0249 375.492 cv
76.709 374.202 76.0508 372.375 76.0508 370.014 cv
76.0508 367.669 76.6812 365.806 77.9424 364.421 cv
79.2036 363.039 80.875 362.346 82.957 362.346 cv
84.853 362.346 86.3232 362.914 87.3687 364.047 cv
88.4141 365.181 88.9365 366.798 88.9365 368.897 cv
88.9365 370.128 li
78.3359 370.128 li
78.3359 371.855 78.8037 373.181 79.7388 374.109 cv
80.6738 375.035 81.9668 375.499 83.6172 375.499 cv
85.2593 375.499 86.9009 374.927 88.543 373.785 cv
88.6445 373.785 li
88.6445 376.209 li
86.605 377.022 84.9165 377.428 83.5791 377.428 cv
cp
f
110.607 377.098 mo
110.607 369.062 li
110.607 367.513 110.5 366.478 110.284 365.958 cv
110.068 365.437 109.738 365.056 109.293 364.816 cv
108.849 364.574 108.289 364.454 107.611 364.454 cv
106.452 364.454 105.085 365.092 103.511 366.371 cv
103.562 366.811 103.587 367.374 103.587 368.059 cv
103.587 377.098 li
101.353 377.098 li
101.353 369.062 li
101.353 367.471 101.245 366.423 101.029 365.919 cv
100.813 365.417 100.487 365.046 100.051 364.809 cv
99.6152 364.572 99.063 364.454 98.3945 364.454 cv
97.1841 364.454 95.8345 365.072 94.3447 366.307 cv
94.3447 377.098 li
92.1104 377.098 li
92.1104 362.752 li
94.3447 362.752 li
94.3447 364.479 li
96.0459 363.057 97.6538 362.346 99.1689 362.346 cv
101.124 362.346 102.444 363.129 103.13 364.695 cv
104.975 363.129 106.727 362.346 108.386 362.346 cv
111.356 362.346 112.842 364.149 112.842 367.754 cv
112.842 377.098 li
110.607 377.098 li
cp
f
119.291 366.142 mo
119.291 374.648 li
120.561 375.215 121.737 375.499 122.82 375.499 cv
124.225 375.499 125.319 375.007 126.102 374.026 cv
126.885 373.044 127.276 371.656 127.276 369.862 cv
127.276 366.256 125.986 364.454 123.404 364.454 cv
122.033 364.454 120.662 365.016 119.291 366.142 cv
cp
119.304 376.336 mo
119.113 377.098 li
117.057 377.098 li
117.057 357.116 li
119.291 357.116 li
119.291 364.327 li
120.924 363.006 122.511 362.346 124.052 362.346 cv
125.736 362.346 127.08 363.01 128.083 364.339 cv
129.085 365.668 129.587 367.488 129.587 369.798 cv
129.587 372.083 128.982 373.937 127.771 375.359 cv
126.561 376.781 125.063 377.492 123.277 377.492 cv
121.881 377.492 120.556 377.107 119.304 376.336 cv
cp
f
132.875 377.098 mo
132.875 362.752 li
135.109 362.752 li
135.109 364.961 li
136.904 363.489 138.558 362.752 140.073 362.752 cv
140.606 362.752 141.144 362.794 141.686 362.879 cv
141.686 365.215 li
141.597 365.215 li
140.894 365.046 140.183 364.961 139.464 364.961 cv
138.025 364.961 136.574 365.571 135.109 366.79 cv
135.109 377.098 li
132.875 377.098 li
cp
f
151.905 373.683 mo
151.905 369.519 li
148.749 369.663 146.719 370.012 145.818 370.566 cv
144.917 371.121 144.466 371.884 144.466 372.858 cv
144.466 374.576 145.507 375.435 147.589 375.435 cv
149.002 375.435 150.441 374.851 151.905 373.683 cv
cp
151.905 377.098 mo
151.905 375.499 li
150.712 376.362 149.73 376.91 148.96 377.142 cv
148.19 377.375 147.407 377.492 146.611 377.492 cv
145.333 377.492 144.271 377.069 143.425 376.222 cv
142.579 375.375 142.155 374.301 142.155 372.998 cv
142.155 371.331 142.784 370.076 144.041 369.234 cv
145.297 368.391 147.919 367.89 151.905 367.729 cv
151.905 367.297 li
151.905 366.298 151.609 365.56 151.017 365.082 cv
150.424 364.604 149.383 364.365 147.894 364.365 cv
146.582 364.365 145.122 364.704 143.514 365.38 cv
143.412 365.38 li
143.412 363.057 li
144.995 362.625 146.518 362.41 147.982 362.41 cv
150.107 362.41 151.662 362.805 152.648 363.597 cv
153.634 364.388 154.127 365.618 154.127 367.285 cv
154.127 377.098 li
151.905 377.098 li
cp
f
170.187 377.098 mo
167.952 377.098 li
167.952 369.062 li
167.952 367.2 167.707 365.966 167.216 365.361 cv
166.725 364.756 165.917 364.454 164.791 364.454 cv
163.462 364.454 162.053 365.072 160.563 366.307 cv
160.563 377.098 li
158.329 377.098 li
158.329 362.752 li
160.563 362.752 li
160.563 364.479 li
162.248 363.057 163.911 362.346 165.553 362.346 cv
167.034 362.346 168.176 362.81 168.98 363.736 cv
169.785 364.664 170.187 366.002 170.187 367.754 cv
170.187 377.098 li
cp
f
175.633 368.44 mo
184.05 368.44 li
183.982 365.587 182.674 364.162 180.127 364.162 cv
178.84 364.162 177.799 364.542 177.004 365.304 cv
176.208 366.066 175.751 367.111 175.633 368.44 cv
cp
180.876 377.428 mo
178.489 377.428 176.638 376.783 175.322 375.492 cv
174.006 374.202 173.348 372.375 173.348 370.014 cv
173.348 367.669 173.978 365.806 175.239 364.421 cv
176.5 363.039 178.172 362.346 180.254 362.346 cv
182.15 362.346 183.62 362.914 184.666 364.047 cv
185.711 365.181 186.233 366.798 186.233 368.897 cv
186.233 370.128 li
175.633 370.128 li
175.633 371.855 176.101 373.181 177.036 374.109 cv
177.971 375.035 179.264 375.499 180.914 375.499 cv
182.556 375.499 184.198 374.927 185.84 373.785 cv
185.941 373.785 li
185.941 376.209 li
183.902 377.022 182.213 377.428 180.876 377.428 cv
cp
f
159.175 188.568 mo
159.175 203.688 li
161.638 203.688 li
164.659 203.688 166.855 203.049 168.227 201.771 cv
169.598 200.493 170.283 198.605 170.283 196.109 cv
170.283 193.739 169.589 191.89 168.201 190.561 cv
166.813 189.232 164.625 188.568 161.638 188.568 cv
159.175 188.568 li
cp
156.813 205.694 mo
156.813 186.562 li
161.422 186.562 li
164.113 186.562 166.229 186.913 167.77 187.616 cv
169.31 188.318 170.526 189.391 171.419 190.834 cv
172.313 192.277 172.759 194.048 172.759 196.147 cv
172.759 198.754 171.915 200.997 170.226 202.875 cv
168.538 204.754 165.62 205.694 161.473 205.694 cv
156.813 205.694 li
cp
f
187.942 205.694 mo
185.708 205.694 li
185.708 197.658 li
185.708 195.796 185.462 194.562 184.972 193.957 cv
184.481 193.352 183.672 193.049 182.547 193.049 cv
181.218 193.049 179.809 193.667 178.319 194.903 cv
178.319 205.694 li
176.085 205.694 li
176.085 191.348 li
178.319 191.348 li
178.319 193.075 li
180.003 191.653 181.667 190.942 183.309 190.942 cv
184.79 190.942 185.932 191.405 186.736 192.332 cv
187.541 193.259 187.942 194.598 187.942 196.35 cv
187.942 205.694 li
cp
f
200.815 202.279 mo
200.815 198.115 li
197.659 198.259 195.629 198.608 194.728 199.162 cv
193.827 199.716 193.376 200.48 193.376 201.454 cv
193.376 203.172 194.417 204.031 196.499 204.031 cv
197.913 204.031 199.351 203.447 200.815 202.279 cv
cp
200.815 205.694 mo
200.815 204.094 li
199.622 204.958 198.64 205.505 197.87 205.738 cv
197.1 205.971 196.317 206.087 195.521 206.087 cv
194.244 206.087 193.181 205.664 192.335 204.818 cv
191.489 203.972 191.065 202.896 191.065 201.593 cv
191.065 199.926 191.694 198.671 192.951 197.829 cv
194.208 196.987 196.829 196.485 200.815 196.325 cv
200.815 195.893 li
200.815 194.895 200.519 194.156 199.927 193.678 cv
199.334 193.2 198.293 192.96 196.804 192.96 cv
195.492 192.96 194.032 193.299 192.424 193.976 cv
192.322 193.976 li
192.322 191.653 li
193.905 191.221 195.428 191.005 196.893 191.005 cv
199.017 191.005 200.572 191.401 201.558 192.192 cv
202.544 192.984 203.037 194.213 203.037 195.88 cv
203.037 205.694 li
200.815 205.694 li
cp
f
64.2695 830.955 mo
52.3486 830.955 li
52.3486 811.823 li
54.71 811.823 li
54.71 828.898 li
64.2695 828.898 li
64.2695 830.955 li
cp
f
75.2891 827.54 mo
75.2891 823.376 li
72.1323 823.52 70.103 823.869 69.2017 824.423 cv
68.3003 824.978 67.8496 825.741 67.8496 826.715 cv
67.8496 828.433 68.8906 829.292 70.9727 829.292 cv
72.3862 829.292 73.8247 828.708 75.2891 827.54 cv
cp
75.2891 830.955 mo
75.2891 829.355 li
74.0957 830.219 73.1138 830.767 72.3438 830.999 cv
71.5737 831.232 70.7905 831.349 69.9951 831.349 cv
68.7173 831.349 67.6548 830.926 66.8086 830.079 cv
65.9624 829.232 65.5391 828.158 65.5391 826.854 cv
65.5391 825.188 66.1675 823.933 67.4243 823.091 cv
68.6812 822.248 71.3027 821.747 75.2891 821.586 cv
75.2891 821.154 li
75.2891 820.155 74.9927 819.417 74.4004 818.938 cv
73.8081 818.461 72.7671 818.222 71.2773 818.222 cv
69.9653 818.222 68.5054 818.561 66.8975 819.237 cv
66.7959 819.237 li
66.7959 816.914 li
68.3784 816.482 69.9019 816.267 71.3662 816.267 cv
73.4907 816.267 75.0459 816.662 76.0317 817.454 cv
77.0176 818.245 77.5107 819.475 77.5107 821.142 cv
77.5107 830.955 li
75.2891 830.955 li
cp
f
81.7129 830.955 mo
81.7129 816.609 li
83.9473 816.609 li
83.9473 818.818 li
85.7417 817.346 87.396 816.609 88.9111 816.609 cv
89.4443 816.609 89.9819 816.651 90.5234 816.736 cv
90.5234 819.072 li
90.4346 819.072 li
89.7319 818.903 89.021 818.818 88.3018 818.818 cv
86.8628 818.818 85.4116 819.428 83.9473 820.646 cv
83.9473 830.955 li
81.7129 830.955 li
cp
f
101.683 827.007 mo
101.683 819.072 li
100.421 818.488 99.2451 818.196 98.1533 818.196 cv
96.7568 818.196 95.6714 818.657 94.897 819.58 cv
94.1226 820.503 93.7354 821.823 93.7354 823.541 cv
93.7354 826.96 95.0049 828.67 97.5439 828.67 cv
98.8896 828.67 100.269 828.115 101.683 827.007 cv
cp
103.917 829.33 mo
103.917 834.036 101.687 836.389 97.2266 836.389 cv
95.7622 836.389 94.3066 836.189 92.8594 835.792 cv
92.8594 833.481 li
92.9609 833.481 li
94.4419 834.091 95.9063 834.396 97.3535 834.396 cv
98.8179 834.396 99.9053 834.067 100.616 833.411 cv
101.327 832.756 101.683 831.695 101.683 830.231 cv
101.683 828.81 li
100.151 830.096 98.5469 830.739 96.8711 830.739 cv
95.1699 830.739 93.8369 830.113 92.8721 828.86 cv
91.9072 827.607 91.4248 825.873 91.4248 823.655 cv
91.4248 821.438 92.0195 819.642 93.2085 818.267 cv
94.3975 816.891 95.8726 816.203 97.6328 816.203 cv
99.021 816.203 100.371 816.58 101.683 817.333 cv
101.848 816.609 li
103.917 816.609 li
103.917 829.33 li
cp
f
109.465 822.297 mo
117.882 822.297 li
117.814 819.444 116.506 818.019 113.959 818.019 cv
112.672 818.019 111.631 818.399 110.836 819.161 cv
110.041 819.923 109.583 820.968 109.465 822.297 cv
cp
114.708 831.285 mo
112.321 831.285 110.47 830.64 109.154 829.349 cv
107.838 828.059 107.18 826.232 107.18 823.871 cv
107.18 821.526 107.81 819.663 109.071 818.278 cv
110.333 816.896 112.004 816.203 114.086 816.203 cv
115.982 816.203 117.452 816.771 118.498 817.904 cv
119.543 819.038 120.065 820.655 120.065 822.754 cv
120.065 823.985 li
109.465 823.985 li
109.465 825.712 109.933 827.038 110.868 827.966 cv
111.803 828.892 113.096 829.355 114.746 829.355 cv
116.388 829.355 118.03 828.784 119.672 827.642 cv
119.773 827.642 li
119.773 830.066 li
117.734 830.879 116.045 831.285 114.708 831.285 cv
cp
f
136.125 831.298 mo
134.331 831.298 132.646 830.904 131.072 830.117 cv
131.072 827.527 li
131.161 827.527 li
132.871 828.797 134.568 829.432 136.252 829.432 cv
138.613 829.432 139.794 828.687 139.794 827.197 cv
139.794 826.613 139.637 826.16 139.324 825.839 cv
139.011 825.518 138.359 825.242 137.369 825.014 cv
136.54 824.853 135.587 824.646 134.513 824.392 cv
133.438 824.138 132.606 823.691 132.018 823.052 cv
131.43 822.413 131.136 821.595 131.136 820.596 cv
131.136 819.326 131.652 818.287 132.685 817.479 cv
133.717 816.671 135.097 816.267 136.823 816.267 cv
138.601 816.267 140.162 816.613 141.508 817.308 cv
141.508 819.771 li
141.419 819.771 li
139.938 818.679 138.368 818.133 136.709 818.133 cv
135.685 818.133 134.876 818.321 134.284 818.698 cv
133.692 819.074 133.396 819.597 133.396 820.266 cv
133.396 820.858 133.554 821.311 133.872 821.624 cv
134.189 821.938 134.822 822.212 135.77 822.449 cv
138.575 823.059 li
139.735 823.313 140.606 823.759 141.19 824.397 cv
141.774 825.037 142.066 825.864 142.066 826.88 cv
142.066 828.191 141.529 829.256 140.454 830.073 cv
139.379 830.89 137.936 831.298 136.125 831.298 cv
cp
f
156.78 830.955 mo
154.546 830.955 li
154.546 829.229 li
152.811 830.642 151.148 831.349 149.557 831.349 cv
148.059 831.349 146.912 830.886 146.116 829.958 cv
145.321 829.032 144.923 827.705 144.923 825.979 cv
144.923 816.609 li
147.157 816.609 li
147.157 824.671 li
147.157 826.516 147.405 827.739 147.9 828.34 cv
148.395 828.94 149.201 829.241 150.318 829.241 cv
151.639 829.241 153.048 828.628 154.546 827.4 cv
154.546 816.609 li
156.78 816.609 li
156.78 830.955 li
cp
f
161.097 830.955 mo
161.097 816.609 li
163.331 816.609 li
163.331 818.818 li
165.125 817.346 166.78 816.609 168.295 816.609 cv
168.828 816.609 169.366 816.651 169.907 816.736 cv
169.907 819.072 li
169.818 819.072 li
169.116 818.903 168.405 818.818 167.686 818.818 cv
166.247 818.818 164.795 819.428 163.331 820.646 cv
163.331 830.955 li
161.097 830.955 li
cp
f
179.835 813.144 mo
179.759 813.144 li
178.98 812.89 178.291 812.763 177.689 812.763 cv
176.547 812.763 175.734 813.029 175.252 813.563 cv
174.77 814.096 174.528 814.972 174.528 816.19 cv
174.528 816.609 li
178.921 816.609 li
178.921 818.438 li
174.604 818.438 li
174.604 830.955 li
172.37 830.955 li
172.37 818.438 li
170.732 818.438 li
170.732 816.609 li
172.37 816.609 li
172.37 816.051 li
172.37 814.366 172.793 813.076 173.64 812.179 cv
174.486 811.281 175.696 810.833 177.271 810.833 cv
178.041 810.833 178.896 810.918 179.835 811.087 cv
179.835 813.144 li
cp
f
189.585 827.54 mo
189.585 823.376 li
186.428 823.52 184.399 823.869 183.498 824.423 cv
182.596 824.978 182.146 825.741 182.146 826.715 cv
182.146 828.433 183.187 829.292 185.269 829.292 cv
186.682 829.292 188.121 828.708 189.585 827.54 cv
cp
189.585 830.955 mo
189.585 829.355 li
188.392 830.219 187.41 830.767 186.64 830.999 cv
185.87 831.232 185.086 831.349 184.291 831.349 cv
183.013 831.349 181.951 830.926 181.104 830.079 cv
180.258 829.232 179.835 828.158 179.835 826.854 cv
179.835 825.188 180.463 823.933 181.72 823.091 cv
182.977 822.248 185.599 821.747 189.585 821.586 cv
189.585 821.154 li
189.585 820.155 189.289 819.417 188.696 818.938 cv
188.104 818.461 187.063 818.222 185.573 818.222 cv
184.261 818.222 182.801 818.561 181.193 819.237 cv
181.092 819.237 li
181.092 816.914 li
182.674 816.482 184.198 816.267 185.662 816.267 cv
187.787 816.267 189.342 816.662 190.328 817.454 cv
191.313 818.245 191.807 819.475 191.807 821.142 cv
191.807 830.955 li
189.585 830.955 li
cp
f
206.432 830.079 mo
204.713 830.883 203.215 831.285 201.938 831.285 cv
199.729 831.285 198.013 830.638 196.79 829.343 cv
195.566 828.048 194.955 826.203 194.955 823.808 cv
194.955 821.463 195.585 819.618 196.847 818.272 cv
198.108 816.927 199.809 816.254 201.95 816.254 cv
203.364 816.254 204.857 816.647 206.432 817.435 cv
206.432 819.923 li
206.33 819.923 li
204.748 818.764 203.271 818.184 201.899 818.184 cv
200.435 818.184 199.297 818.67 198.484 819.644 cv
197.672 820.617 197.266 822.005 197.266 823.808 cv
197.266 825.61 197.67 826.985 198.478 827.934 cv
199.286 828.882 200.427 829.355 201.899 829.355 cv
203.313 829.355 204.79 828.784 206.33 827.642 cv
206.432 827.642 li
206.432 830.079 li
cp
f
210.418 822.297 mo
218.835 822.297 li
218.767 819.444 217.459 818.019 214.912 818.019 cv
213.625 818.019 212.584 818.399 211.789 819.161 cv
210.994 819.923 210.537 820.968 210.418 822.297 cv
cp
215.661 831.285 mo
213.274 831.285 211.423 830.64 210.107 829.349 cv
208.791 828.059 208.133 826.232 208.133 823.871 cv
208.133 821.526 208.763 819.663 210.024 818.278 cv
211.286 816.896 212.957 816.203 215.039 816.203 cv
216.935 816.203 218.405 816.771 219.451 817.904 cv
220.496 819.038 221.019 820.655 221.019 822.754 cv
221.019 823.985 li
210.418 823.985 li
210.418 825.712 210.886 827.038 211.821 827.966 cv
212.756 828.892 214.049 829.355 215.699 829.355 cv
217.341 829.355 218.983 828.784 220.625 827.642 cv
220.727 827.642 li
220.727 830.066 li
218.687 830.879 216.999 831.285 215.661 831.285 cv
cp
f
235.263 820.012 mo
235.263 828.391 li
236.532 828.958 237.708 829.241 238.792 829.241 cv
240.188 829.241 241.28 828.757 242.067 827.788 cv
242.854 826.818 243.248 825.449 243.248 823.681 cv
243.248 820.101 241.958 818.311 239.376 818.311 cv
238.005 818.311 236.634 818.878 235.263 820.012 cv
cp
235.263 830.13 mo
235.263 836.249 li
233.028 836.249 li
233.028 816.609 li
235.263 816.609 li
235.263 818.196 li
236.896 816.867 238.483 816.203 240.023 816.203 cv
241.716 816.203 243.062 816.861 244.061 818.177 cv
245.059 819.493 245.559 821.303 245.559 823.604 cv
245.559 825.864 244.954 827.701 243.743 829.114 cv
242.533 830.527 241.035 831.234 239.249 831.234 cv
237.886 831.234 236.558 830.866 235.263 830.13 cv
cp
f
248.847 830.955 mo
248.847 816.609 li
251.081 816.609 li
251.081 818.818 li
252.875 817.346 254.53 816.609 256.045 816.609 cv
256.578 816.609 257.116 816.651 257.657 816.736 cv
257.657 819.072 li
257.568 819.072 li
256.866 818.903 256.155 818.818 255.436 818.818 cv
253.997 818.818 252.545 819.428 251.081 820.646 cv
251.081 830.955 li
248.847 830.955 li
cp
f
265.147 818.107 mo
263.768 818.107 262.706 818.594 261.961 819.567 cv
261.216 820.541 260.844 821.95 260.844 823.795 cv
260.844 825.614 261.216 827.011 261.961 827.984 cv
262.706 828.958 263.768 829.444 265.147 829.444 cv
266.527 829.444 267.589 828.958 268.334 827.984 cv
269.079 827.011 269.451 825.614 269.451 823.795 cv
269.451 820.003 268.017 818.107 265.147 818.107 cv
cp
265.147 831.349 mo
263.108 831.349 261.496 830.674 260.311 829.323 cv
259.125 827.974 258.533 826.131 258.533 823.795 cv
258.533 821.459 259.13 819.609 260.323 818.247 cv
261.517 816.885 263.125 816.203 265.147 816.203 cv
267.17 816.203 268.778 816.88 269.972 818.234 cv
271.165 819.589 271.762 821.442 271.762 823.795 cv
271.762 826.147 271.167 827.995 269.978 829.337 cv
268.789 830.678 267.179 831.349 265.147 831.349 cv
cp
f
279.557 831.234 mo
276.594 831.234 275.113 829.605 275.113 826.347 cv
275.113 818.438 li
273.476 818.438 li
273.476 816.609 li
275.126 816.609 li
275.126 812.483 li
277.348 812.483 li
277.348 816.609 li
282.375 816.609 li
282.375 818.438 li
277.348 818.438 li
277.348 825.077 li
277.348 826.584 277.451 827.56 277.659 828.003 cv
277.866 828.448 278.181 828.773 278.604 828.981 cv
279.028 829.188 279.569 829.292 280.229 829.292 cv
280.856 829.292 281.545 829.14 282.299 828.835 cv
282.375 828.835 li
282.375 830.866 li
281.368 831.111 280.428 831.234 279.557 831.234 cv
cp
f
286.107 822.297 mo
294.524 822.297 li
294.457 819.444 293.149 818.019 290.602 818.019 cv
289.315 818.019 288.274 818.399 287.479 819.161 cv
286.683 819.923 286.226 820.968 286.107 822.297 cv
cp
291.351 831.285 mo
288.964 831.285 287.112 830.64 285.796 829.349 cv
284.48 828.059 283.822 826.232 283.822 823.871 cv
283.822 821.526 284.453 819.663 285.714 818.278 cv
286.975 816.896 288.646 816.203 290.729 816.203 cv
292.625 816.203 294.095 816.771 295.14 817.904 cv
296.186 819.038 296.708 820.655 296.708 822.754 cv
296.708 823.985 li
286.107 823.985 li
286.107 825.712 286.575 827.038 287.51 827.966 cv
288.445 828.892 289.738 829.355 291.389 829.355 cv
293.031 829.355 294.672 828.784 296.314 827.642 cv
296.416 827.642 li
296.416 830.066 li
294.376 830.879 292.688 831.285 291.351 831.285 cv
cp
f
302.142 830.955 mo
299.907 830.955 li
299.907 816.609 li
302.142 816.609 li
302.142 830.955 li
cp
302.281 813.74 mo
299.755 813.74 li
299.755 811.417 li
302.281 811.417 li
302.281 813.74 li
cp
f
318.341 830.955 mo
316.106 830.955 li
316.106 822.919 li
316.106 821.057 315.861 819.823 315.37 819.218 cv
314.879 818.613 314.071 818.311 312.945 818.311 cv
311.617 818.311 310.208 818.929 308.718 820.164 cv
308.718 830.955 li
306.483 830.955 li
306.483 816.609 li
308.718 816.609 li
308.718 818.336 li
310.402 816.914 312.065 816.203 313.707 816.203 cv
315.188 816.203 316.331 816.667 317.135 817.593 cv
317.939 818.521 318.341 819.859 318.341 821.611 cv
318.341 830.955 li
cp
f
160.589 862.155 mo
158.228 862.155 li
158.228 852.697 li
148.325 852.697 li
148.325 862.155 li
145.964 862.155 li
145.964 843.023 li
148.325 843.023 li
148.325 850.653 li
158.228 850.653 li
158.228 843.023 li
160.589 843.023 li
160.589 862.155 li
cp
f
167.647 852.799 mo
167.647 860.149 li
171.088 860.149 li
173.517 860.149 175.123 859.813 175.906 859.14 cv
176.688 858.468 177.08 857.56 177.08 856.417 cv
177.08 855.672 176.936 855.035 176.648 854.507 cv
176.361 853.978 175.91 853.561 175.296 853.256 cv
174.683 852.951 173.492 852.799 171.723 852.799 cv
167.647 852.799 li
cp
167.647 845.029 mo
167.647 850.844 li
171.063 850.844 li
172.713 850.844 173.868 850.577 174.528 850.044 cv
175.188 849.511 175.519 848.689 175.519 847.581 cv
175.519 846.811 175.256 846.193 174.731 845.728 cv
174.207 845.262 172.886 845.029 170.771 845.029 cv
167.647 845.029 li
cp
165.286 862.155 mo
165.286 843.023 li
170.923 843.023 li
171.786 843.023 172.521 843.04 173.125 843.074 cv
173.73 843.108 174.353 843.218 174.992 843.404 cv
175.631 843.591 176.179 843.872 176.636 844.249 cv
177.093 844.625 177.431 845.067 177.651 845.575 cv
177.872 846.083 177.981 846.663 177.981 847.314 cv
177.981 849.007 177.126 850.311 175.417 851.225 cv
175.417 851.326 li
176.712 851.597 177.723 852.166 178.451 853.034 cv
179.179 853.901 179.543 854.979 179.543 856.265 cv
179.543 858.084 178.889 859.521 177.582 860.575 cv
176.274 861.628 174.41 862.155 171.989 862.155 cv
165.286 862.155 li
cp
f
186.64 862.498 mo
184.845 862.498 183.161 862.104 181.587 861.317 cv
181.587 858.728 li
181.676 858.728 li
183.385 859.997 185.083 860.632 186.767 860.632 cv
189.128 860.632 190.309 859.887 190.309 858.397 cv
190.309 857.813 190.152 857.36 189.839 857.039 cv
189.526 856.718 188.874 856.442 187.884 856.214 cv
187.054 856.053 186.102 855.846 185.027 855.592 cv
183.953 855.338 183.121 854.892 182.533 854.253 cv
181.944 853.613 181.65 852.795 181.65 851.796 cv
181.65 850.526 182.167 849.487 183.199 848.679 cv
184.232 847.871 185.611 847.467 187.338 847.467 cv
189.115 847.467 190.677 847.813 192.022 848.508 cv
192.022 850.971 li
191.934 850.971 li
190.453 849.879 188.882 849.333 187.224 849.333 cv
186.2 849.333 185.391 849.521 184.799 849.897 cv
184.207 850.274 183.91 850.797 183.91 851.466 cv
183.91 852.059 184.069 852.511 184.386 852.824 cv
184.704 853.138 185.336 853.412 186.284 853.649 cv
189.09 854.259 li
190.25 854.513 191.121 854.959 191.705 855.599 cv
192.289 856.237 192.581 857.064 192.581 858.08 cv
192.581 859.392 192.043 860.456 190.969 861.272 cv
189.894 862.09 188.451 862.498 186.64 862.498 cv
cp
f
205.568 854.729 mo
202.128 845.296 li
198.7 854.729 li
205.568 854.729 li
cp
208.247 862.155 mo
206.279 856.696 li
197.977 856.696 li
196.009 862.155 li
193.609 862.155 li
200.693 843.023 li
203.702 843.023 li
210.773 862.155 li
208.247 862.155 li
cp
f
222.39 858.207 mo
222.39 850.272 li
221.128 849.688 219.952 849.396 218.86 849.396 cv
217.464 849.396 216.378 849.857 215.604 850.78 cv
214.83 851.703 214.442 853.023 214.442 854.741 cv
214.442 858.16 215.712 859.87 218.251 859.87 cv
219.597 859.87 220.976 859.315 222.39 858.207 cv
cp
224.624 860.53 mo
224.624 865.236 222.394 867.589 217.934 867.589 cv
216.469 867.589 215.014 867.39 213.566 866.992 cv
213.566 864.682 li
213.668 864.682 li
215.149 865.291 216.613 865.596 218.061 865.596 cv
219.525 865.596 220.612 865.268 221.323 864.612 cv
222.034 863.956 222.39 862.896 222.39 861.432 cv
222.39 860.01 li
220.858 861.296 219.254 861.939 217.578 861.939 cv
215.877 861.939 214.544 861.313 213.579 860.061 cv
212.614 858.808 212.132 857.073 212.132 854.855 cv
212.132 852.638 212.727 850.842 213.916 849.466 cv
215.104 848.091 216.58 847.403 218.34 847.403 cv
219.728 847.403 221.078 847.78 222.39 848.533 cv
222.555 847.81 li
224.624 847.81 li
224.624 860.53 li
cp
f
298.542 914.95 mo
296.181 914.95 li
296.181 898.522 li
290.659 909.745 li
289.364 909.745 li
283.841 898.522 li
283.841 914.95 li
281.645 914.95 li
281.645 895.818 li
284.667 895.818 li
290.087 906.825 li
295.496 895.818 li
298.542 895.818 li
298.542 914.95 li
cp
f
304.281 906.292 mo
312.698 906.292 li
312.63 903.439 311.322 902.014 308.775 902.014 cv
307.488 902.014 306.447 902.395 305.652 903.156 cv
304.856 903.918 304.399 904.963 304.281 906.292 cv
cp
309.524 915.28 mo
307.137 915.28 305.286 914.635 303.97 913.344 cv
302.654 912.054 301.996 910.228 301.996 907.866 cv
301.996 905.521 302.626 903.658 303.887 902.273 cv
305.148 900.891 306.82 900.198 308.902 900.198 cv
310.798 900.198 312.268 900.766 313.313 901.899 cv
314.359 903.033 314.881 904.65 314.881 906.749 cv
314.881 907.98 li
304.281 907.98 li
304.281 909.707 304.749 911.033 305.684 911.961 cv
306.619 912.887 307.912 913.351 309.562 913.351 cv
311.204 913.351 312.846 912.779 314.488 911.637 cv
314.589 911.637 li
314.589 914.062 li
312.55 914.874 310.861 915.28 309.524 915.28 cv
cp
f
327.323 911.548 mo
327.323 903.055 li
326.07 902.479 324.898 902.191 323.806 902.191 cv
322.401 902.191 321.305 902.685 320.518 903.67 cv
319.731 904.656 319.337 906.042 319.337 907.828 cv
319.337 911.434 320.628 913.236 323.209 913.236 cv
324.657 913.236 326.028 912.674 327.323 911.548 cv
cp
327.323 914.95 mo
327.323 913.363 li
325.689 914.684 324.106 915.344 322.575 915.344 cv
320.882 915.344 319.534 914.68 318.531 913.351 cv
317.528 912.021 317.027 910.206 317.027 907.904 cv
317.027 905.628 317.632 903.774 318.842 902.344 cv
320.053 900.913 321.546 900.198 323.324 900.198 cv
324.568 900.198 325.901 900.575 327.323 901.328 cv
327.323 894.968 li
329.557 894.968 li
329.557 914.95 li
327.323 914.95 li
cp
f
336.133 914.95 mo
333.899 914.95 li
333.899 900.604 li
336.133 900.604 li
336.133 914.95 li
cp
336.273 897.735 mo
333.747 897.735 li
333.747 895.412 li
336.273 895.412 li
336.273 897.735 li
cp
f
352.231 914.95 mo
349.997 914.95 li
349.997 913.224 li
348.262 914.637 346.599 915.344 345.007 915.344 cv
343.509 915.344 342.362 914.881 341.567 913.953 cv
340.771 913.027 340.374 911.7 340.374 909.974 cv
340.374 900.604 li
342.608 900.604 li
342.608 908.666 li
342.608 910.511 342.855 911.734 343.351 912.335 cv
343.846 912.936 344.652 913.236 345.769 913.236 cv
347.089 913.236 348.499 912.623 349.997 911.396 cv
349.997 900.604 li
352.231 900.604 li
352.231 914.95 li
cp
f
375.044 914.95 mo
375.044 906.914 li
375.044 905.365 374.937 904.33 374.721 903.811 cv
374.505 903.289 374.175 902.908 373.73 902.668 cv
373.286 902.426 372.726 902.306 372.048 902.306 cv
370.889 902.306 369.522 902.944 367.948 904.223 cv
367.999 904.663 368.024 905.226 368.024 905.911 cv
368.024 914.95 li
365.79 914.95 li
365.79 906.914 li
365.79 905.323 365.682 904.275 365.466 903.771 cv
365.25 903.269 364.924 902.898 364.488 902.661 cv
364.052 902.424 363.5 902.306 362.832 902.306 cv
361.621 902.306 360.271 902.924 358.782 904.159 cv
358.782 914.95 li
356.547 914.95 li
356.547 900.604 li
358.782 900.604 li
358.782 902.331 li
360.483 900.909 362.091 900.198 363.606 900.198 cv
365.561 900.198 366.881 900.981 367.567 902.547 cv
369.412 900.981 371.164 900.198 372.823 900.198 cv
375.793 900.198 377.279 902.001 377.279 905.606 cv
377.279 914.95 li
375.044 914.95 li
cp
f
394.379 915.293 mo
392.585 915.293 390.901 914.899 389.327 914.112 cv
389.327 911.522 li
389.416 911.522 li
391.125 912.792 392.822 913.427 394.506 913.427 cv
396.868 913.427 398.048 912.682 398.048 911.192 cv
398.048 910.608 397.892 910.155 397.579 909.834 cv
397.266 909.513 396.614 909.237 395.624 909.009 cv
394.794 908.848 393.842 908.641 392.767 908.387 cv
391.692 908.133 390.861 907.687 390.272 907.047 cv
389.684 906.408 389.39 905.59 389.39 904.591 cv
389.39 903.321 389.906 902.282 390.939 901.475 cv
391.972 900.666 393.351 900.262 395.078 900.262 cv
396.855 900.262 398.417 900.608 399.762 901.303 cv
399.762 903.766 li
399.673 903.766 li
398.192 902.674 396.622 902.128 394.963 902.128 cv
393.939 902.128 393.131 902.316 392.539 902.693 cv
391.946 903.069 391.65 903.592 391.65 904.261 cv
391.65 904.854 391.809 905.306 392.126 905.619 cv
392.443 905.933 393.076 906.207 394.024 906.444 cv
396.83 907.054 li
397.989 907.308 398.861 907.754 399.445 908.393 cv
400.029 909.032 400.321 909.859 400.321 910.875 cv
400.321 912.187 399.783 913.251 398.708 914.068 cv
397.634 914.885 396.19 915.293 394.379 915.293 cv
cp
f
415.035 914.95 mo
412.8 914.95 li
412.8 913.224 li
411.065 914.637 409.402 915.344 407.811 915.344 cv
406.313 915.344 405.166 914.881 404.371 913.953 cv
403.575 913.027 403.177 911.7 403.177 909.974 cv
403.177 900.604 li
405.412 900.604 li
405.412 908.666 li
405.412 910.511 405.659 911.734 406.154 912.335 cv
406.649 912.936 407.456 913.236 408.573 913.236 cv
409.893 913.236 411.302 912.623 412.8 911.396 cv
412.8 900.604 li
415.035 900.604 li
415.035 914.95 li
cp
f
419.351 914.95 mo
419.351 900.604 li
421.585 900.604 li
421.585 902.813 li
423.38 901.341 425.034 900.604 426.549 900.604 cv
427.083 900.604 427.62 900.646 428.162 900.731 cv
428.162 903.067 li
428.073 903.067 li
427.37 902.898 426.659 902.813 425.94 902.813 cv
424.501 902.813 423.05 903.423 421.585 904.642 cv
421.585 914.95 li
419.351 914.95 li
cp
f
438.089 897.139 mo
438.013 897.139 li
437.234 896.885 436.545 896.758 435.944 896.758 cv
434.801 896.758 433.989 897.024 433.506 897.558 cv
433.024 898.091 432.783 898.967 432.783 900.186 cv
432.783 900.604 li
437.175 900.604 li
437.175 902.433 li
432.859 902.433 li
432.859 914.95 li
430.625 914.95 li
430.625 902.433 li
428.987 902.433 li
428.987 900.604 li
430.625 900.604 li
430.625 900.046 li
430.625 898.361 431.048 897.071 431.894 896.174 cv
432.74 895.276 433.951 894.828 435.525 894.828 cv
436.295 894.828 437.15 894.913 438.089 895.082 cv
438.089 897.139 li
cp
f
447.839 911.535 mo
447.839 907.371 li
444.683 907.515 442.653 907.864 441.752 908.418 cv
440.851 908.973 440.4 909.736 440.4 910.71 cv
440.4 912.428 441.441 913.287 443.523 913.287 cv
444.937 913.287 446.375 912.703 447.839 911.535 cv
cp
447.839 914.95 mo
447.839 913.351 li
446.646 914.214 445.664 914.762 444.894 914.994 cv
444.124 915.228 443.341 915.344 442.545 915.344 cv
441.268 915.344 440.205 914.921 439.359 914.074 cv
438.513 913.228 438.089 912.153 438.089 910.85 cv
438.089 909.183 438.718 907.928 439.975 907.086 cv
441.231 906.243 443.853 905.742 447.839 905.581 cv
447.839 905.149 li
447.839 904.15 447.543 903.412 446.951 902.934 cv
446.358 902.456 445.317 902.217 443.828 902.217 cv
442.516 902.217 441.056 902.556 439.448 903.232 cv
439.346 903.232 li
439.346 900.909 li
440.929 900.478 442.452 900.262 443.917 900.262 cv
446.041 900.262 447.596 900.657 448.582 901.449 cv
449.568 902.24 450.061 903.47 450.061 905.137 cv
450.061 914.95 li
447.839 914.95 li
cp
f
464.686 914.074 mo
462.968 914.878 461.47 915.28 460.192 915.28 cv
457.983 915.28 456.267 914.633 455.044 913.338 cv
453.821 912.043 453.209 910.198 453.209 907.803 cv
453.209 905.458 453.84 903.613 455.101 902.268 cv
456.362 900.922 458.063 900.249 460.205 900.249 cv
461.618 900.249 463.112 900.643 464.686 901.43 cv
464.686 903.918 li
464.584 903.918 li
463.002 902.759 461.525 902.179 460.154 902.179 cv
458.689 902.179 457.551 902.665 456.739 903.639 cv
455.926 904.612 455.52 906 455.52 907.803 cv
455.52 909.605 455.924 910.98 456.732 911.929 cv
457.541 912.877 458.681 913.351 460.154 913.351 cv
461.567 913.351 463.044 912.779 464.584 911.637 cv
464.686 911.637 li
464.686 914.074 li
cp
f
468.672 906.292 mo
477.089 906.292 li
477.021 903.439 475.714 902.014 473.167 902.014 cv
471.88 902.014 470.839 902.395 470.043 903.156 cv
469.248 903.918 468.791 904.963 468.672 906.292 cv
cp
473.916 915.28 mo
471.529 915.28 469.677 914.635 468.361 913.344 cv
467.045 912.054 466.387 910.228 466.387 907.866 cv
466.387 905.521 467.018 903.658 468.279 902.273 cv
469.54 900.891 471.211 900.198 473.293 900.198 cv
475.189 900.198 476.66 900.766 477.705 901.899 cv
478.75 903.033 479.273 904.65 479.273 906.749 cv
479.273 907.98 li
468.672 907.98 li
468.672 909.707 469.14 911.033 470.075 911.961 cv
471.01 912.887 472.303 913.351 473.954 913.351 cv
475.596 913.351 477.237 912.779 478.879 911.637 cv
478.981 911.637 li
478.981 914.062 li
476.941 914.874 475.253 915.28 473.916 915.28 cv
cp
f
493.517 904.007 mo
493.517 912.386 li
494.787 912.953 495.963 913.236 497.046 913.236 cv
498.443 913.236 499.535 912.752 500.322 911.783 cv
501.109 910.813 501.502 909.444 501.502 907.676 cv
501.502 904.096 500.212 902.306 497.63 902.306 cv
496.259 902.306 494.888 902.873 493.517 904.007 cv
cp
493.517 914.125 mo
493.517 920.244 li
491.283 920.244 li
491.283 900.604 li
493.517 900.604 li
493.517 902.191 li
495.15 900.862 496.737 900.198 498.278 900.198 cv
499.971 900.198 501.316 900.856 502.314 902.172 cv
503.313 903.488 503.813 905.298 503.813 907.6 cv
503.813 909.859 503.208 911.696 501.998 913.109 cv
500.787 914.522 499.289 915.229 497.503 915.229 cv
496.141 915.229 494.812 914.861 493.517 914.125 cv
cp
f
507.102 914.95 mo
507.102 900.604 li
509.336 900.604 li
509.336 902.813 li
511.13 901.341 512.784 900.604 514.299 900.604 cv
514.832 900.604 515.37 900.646 515.912 900.731 cv
515.912 903.067 li
515.822 903.067 li
515.12 902.898 514.409 902.813 513.689 902.813 cv
512.251 902.813 510.8 903.423 509.336 904.642 cv
509.336 914.95 li
507.102 914.95 li
cp
f
523.402 902.103 mo
522.022 902.103 520.96 902.589 520.215 903.563 cv
519.471 904.536 519.098 905.945 519.098 907.79 cv
519.098 909.609 519.471 911.006 520.215 911.979 cv
520.96 912.953 522.022 913.439 523.402 913.439 cv
524.781 913.439 525.844 912.953 526.588 911.979 cv
527.333 911.006 527.705 909.609 527.705 907.79 cv
527.705 903.998 526.271 902.103 523.402 902.103 cv
cp
523.402 915.344 mo
521.362 915.344 519.75 914.669 518.564 913.318 cv
517.38 911.969 516.787 910.126 516.787 907.79 cv
516.787 905.454 517.385 903.604 518.578 902.242 cv
519.771 900.88 521.379 900.198 523.402 900.198 cv
525.425 900.198 527.033 900.875 528.227 902.229 cv
529.42 903.584 530.016 905.438 530.016 907.79 cv
530.016 910.143 529.422 911.99 528.232 913.332 cv
527.043 914.673 525.434 915.344 523.402 915.344 cv
cp
f
537.811 915.229 mo
534.849 915.229 533.367 913.601 533.367 910.342 cv
533.367 902.433 li
531.73 902.433 li
531.73 900.604 li
533.381 900.604 li
533.381 896.479 li
535.602 896.479 li
535.602 900.604 li
540.629 900.604 li
540.629 902.433 li
535.602 902.433 li
535.602 909.072 li
535.602 910.579 535.705 911.555 535.913 911.998 cv
536.121 912.443 536.436 912.769 536.859 912.977 cv
537.282 913.184 537.824 913.287 538.484 913.287 cv
539.11 913.287 539.8 913.135 540.553 912.83 cv
540.629 912.83 li
540.629 914.861 li
539.622 915.106 538.683 915.229 537.811 915.229 cv
cp
f
544.361 906.292 mo
552.779 906.292 li
552.711 903.439 551.403 902.014 548.855 902.014 cv
547.569 902.014 546.528 902.395 545.732 903.156 cv
544.938 903.918 544.48 904.963 544.361 906.292 cv
cp
549.605 915.28 mo
547.219 915.28 545.367 914.635 544.051 913.344 cv
542.734 912.054 542.076 910.228 542.076 907.866 cv
542.076 905.521 542.707 903.658 543.969 902.273 cv
545.229 900.891 546.9 900.198 548.982 900.198 cv
550.879 900.198 552.35 900.766 553.395 901.899 cv
554.439 903.033 554.963 904.65 554.963 906.749 cv
554.963 907.98 li
544.361 907.98 li
544.361 909.707 544.83 911.033 545.765 911.961 cv
546.699 912.887 547.992 913.351 549.643 913.351 cv
551.285 913.351 552.927 912.779 554.568 911.637 cv
554.67 911.637 li
554.67 914.062 li
552.631 914.874 550.942 915.28 549.605 915.28 cv
cp
f
560.396 914.95 mo
558.162 914.95 li
558.162 900.604 li
560.396 900.604 li
560.396 914.95 li
cp
560.535 897.735 mo
558.01 897.735 li
558.01 895.412 li
560.535 895.412 li
560.535 897.735 li
cp
f
576.596 914.95 mo
574.361 914.95 li
574.361 906.914 li
574.361 905.052 574.115 903.818 573.625 903.213 cv
573.134 902.608 572.325 902.306 571.199 902.306 cv
569.871 902.306 568.462 902.924 566.973 904.159 cv
566.973 914.95 li
564.738 914.95 li
564.738 900.604 li
566.973 900.604 li
566.973 902.331 li
568.656 900.909 570.319 900.198 571.961 900.198 cv
573.442 900.198 574.585 900.662 575.389 901.588 cv
576.193 902.516 576.596 903.854 576.596 905.606 cv
576.596 914.95 li
cp
f
404.364 946.15 mo
402.003 946.15 li
402.003 936.692 li
392.101 936.692 li
392.101 946.15 li
389.739 946.15 li
389.739 927.019 li
392.101 927.019 li
392.101 934.648 li
402.003 934.648 li
402.003 927.019 li
404.364 927.019 li
404.364 946.15 li
cp
f
411.423 936.794 mo
411.423 944.145 li
414.863 944.145 li
417.292 944.145 418.898 943.809 419.681 943.135 cv
420.464 942.463 420.855 941.555 420.855 940.412 cv
420.855 939.667 420.711 939.03 420.424 938.502 cv
420.136 937.973 419.686 937.556 419.072 937.251 cv
418.458 936.946 417.267 936.794 415.498 936.794 cv
411.423 936.794 li
cp
411.423 929.024 mo
411.423 934.839 li
414.838 934.839 li
416.488 934.839 417.644 934.572 418.304 934.039 cv
418.964 933.506 419.294 932.685 419.294 931.576 cv
419.294 930.806 419.032 930.188 418.507 929.723 cv
417.982 929.257 416.662 929.024 414.546 929.024 cv
411.423 929.024 li
cp
409.062 946.15 mo
409.062 927.019 li
414.698 927.019 li
415.562 927.019 416.296 927.035 416.901 927.069 cv
417.506 927.104 418.128 927.213 418.767 927.399 cv
419.406 927.586 419.954 927.867 420.411 928.244 cv
420.868 928.62 421.207 929.063 421.427 929.57 cv
421.647 930.078 421.757 930.658 421.757 931.31 cv
421.757 933.002 420.902 934.306 419.192 935.22 cv
419.192 935.321 li
420.487 935.592 421.499 936.161 422.227 937.029 cv
422.955 937.896 423.318 938.974 423.318 940.26 cv
423.318 942.079 422.665 943.516 421.357 944.57 cv
420.049 945.623 418.185 946.15 415.765 946.15 cv
409.062 946.15 li
cp
f
430.415 946.493 mo
428.621 946.493 426.937 946.1 425.362 945.313 cv
425.362 942.723 li
425.451 942.723 li
427.161 943.992 428.858 944.627 430.542 944.627 cv
432.903 944.627 434.084 943.882 434.084 942.393 cv
434.084 941.809 433.927 941.355 433.614 941.034 cv
433.301 940.713 432.649 940.438 431.659 940.209 cv
430.83 940.048 429.877 939.841 428.803 939.587 cv
427.728 939.333 426.896 938.887 426.308 938.248 cv
425.72 937.608 425.426 936.79 425.426 935.791 cv
425.426 934.521 425.942 933.482 426.975 932.674 cv
428.007 931.866 429.387 931.462 431.113 931.462 cv
432.891 931.462 434.452 931.809 435.798 932.503 cv
435.798 934.966 li
435.709 934.966 li
434.228 933.874 432.658 933.328 430.999 933.328 cv
429.975 933.328 429.167 933.517 428.574 933.893 cv
427.982 934.27 427.686 934.792 427.686 935.461 cv
427.686 936.054 427.844 936.506 428.162 936.819 cv
428.479 937.133 429.112 937.407 430.06 937.645 cv
432.865 938.254 li
434.025 938.508 434.896 938.954 435.48 939.594 cv
436.064 940.232 436.356 941.06 436.356 942.075 cv
436.356 943.387 435.819 944.451 434.744 945.268 cv
433.669 946.085 432.226 946.493 430.415 946.493 cv
cp
f
449.344 938.724 mo
445.903 929.291 li
442.476 938.724 li
449.344 938.724 li
cp
452.022 946.15 mo
450.055 940.691 li
441.752 940.691 li
439.784 946.15 li
437.385 946.15 li
444.469 927.019 li
447.478 927.019 li
454.549 946.15 li
452.022 946.15 li
cp
f
466.165 942.202 mo
466.165 934.268 li
464.904 933.684 463.728 933.392 462.636 933.392 cv
461.239 933.392 460.154 933.853 459.379 934.775 cv
458.605 935.698 458.218 937.019 458.218 938.736 cv
458.218 942.155 459.487 943.865 462.026 943.865 cv
463.372 943.865 464.751 943.311 466.165 942.202 cv
cp
468.399 944.525 mo
468.399 949.231 466.169 951.584 461.709 951.584 cv
460.245 951.584 458.789 951.385 457.342 950.987 cv
457.342 948.677 li
457.443 948.677 li
458.924 949.286 460.389 949.591 461.836 949.591 cv
463.3 949.591 464.388 949.263 465.099 948.607 cv
465.81 947.951 466.165 946.891 466.165 945.427 cv
466.165 944.005 li
464.633 945.291 463.029 945.935 461.354 945.935 cv
459.652 945.935 458.319 945.309 457.354 944.056 cv
456.39 942.803 455.907 941.068 455.907 938.851 cv
455.907 936.633 456.502 934.837 457.691 933.461 cv
458.88 932.086 460.355 931.398 462.115 931.398 cv
463.503 931.398 464.853 931.775 466.165 932.528 cv
466.33 931.805 li
468.399 931.805 li
468.399 944.525 li
cp
f
573.143 853.796 mo
570.993 853.796 568.738 853.263 566.377 852.196 cv
566.377 849.314 li
566.541 849.314 li
568.488 850.974 570.697 851.803 573.168 851.803 cv
574.691 851.803 575.887 851.491 576.755 850.87 cv
577.623 850.247 578.057 849.42 578.057 848.388 cv
578.057 847.592 577.872 846.968 577.504 846.515 cv
577.136 846.063 576.494 845.709 575.58 845.455 cv
571.314 844.592 li
569.732 844.262 568.533 843.663 567.716 842.796 cv
566.898 841.928 566.49 840.8 566.49 839.412 cv
566.49 837.838 567.125 836.539 568.395 835.515 cv
569.664 834.49 571.319 833.979 573.359 833.979 cv
575.492 833.979 577.625 834.448 579.758 835.388 cv
579.758 838.168 li
579.58 838.168 li
577.819 836.704 575.746 835.972 573.359 835.972 cv
572.039 835.972 570.975 836.264 570.166 836.848 cv
569.357 837.432 568.953 838.197 568.953 839.146 cv
568.953 840.729 569.876 841.748 571.721 842.205 cv
572.787 842.399 573.975 842.644 575.282 842.935 cv
576.59 843.228 577.525 843.532 578.088 843.849 cv
578.65 844.167 579.107 844.528 579.459 844.935 cv
579.811 845.341 580.072 845.802 580.246 846.318 cv
580.42 846.835 580.506 847.406 580.506 848.032 cv
580.506 849.691 579.834 851.066 578.488 852.158 cv
577.143 853.25 575.36 853.796 573.143 853.796 cv
cp
f
602.088 853.453 mo
602.088 845.417 li
602.088 843.868 601.98 842.833 601.765 842.313 cv
601.549 841.792 601.219 841.411 600.774 841.171 cv
600.33 840.929 599.77 840.809 599.092 840.809 cv
597.933 840.809 596.566 841.447 594.992 842.726 cv
595.043 843.166 595.068 843.729 595.068 844.414 cv
595.068 853.453 li
592.834 853.453 li
592.834 845.417 li
592.834 843.826 592.726 842.778 592.51 842.274 cv
592.294 841.771 591.969 841.401 591.532 841.164 cv
591.096 840.927 590.544 840.809 589.875 840.809 cv
588.665 840.809 587.315 841.427 585.826 842.662 cv
585.826 853.453 li
583.592 853.453 li
583.592 839.107 li
585.826 839.107 li
585.826 840.834 li
587.527 839.412 589.135 838.701 590.65 838.701 cv
592.605 838.701 593.926 839.484 594.611 841.05 cv
596.456 839.484 598.208 838.701 599.867 838.701 cv
602.838 838.701 604.322 840.504 604.322 844.109 cv
604.322 853.453 li
602.088 853.453 li
cp
f
617.195 850.038 mo
617.195 845.874 li
614.039 846.018 612.01 846.367 611.108 846.921 cv
610.207 847.476 609.756 848.239 609.756 849.213 cv
609.756 850.931 610.797 851.79 612.879 851.79 cv
614.293 851.79 615.731 851.206 617.195 850.038 cv
cp
617.195 853.453 mo
617.195 851.854 li
616.002 852.717 615.021 853.265 614.25 853.497 cv
613.48 853.73 612.697 853.847 611.902 853.847 cv
610.624 853.847 609.562 853.424 608.715 852.577 cv
607.869 851.73 607.445 850.656 607.445 849.353 cv
607.445 847.686 608.074 846.431 609.331 845.589 cv
610.588 844.746 613.209 844.245 617.195 844.084 cv
617.195 843.652 li
617.195 842.653 616.899 841.915 616.307 841.437 cv
615.715 840.959 614.674 840.72 613.184 840.72 cv
611.872 840.72 610.412 841.059 608.805 841.735 cv
608.703 841.735 li
608.703 839.412 li
610.285 838.98 611.809 838.765 613.273 838.765 cv
615.397 838.765 616.953 839.16 617.938 839.952 cv
618.924 840.743 619.418 841.973 619.418 843.64 cv
619.418 853.453 li
617.195 853.453 li
cp
f
625.879 853.453 mo
623.645 853.453 li
623.645 833.471 li
625.879 833.471 li
625.879 853.453 li
cp
f
632.48 853.453 mo
630.246 853.453 li
630.246 833.471 li
632.48 833.471 li
632.48 853.453 li
cp
f
649.709 853.796 mo
647.914 853.796 646.23 853.402 644.656 852.615 cv
644.656 850.025 li
644.744 850.025 li
646.454 851.295 648.151 851.93 649.836 851.93 cv
652.197 851.93 653.377 851.185 653.377 849.695 cv
653.377 849.111 653.221 848.658 652.908 848.337 cv
652.595 848.016 651.943 847.74 650.953 847.512 cv
650.123 847.351 649.171 847.144 648.096 846.89 cv
647.021 846.636 646.189 846.189 645.602 845.55 cv
645.014 844.911 644.719 844.093 644.719 843.094 cv
644.719 841.824 645.235 840.785 646.268 839.978 cv
647.301 839.169 648.68 838.765 650.406 838.765 cv
652.184 838.765 653.746 839.111 655.092 839.806 cv
655.092 842.269 li
655.002 842.269 li
653.521 841.177 651.951 840.631 650.293 840.631 cv
649.269 840.631 648.46 840.819 647.867 841.196 cv
647.275 841.572 646.979 842.095 646.979 842.764 cv
646.979 843.356 647.138 843.809 647.455 844.122 cv
647.772 844.436 648.405 844.71 649.354 844.947 cv
652.158 845.557 li
653.318 845.811 654.189 846.257 654.773 846.896 cv
655.357 847.535 655.65 848.362 655.65 849.378 cv
655.65 850.689 655.112 851.754 654.037 852.571 cv
652.963 853.388 651.52 853.796 649.709 853.796 cv
cp
f
670.363 853.453 mo
668.129 853.453 li
668.129 851.727 li
666.395 853.14 664.731 853.847 663.141 853.847 cv
661.643 853.847 660.495 853.384 659.699 852.456 cv
658.904 851.53 658.506 850.203 658.506 848.477 cv
658.506 839.107 li
660.74 839.107 li
660.74 847.169 li
660.74 849.014 660.988 850.237 661.483 850.838 cv
661.979 851.438 662.785 851.739 663.902 851.739 cv
665.223 851.739 666.631 851.126 668.129 849.898 cv
668.129 839.107 li
670.363 839.107 li
670.363 853.453 li
cp
f
674.68 853.453 mo
674.68 839.107 li
676.914 839.107 li
676.914 841.316 li
678.709 839.844 680.363 839.107 681.879 839.107 cv
682.412 839.107 682.949 839.149 683.49 839.234 cv
683.49 841.57 li
683.402 841.57 li
682.699 841.401 681.988 841.316 681.27 841.316 cv
679.83 841.316 678.379 841.926 676.914 843.145 cv
676.914 853.453 li
674.68 853.453 li
cp
f
693.418 835.642 mo
693.342 835.642 li
692.563 835.388 691.874 835.261 691.273 835.261 cv
690.131 835.261 689.318 835.527 688.836 836.061 cv
688.354 836.594 688.111 837.47 688.111 838.688 cv
688.111 839.107 li
692.504 839.107 li
692.504 840.936 li
688.188 840.936 li
688.188 853.453 li
685.953 853.453 li
685.953 840.936 li
684.316 840.936 li
684.316 839.107 li
685.953 839.107 li
685.953 838.549 li
685.953 836.864 686.377 835.574 687.223 834.677 cv
688.069 833.779 689.279 833.331 690.854 833.331 cv
691.624 833.331 692.479 833.416 693.418 833.585 cv
693.418 835.642 li
cp
f
703.168 850.038 mo
703.168 845.874 li
700.012 846.018 697.982 846.367 697.081 846.921 cv
696.18 847.476 695.729 848.239 695.729 849.213 cv
695.729 850.931 696.77 851.79 698.852 851.79 cv
700.266 851.79 701.704 851.206 703.168 850.038 cv
cp
703.168 853.453 mo
703.168 851.854 li
701.975 852.717 700.993 853.265 700.223 853.497 cv
699.453 853.73 698.67 853.847 697.875 853.847 cv
696.597 853.847 695.534 853.424 694.688 852.577 cv
693.842 851.73 693.418 850.656 693.418 849.353 cv
693.418 847.686 694.047 846.431 695.304 845.589 cv
696.561 844.746 699.182 844.245 703.168 844.084 cv
703.168 843.652 li
703.168 842.653 702.872 841.915 702.279 841.437 cv
701.688 840.959 700.646 840.72 699.156 840.72 cv
697.845 840.72 696.385 841.059 694.777 841.735 cv
694.676 841.735 li
694.676 839.412 li
696.258 838.98 697.781 838.765 699.246 838.765 cv
701.37 838.765 702.926 839.16 703.911 839.952 cv
704.896 840.743 705.391 841.973 705.391 843.64 cv
705.391 853.453 li
703.168 853.453 li
cp
f
720.016 852.577 mo
718.297 853.381 716.799 853.783 715.521 853.783 cv
713.313 853.783 711.596 853.136 710.373 851.841 cv
709.15 850.546 708.539 848.701 708.539 846.306 cv
708.539 843.961 709.169 842.116 710.43 840.771 cv
711.691 839.425 713.393 838.752 715.533 838.752 cv
716.947 838.752 718.441 839.146 720.016 839.933 cv
720.016 842.421 li
719.914 842.421 li
718.331 841.262 716.854 840.682 715.482 840.682 cv
714.019 840.682 712.881 841.168 712.068 842.142 cv
711.256 843.115 710.85 844.503 710.85 846.306 cv
710.85 848.108 711.254 849.483 712.062 850.432 cv
712.869 851.38 714.01 851.854 715.482 851.854 cv
716.896 851.854 718.373 851.282 719.914 850.14 cv
720.016 850.14 li
720.016 852.577 li
cp
f
724.002 844.795 mo
732.418 844.795 li
732.351 841.942 731.043 840.517 728.496 840.517 cv
727.209 840.517 726.168 840.897 725.373 841.659 cv
724.577 842.421 724.12 843.466 724.002 844.795 cv
cp
729.244 853.783 mo
726.857 853.783 725.006 853.138 723.69 851.847 cv
722.375 850.557 721.717 848.73 721.717 846.369 cv
721.717 844.024 722.347 842.161 723.607 840.776 cv
724.869 839.394 726.541 838.701 728.623 838.701 cv
730.519 838.701 731.988 839.269 733.034 840.402 cv
734.08 841.536 734.602 843.153 734.602 845.252 cv
734.602 846.483 li
724.002 846.483 li
724.002 848.21 724.469 849.536 725.404 850.464 cv
726.34 851.39 727.633 851.854 729.283 851.854 cv
730.925 851.854 732.566 851.282 734.209 850.14 cv
734.311 850.14 li
734.311 852.564 li
732.271 853.377 730.582 853.783 729.244 853.783 cv
cp
f
748.846 842.51 mo
748.846 850.889 li
750.115 851.456 751.292 851.739 752.375 851.739 cv
753.771 851.739 754.863 851.255 755.65 850.286 cv
756.438 849.316 756.832 847.947 756.832 846.179 cv
756.832 842.599 755.541 840.809 752.959 840.809 cv
751.588 840.809 750.217 841.376 748.846 842.51 cv
cp
748.846 852.628 mo
748.846 858.747 li
746.611 858.747 li
746.611 839.107 li
748.846 839.107 li
748.846 840.694 li
750.479 839.365 752.066 838.701 753.607 838.701 cv
755.3 838.701 756.646 839.359 757.645 840.675 cv
758.643 841.991 759.143 843.801 759.143 846.103 cv
759.143 848.362 758.537 850.199 757.326 851.612 cv
756.116 853.025 754.618 853.732 752.832 853.732 cv
751.47 853.732 750.141 853.364 748.846 852.628 cv
cp
f
762.43 853.453 mo
762.43 839.107 li
764.664 839.107 li
764.664 841.316 li
766.459 839.844 768.113 839.107 769.629 839.107 cv
770.162 839.107 770.699 839.149 771.24 839.234 cv
771.24 841.57 li
771.152 841.57 li
770.449 841.401 769.738 841.316 769.02 841.316 cv
767.58 841.316 766.129 841.926 764.664 843.145 cv
764.664 853.453 li
762.43 853.453 li
cp
f
778.73 840.605 mo
777.352 840.605 776.289 841.092 775.545 842.065 cv
774.8 843.039 774.428 844.448 774.428 846.293 cv
774.428 848.112 774.8 849.509 775.545 850.482 cv
776.289 851.456 777.352 851.942 778.73 851.942 cv
780.11 851.942 781.173 851.456 781.918 850.482 cv
782.662 849.509 783.035 848.112 783.035 846.293 cv
783.035 842.501 781.6 840.605 778.73 840.605 cv
cp
778.73 853.847 mo
776.691 853.847 775.079 853.172 773.895 851.821 cv
772.709 850.472 772.117 848.629 772.117 846.293 cv
772.117 843.957 772.713 842.107 773.906 840.745 cv
775.1 839.383 776.708 838.701 778.73 838.701 cv
780.754 838.701 782.361 839.378 783.555 840.732 cv
784.748 842.087 785.346 843.94 785.346 846.293 cv
785.346 848.646 784.75 850.493 783.562 851.835 cv
782.373 853.176 780.762 853.847 778.73 853.847 cv
cp
f
793.141 853.732 mo
790.178 853.732 788.697 852.104 788.697 848.845 cv
788.697 840.936 li
787.059 840.936 li
787.059 839.107 li
788.709 839.107 li
788.709 834.981 li
790.932 834.981 li
790.932 839.107 li
795.959 839.107 li
795.959 840.936 li
790.932 840.936 li
790.932 847.575 li
790.932 849.082 791.035 850.058 791.242 850.501 cv
791.449 850.946 791.765 851.271 792.188 851.479 cv
792.611 851.687 793.152 851.79 793.813 851.79 cv
794.439 851.79 795.129 851.638 795.883 851.333 cv
795.959 851.333 li
795.959 853.364 li
794.951 853.609 794.012 853.732 793.141 853.732 cv
cp
f
799.691 844.795 mo
808.107 844.795 li
808.04 841.942 806.732 840.517 804.186 840.517 cv
802.898 840.517 801.857 840.897 801.063 841.659 cv
800.267 842.421 799.81 843.466 799.691 844.795 cv
cp
804.934 853.783 mo
802.547 853.783 800.695 853.138 799.38 851.847 cv
798.064 850.557 797.406 848.73 797.406 846.369 cv
797.406 844.024 798.036 842.161 799.297 840.776 cv
800.559 839.394 802.23 838.701 804.313 838.701 cv
806.208 838.701 807.678 839.269 808.724 840.402 cv
809.77 841.536 810.291 843.153 810.291 845.252 cv
810.291 846.483 li
799.691 846.483 li
799.691 848.21 800.158 849.536 801.094 850.464 cv
802.029 851.39 803.322 851.854 804.973 851.854 cv
806.614 851.854 808.256 851.282 809.898 850.14 cv
810 850.14 li
810 852.564 li
807.96 853.377 806.271 853.783 804.934 853.783 cv
cp
f
815.725 853.453 mo
813.49 853.453 li
813.49 839.107 li
815.725 839.107 li
815.725 853.453 li
cp
815.865 836.238 mo
813.338 836.238 li
813.338 833.915 li
815.865 833.915 li
815.865 836.238 li
cp
f
831.924 853.453 mo
829.689 853.453 li
829.689 845.417 li
829.689 843.555 829.444 842.321 828.953 841.716 cv
828.463 841.111 827.654 840.809 826.529 840.809 cv
825.2 840.809 823.791 841.427 822.301 842.662 cv
822.301 853.453 li
820.066 853.453 li
820.066 839.107 li
822.301 839.107 li
822.301 840.834 li
823.985 839.412 825.648 838.701 827.291 838.701 cv
828.771 838.701 829.914 839.165 830.719 840.091 cv
831.522 841.019 831.924 842.357 831.924 844.109 cv
831.924 853.453 li
cp
f
674.846 884.653 mo
672.484 884.653 li
672.484 875.195 li
662.582 875.195 li
662.582 884.653 li
660.221 884.653 li
660.221 865.521 li
662.582 865.521 li
662.582 873.151 li
672.484 873.151 li
672.484 865.521 li
674.846 865.521 li
674.846 884.653 li
cp
f
681.904 875.297 mo
681.904 882.647 li
685.344 882.647 li
687.773 882.647 689.379 882.312 690.162 881.638 cv
690.945 880.966 691.336 880.058 691.336 878.915 cv
691.336 878.17 691.192 877.533 690.904 877.005 cv
690.617 876.476 690.166 876.059 689.553 875.754 cv
688.939 875.449 687.748 875.297 685.979 875.297 cv
681.904 875.297 li
cp
681.904 867.527 mo
681.904 873.342 li
685.318 873.342 li
686.969 873.342 688.125 873.075 688.785 872.542 cv
689.445 872.009 689.775 871.188 689.775 870.079 cv
689.775 869.309 689.513 868.691 688.988 868.226 cv
688.463 867.76 687.143 867.527 685.027 867.527 cv
681.904 867.527 li
cp
679.543 884.653 mo
679.543 865.521 li
685.18 865.521 li
686.043 865.521 686.777 865.538 687.382 865.572 cv
687.986 865.606 688.609 865.716 689.248 865.902 cv
689.887 866.089 690.436 866.37 690.893 866.747 cv
691.35 867.123 691.688 867.565 691.908 868.073 cv
692.128 868.581 692.238 869.161 692.238 869.813 cv
692.238 871.505 691.383 872.809 689.674 873.723 cv
689.674 873.824 li
690.969 874.095 691.979 874.664 692.707 875.532 cv
693.436 876.399 693.799 877.477 693.799 878.763 cv
693.799 880.582 693.146 882.019 691.838 883.073 cv
690.53 884.126 688.666 884.653 686.246 884.653 cv
679.543 884.653 li
cp
f
700.896 884.996 mo
699.102 884.996 697.418 884.603 695.844 883.815 cv
695.844 881.226 li
695.932 881.226 li
697.642 882.495 699.339 883.13 701.023 883.13 cv
703.385 883.13 704.564 882.385 704.564 880.896 cv
704.564 880.312 704.408 879.858 704.096 879.537 cv
703.782 879.216 703.131 878.94 702.141 878.712 cv
701.311 878.551 700.358 878.344 699.283 878.09 cv
698.209 877.836 697.377 877.39 696.789 876.751 cv
696.201 876.111 695.906 875.293 695.906 874.294 cv
695.906 873.024 696.423 871.985 697.455 871.177 cv
698.488 870.369 699.867 869.965 701.594 869.965 cv
703.371 869.965 704.934 870.312 706.279 871.006 cv
706.279 873.469 li
706.189 873.469 li
704.709 872.377 703.139 871.831 701.48 871.831 cv
700.456 871.831 699.647 872.02 699.055 872.396 cv
698.463 872.772 698.166 873.295 698.166 873.964 cv
698.166 874.557 698.325 875.009 698.643 875.322 cv
698.96 875.636 699.593 875.91 700.541 876.147 cv
703.346 876.757 li
704.506 877.011 705.377 877.457 705.961 878.097 cv
706.545 878.735 706.838 879.563 706.838 880.578 cv
706.838 881.89 706.3 882.954 705.225 883.771 cv
704.15 884.588 702.707 884.996 700.896 884.996 cv
cp
f
719.824 877.227 mo
716.385 867.794 li
712.957 877.227 li
719.824 877.227 li
cp
722.504 884.653 mo
720.535 879.194 li
712.232 879.194 li
710.266 884.653 li
707.865 884.653 li
714.949 865.521 li
717.959 865.521 li
725.029 884.653 li
722.504 884.653 li
cp
f
736.646 880.705 mo
736.646 872.771 li
735.385 872.187 734.209 871.895 733.117 871.895 cv
731.721 871.895 730.635 872.355 729.86 873.278 cv
729.086 874.201 728.699 875.521 728.699 877.239 cv
728.699 880.658 729.969 882.368 732.508 882.368 cv
733.854 882.368 735.232 881.813 736.646 880.705 cv
cp
738.881 883.028 mo
738.881 887.734 736.65 890.087 732.189 890.087 cv
730.726 890.087 729.27 889.888 727.822 889.49 cv
727.822 887.18 li
727.924 887.18 li
729.405 887.789 730.869 888.094 732.316 888.094 cv
733.781 888.094 734.869 887.766 735.58 887.11 cv
736.291 886.454 736.646 885.394 736.646 883.93 cv
736.646 882.508 li
735.114 883.794 733.51 884.438 731.834 884.438 cv
730.133 884.438 728.801 883.812 727.836 882.559 cv
726.871 881.306 726.389 879.571 726.389 877.354 cv
726.389 875.136 726.982 873.34 728.172 871.964 cv
729.361 870.589 730.836 869.901 732.596 869.901 cv
733.984 869.901 735.334 870.278 736.646 871.031 cv
736.811 870.308 li
738.881 870.308 li
738.881 883.028 li
cp
f
102.368 661.229 mo
102.368 676.349 li
104.831 676.349 li
107.853 676.349 110.049 675.71 111.42 674.432 cv
112.791 673.153 113.477 671.267 113.477 668.77 cv
113.477 666.399 112.783 664.551 111.395 663.222 cv
110.006 661.893 107.819 661.229 104.831 661.229 cv
102.368 661.229 li
cp
100.007 678.354 mo
100.007 659.223 li
104.615 659.223 li
107.307 659.223 109.422 659.574 110.963 660.276 cv
112.503 660.979 113.72 662.052 114.613 663.494 cv
115.506 664.938 115.952 666.709 115.952 668.808 cv
115.952 671.414 115.108 673.657 113.419 675.536 cv
111.731 677.415 108.813 678.354 104.666 678.354 cv
100.007 678.354 li
cp
f
131.136 678.354 mo
128.901 678.354 li
128.901 670.318 li
128.901 668.456 128.656 667.223 128.165 666.617 cv
127.674 666.013 126.866 665.71 125.74 665.71 cv
124.412 665.71 123.002 666.328 121.513 667.563 cv
121.513 678.354 li
119.278 678.354 li
119.278 664.009 li
121.513 664.009 li
121.513 665.735 li
123.197 664.313 124.86 663.603 126.502 663.603 cv
127.983 663.603 129.125 664.066 129.93 664.992 cv
130.734 665.92 131.136 667.259 131.136 669.011 cv
131.136 678.354 li
cp
f
144.009 674.939 mo
144.009 670.775 li
140.852 670.919 138.823 671.269 137.921 671.822 cv
137.02 672.377 136.569 673.141 136.569 674.114 cv
136.569 675.832 137.61 676.691 139.692 676.691 cv
141.106 676.691 142.544 676.107 144.009 674.939 cv
cp
144.009 678.354 mo
144.009 676.755 li
142.815 677.618 141.833 678.166 141.063 678.398 cv
140.293 678.632 139.51 678.748 138.715 678.748 cv
137.437 678.748 136.375 678.325 135.528 677.479 cv
134.682 676.632 134.259 675.558 134.259 674.254 cv
134.259 672.587 134.887 671.332 136.144 670.49 cv
137.401 669.647 140.022 669.146 144.009 668.985 cv
144.009 668.554 li
144.009 667.555 143.712 666.816 143.12 666.338 cv
142.528 665.86 141.487 665.621 139.997 665.621 cv
138.685 665.621 137.225 665.96 135.617 666.637 cv
135.516 666.637 li
135.516 664.313 li
137.098 663.882 138.622 663.666 140.086 663.666 cv
142.21 663.666 143.766 664.062 144.751 664.854 cv
145.737 665.645 146.23 666.874 146.23 668.541 cv
146.23 678.354 li
144.009 678.354 li
cp
f
54.3926 698.611 mo
54.3926 706.99 li
55.6621 707.558 56.8384 707.841 57.9219 707.841 cv
59.3184 707.841 60.4102 707.356 61.1973 706.387 cv
61.9844 705.418 62.3779 704.049 62.3779 702.28 cv
62.3779 698.7 61.0874 696.91 58.5059 696.91 cv
57.1348 696.91 55.7637 697.478 54.3926 698.611 cv
cp
54.3926 708.729 mo
54.3926 714.849 li
52.1582 714.849 li
52.1582 695.209 li
54.3926 695.209 li
54.3926 696.796 li
56.0259 695.467 57.6128 694.803 59.1533 694.803 cv
60.8462 694.803 62.1919 695.461 63.1904 696.777 cv
64.189 698.093 64.6885 699.902 64.6885 702.204 cv
64.6885 704.464 64.0835 706.301 62.873 707.714 cv
61.6626 709.127 60.1646 709.834 58.3789 709.834 cv
57.0161 709.834 55.6875 709.466 54.3926 708.729 cv
cp
f
73.5371 696.707 mo
72.1577 696.707 71.0952 697.193 70.3506 698.167 cv
69.606 699.141 69.2334 700.55 69.2334 702.395 cv
69.2334 704.214 69.606 705.61 70.3506 706.584 cv
71.0952 707.558 72.1577 708.044 73.5371 708.044 cv
74.9165 708.044 75.979 707.558 76.7236 706.584 cv
77.4683 705.61 77.8408 704.214 77.8408 702.395 cv
77.8408 698.603 76.4063 696.707 73.5371 696.707 cv
cp
73.5371 709.948 mo
71.4976 709.948 69.8853 709.273 68.7002 707.924 cv
67.5151 706.573 66.9229 704.73 66.9229 702.395 cv
66.9229 700.059 67.5195 698.209 68.7129 696.847 cv
69.9063 695.484 71.5142 694.803 73.5371 694.803 cv
75.5601 694.803 77.168 695.479 78.3613 696.834 cv
79.5547 698.188 80.1514 700.042 80.1514 702.395 cv
80.1514 704.747 79.5566 706.595 78.3677 707.936 cv
77.1787 709.277 75.5684 709.948 73.5371 709.948 cv
cp
f
85.6738 709.555 mo
83.4395 709.555 li
83.4395 689.572 li
85.6738 689.572 li
85.6738 709.555 li
cp
f
102.165 695.209 mo
93.748 714.849 li
91.3613 714.849 li
94.0273 708.933 li
88.251 695.209 li
90.6758 695.209 li
95.2461 706.127 li
99.8291 695.209 li
102.165 695.209 li
cp
f
123.227 709.555 mo
123.227 701.519 li
123.227 699.97 123.119 698.936 122.903 698.414 cv
122.687 697.895 122.357 697.514 121.913 697.271 cv
121.468 697.031 120.908 696.91 120.23 696.91 cv
119.071 696.91 117.704 697.549 116.13 698.827 cv
116.181 699.268 116.206 699.83 116.206 700.516 cv
116.206 709.555 li
113.972 709.555 li
113.972 701.519 li
113.972 699.928 113.864 698.88 113.648 698.377 cv
113.432 697.873 113.106 697.503 112.67 697.266 cv
112.234 697.028 111.682 696.91 111.014 696.91 cv
109.803 696.91 108.454 697.528 106.964 698.764 cv
106.964 709.555 li
104.729 709.555 li
104.729 695.209 li
106.964 695.209 li
106.964 696.936 li
108.665 695.514 110.273 694.803 111.788 694.803 cv
113.743 694.803 115.063 695.586 115.749 697.151 cv
117.594 695.586 119.346 694.803 121.005 694.803 cv
123.976 694.803 125.461 696.605 125.461 700.211 cv
125.461 709.555 li
123.227 709.555 li
cp
f
130.907 700.896 mo
139.324 700.896 li
139.256 698.044 137.949 696.618 135.401 696.618 cv
134.115 696.618 133.074 696.999 132.278 697.761 cv
131.483 698.522 131.026 699.567 130.907 700.896 cv
cp
136.15 709.885 mo
133.764 709.885 131.912 709.239 130.596 707.949 cv
129.28 706.658 128.622 704.832 128.622 702.471 cv
128.622 700.126 129.252 698.262 130.514 696.879 cv
131.775 695.494 133.446 694.803 135.528 694.803 cv
137.424 694.803 138.895 695.37 139.94 696.504 cv
140.985 697.638 141.508 699.255 141.508 701.354 cv
141.508 702.585 li
130.907 702.585 li
130.907 704.312 131.375 705.639 132.31 706.564 cv
133.245 707.492 134.538 707.955 136.188 707.955 cv
137.831 707.955 139.472 707.384 141.114 706.241 cv
141.216 706.241 li
141.216 708.666 li
139.176 709.479 137.488 709.885 136.15 709.885 cv
cp
f
144.682 709.555 mo
144.682 695.209 li
146.916 695.209 li
146.916 697.418 li
148.71 695.945 150.365 695.209 151.88 695.209 cv
152.413 695.209 152.951 695.251 153.492 695.336 cv
153.492 697.672 li
153.403 697.672 li
152.701 697.503 151.99 697.418 151.271 697.418 cv
149.832 697.418 148.38 698.027 146.916 699.246 cv
146.916 709.555 li
144.682 709.555 li
cp
f
163.712 706.14 mo
163.712 701.976 li
160.555 702.119 158.526 702.469 157.625 703.023 cv
156.723 703.577 156.272 704.341 156.272 705.314 cv
156.272 707.032 157.313 707.892 159.396 707.892 cv
160.809 707.892 162.248 707.308 163.712 706.14 cv
cp
163.712 709.555 mo
163.712 707.955 li
162.519 708.818 161.537 709.366 160.767 709.6 cv
159.997 709.832 159.213 709.948 158.418 709.948 cv
157.14 709.948 156.078 709.525 155.231 708.679 cv
154.385 707.832 153.962 706.758 153.962 705.454 cv
153.962 703.787 154.59 702.532 155.847 701.689 cv
157.104 700.848 159.726 700.347 163.712 700.186 cv
163.712 699.754 li
163.712 698.755 163.416 698.017 162.823 697.539 cv
162.231 697.061 161.19 696.821 159.7 696.821 cv
158.388 696.821 156.928 697.16 155.32 697.837 cv
155.219 697.837 li
155.219 695.514 li
156.801 695.082 158.325 694.866 159.789 694.866 cv
161.914 694.866 163.469 695.262 164.455 696.053 cv
165.44 696.845 165.934 698.074 165.934 699.741 cv
165.934 709.555 li
163.712 709.555 li
cp
f
174.186 709.897 mo
172.391 709.897 170.707 709.504 169.133 708.717 cv
169.133 706.127 li
169.222 706.127 li
170.931 707.396 172.628 708.031 174.313 708.031 cv
176.674 708.031 177.854 707.286 177.854 705.797 cv
177.854 705.213 177.698 704.76 177.385 704.438 cv
177.072 704.117 176.42 703.842 175.43 703.613 cv
174.6 703.452 173.648 703.245 172.573 702.991 cv
171.499 702.737 170.667 702.291 170.079 701.652 cv
169.49 701.013 169.196 700.194 169.196 699.195 cv
169.196 697.926 169.712 696.887 170.745 696.078 cv
171.778 695.271 173.157 694.866 174.884 694.866 cv
176.661 694.866 178.223 695.213 179.568 695.907 cv
179.568 698.37 li
179.479 698.37 li
177.999 697.278 176.428 696.732 174.77 696.732 cv
173.746 696.732 172.937 696.921 172.345 697.297 cv
171.752 697.674 171.456 698.196 171.456 698.865 cv
171.456 699.458 171.615 699.91 171.932 700.224 cv
172.25 700.537 172.882 700.812 173.83 701.049 cv
176.636 701.658 li
177.795 701.912 178.667 702.358 179.251 702.998 cv
179.835 703.637 180.127 704.464 180.127 705.479 cv
180.127 706.791 179.589 707.855 178.515 708.672 cv
177.44 709.489 175.997 709.897 174.186 709.897 cv
cp
f
184.316 700.896 mo
192.733 700.896 li
192.666 698.044 191.358 696.618 188.811 696.618 cv
187.524 696.618 186.483 696.999 185.688 697.761 cv
184.892 698.522 184.435 699.567 184.316 700.896 cv
cp
189.56 709.885 mo
187.173 709.885 185.321 709.239 184.005 707.949 cv
182.689 706.658 182.031 704.832 182.031 702.471 cv
182.031 700.126 182.662 698.262 183.923 696.879 cv
185.184 695.494 186.855 694.803 188.938 694.803 cv
190.833 694.803 192.304 695.37 193.349 696.504 cv
194.395 697.638 194.917 699.255 194.917 701.354 cv
194.917 702.585 li
184.316 702.585 li
184.316 704.312 184.784 705.639 185.719 706.564 cv
186.654 707.492 187.947 707.955 189.598 707.955 cv
191.24 707.955 192.881 707.384 194.523 706.241 cv
194.625 706.241 li
194.625 708.666 li
192.585 709.479 190.897 709.885 189.56 709.885 cv
cp
f
751.382 205.694 mo
738.928 205.694 li
738.928 186.562 li
751.382 186.562 li
751.382 188.619 li
741.289 188.619 li
741.289 194.192 li
751.128 194.192 li
751.128 196.249 li
741.289 196.249 li
741.289 203.637 li
751.382 203.637 li
751.382 205.694 li
cp
f
772.291 202.279 mo
772.291 198.115 li
769.134 198.259 767.104 198.608 766.204 199.162 cv
765.302 199.716 764.852 200.48 764.852 201.454 cv
764.852 203.172 765.893 204.031 767.975 204.031 cv
769.388 204.031 770.827 203.447 772.291 202.279 cv
cp
772.291 205.694 mo
772.291 204.094 li
771.098 204.958 770.116 205.505 769.346 205.738 cv
768.575 205.971 767.793 206.087 766.997 206.087 cv
765.719 206.087 764.657 205.664 763.811 204.818 cv
762.964 203.972 762.541 202.896 762.541 201.593 cv
762.541 199.926 763.169 198.671 764.427 197.829 cv
765.683 196.987 768.305 196.485 772.291 196.325 cv
772.291 195.893 li
772.291 194.895 771.995 194.156 771.402 193.678 cv
770.81 193.2 769.769 192.96 768.279 192.96 cv
766.968 192.96 765.508 193.299 763.899 193.976 cv
763.798 193.976 li
763.798 191.653 li
765.381 191.221 766.904 191.005 768.368 191.005 cv
770.492 191.005 772.048 191.401 773.034 192.192 cv
774.02 192.984 774.513 194.213 774.513 195.88 cv
774.513 205.694 li
772.291 205.694 li
cp
f
790.572 205.694 mo
788.338 205.694 li
788.338 197.658 li
788.338 195.796 788.093 194.562 787.602 193.957 cv
787.11 193.352 786.303 193.049 785.177 193.049 cv
783.848 193.049 782.438 193.667 780.949 194.903 cv
780.949 205.694 li
778.715 205.694 li
778.715 191.348 li
780.949 191.348 li
780.949 193.075 li
782.634 191.653 784.297 190.942 785.938 190.942 cv
787.42 190.942 788.563 191.405 789.366 192.332 cv
790.17 193.259 790.572 194.598 790.572 196.35 cv
790.572 205.694 li
cp
f
799.319 205.973 mo
796.357 205.973 794.876 204.344 794.876 201.085 cv
794.876 193.176 li
793.238 193.176 li
793.238 191.348 li
794.889 191.348 li
794.889 187.222 li
797.11 187.222 li
797.11 191.348 li
802.138 191.348 li
802.138 193.176 li
797.11 193.176 li
797.11 199.816 li
797.11 201.322 797.214 202.298 797.421 202.742 cv
797.629 203.187 797.944 203.512 798.367 203.72 cv
798.79 203.927 799.332 204.031 799.992 204.031 cv
800.618 204.031 801.309 203.878 802.062 203.574 cv
802.138 203.574 li
802.138 205.605 li
801.131 205.851 800.191 205.973 799.319 205.973 cv
cp
f
806.898 205.694 mo
804.664 205.694 li
804.664 191.348 li
806.898 191.348 li
806.898 205.694 li
cp
807.038 188.479 mo
804.512 188.479 li
804.512 186.156 li
807.038 186.156 li
807.038 188.479 li
cp
f
820.47 201.746 mo
820.47 193.811 li
819.209 193.227 818.032 192.935 816.94 192.935 cv
815.544 192.935 814.458 193.396 813.685 194.319 cv
812.909 195.241 812.522 196.562 812.522 198.28 cv
812.522 201.699 813.792 203.409 816.331 203.409 cv
817.677 203.409 819.057 202.854 820.47 201.746 cv
cp
822.704 204.069 mo
822.704 208.774 820.474 211.127 816.014 211.127 cv
814.55 211.127 813.094 210.929 811.646 210.531 cv
811.646 208.22 li
811.748 208.22 li
813.229 208.83 814.693 209.134 816.141 209.134 cv
817.604 209.134 818.692 208.806 819.403 208.15 cv
820.114 207.495 820.47 206.435 820.47 204.97 cv
820.47 203.548 li
818.938 204.835 817.334 205.478 815.658 205.478 cv
813.957 205.478 812.624 204.852 811.659 203.599 cv
810.694 202.347 810.212 200.611 810.212 198.394 cv
810.212 196.177 810.807 194.38 811.995 193.005 cv
813.185 191.629 814.659 190.942 816.42 190.942 cv
817.808 190.942 819.158 191.318 820.47 192.072 cv
820.635 191.348 li
822.704 191.348 li
822.704 204.069 li
cp
f
828.252 197.036 mo
836.669 197.036 li
836.602 194.184 835.294 192.757 832.746 192.757 cv
831.46 192.757 830.419 193.138 829.623 193.9 cv
828.827 194.662 828.37 195.707 828.252 197.036 cv
cp
833.495 206.024 mo
831.108 206.024 829.257 205.378 827.94 204.088 cv
826.625 202.797 825.967 200.971 825.967 198.61 cv
825.967 196.266 826.598 194.401 827.858 193.018 cv
829.119 191.634 830.791 190.942 832.873 190.942 cv
834.769 190.942 836.239 191.509 837.284 192.643 cv
838.33 193.777 838.853 195.394 838.853 197.493 cv
838.853 198.724 li
828.252 198.724 li
828.252 200.451 828.72 201.777 829.655 202.704 cv
830.59 203.631 831.883 204.094 833.533 204.094 cv
835.175 204.094 836.817 203.523 838.459 202.38 cv
838.561 202.38 li
838.561 204.805 li
836.521 205.618 834.832 206.024 833.495 206.024 cv
cp
f
853.884 205.694 mo
851.649 205.694 li
851.649 197.658 li
851.649 195.796 851.404 194.562 850.913 193.957 cv
850.422 193.352 849.614 193.049 848.488 193.049 cv
847.159 193.049 845.75 193.667 844.261 194.903 cv
844.261 205.694 li
842.026 205.694 li
842.026 191.348 li
844.261 191.348 li
844.261 193.075 li
845.945 191.653 847.608 190.942 849.25 190.942 cv
850.731 190.942 851.874 191.405 852.678 192.332 cv
853.481 193.259 853.884 194.598 853.884 196.35 cv
853.884 205.694 li
cp
f
881.75 205.694 mo
879.389 205.694 li
879.389 196.236 li
869.486 196.236 li
869.486 205.694 li
867.125 205.694 li
867.125 186.562 li
869.486 186.562 li
869.486 194.192 li
879.389 194.192 li
879.389 186.562 li
881.75 186.562 li
881.75 205.694 li
cp
f
888.809 196.337 mo
888.809 203.688 li
892.249 203.688 li
894.678 203.688 896.284 203.352 897.067 202.679 cv
897.85 202.006 898.241 201.098 898.241 199.956 cv
898.241 199.211 898.098 198.574 897.81 198.045 cv
897.521 197.516 897.071 197.099 896.458 196.794 cv
895.844 196.49 894.652 196.337 892.884 196.337 cv
888.809 196.337 li
cp
888.809 188.568 mo
888.809 194.382 li
892.224 194.382 li
893.874 194.382 895.029 194.116 895.689 193.583 cv
896.35 193.049 896.68 192.229 896.68 191.12 cv
896.68 190.35 896.417 189.731 895.893 189.266 cv
895.368 188.801 894.048 188.568 891.932 188.568 cv
888.809 188.568 li
cp
886.447 205.694 mo
886.447 186.562 li
892.084 186.562 li
892.947 186.562 893.682 186.579 894.286 186.613 cv
894.892 186.646 895.514 186.757 896.153 186.943 cv
896.792 187.129 897.34 187.411 897.797 187.787 cv
898.254 188.164 898.593 188.606 898.813 189.114 cv
899.032 189.622 899.143 190.201 899.143 190.853 cv
899.143 192.546 898.288 193.849 896.578 194.763 cv
896.578 194.865 li
897.873 195.136 898.885 195.705 899.612 196.572 cv
900.34 197.44 900.704 198.517 900.704 199.803 cv
900.704 201.623 900.05 203.06 898.743 204.113 cv
897.435 205.167 895.571 205.694 893.15 205.694 cv
886.447 205.694 li
cp
f
904.982 197.036 mo
913.399 197.036 li
913.332 194.184 912.024 192.757 909.477 192.757 cv
908.19 192.757 907.149 193.138 906.354 193.9 cv
905.558 194.662 905.101 195.707 904.982 197.036 cv
cp
910.226 206.024 mo
907.839 206.024 905.987 205.378 904.671 204.088 cv
903.355 202.797 902.697 200.971 902.697 198.61 cv
902.697 196.266 903.328 194.401 904.589 193.018 cv
905.85 191.634 907.521 190.942 909.604 190.942 cv
911.499 190.942 912.97 191.509 914.015 192.643 cv
915.061 193.777 915.583 195.394 915.583 197.493 cv
915.583 198.724 li
904.982 198.724 li
904.982 200.451 905.45 201.777 906.386 202.704 cv
907.32 203.631 908.613 204.094 910.264 204.094 cv
911.905 204.094 913.548 203.523 915.189 202.38 cv
915.291 202.38 li
915.291 204.805 li
913.251 205.618 911.563 206.024 910.226 206.024 cv
cp
f
928.786 198.267 mo
925.346 188.834 li
921.918 198.267 li
928.786 198.267 li
cp
931.465 205.694 mo
929.497 200.235 li
921.194 200.235 li
919.227 205.694 li
916.827 205.694 li
923.911 186.562 li
926.92 186.562 li
933.991 205.694 li
931.465 205.694 li
cp
f
945.607 201.746 mo
945.607 193.811 li
944.347 193.227 943.17 192.935 942.078 192.935 cv
940.682 192.935 939.597 193.396 938.821 194.319 cv
938.048 195.241 937.66 196.562 937.66 198.28 cv
937.66 201.699 938.93 203.409 941.469 203.409 cv
942.814 203.409 944.194 202.854 945.607 201.746 cv
cp
947.842 204.069 mo
947.842 208.774 945.611 211.127 941.151 211.127 cv
939.688 211.127 938.231 210.929 936.784 210.531 cv
936.784 208.22 li
936.886 208.22 li
938.367 208.83 939.831 209.134 941.278 209.134 cv
942.742 209.134 943.83 208.806 944.541 208.15 cv
945.252 207.495 945.607 206.435 945.607 204.97 cv
945.607 203.548 li
944.075 204.835 942.472 205.478 940.796 205.478 cv
939.095 205.478 937.762 204.852 936.797 203.599 cv
935.832 202.347 935.35 200.611 935.35 198.394 cv
935.35 196.177 935.944 194.38 937.134 193.005 cv
938.322 191.629 939.797 190.942 941.558 190.942 cv
942.945 190.942 944.296 191.318 945.607 192.072 cv
945.772 191.348 li
947.842 191.348 li
947.842 204.069 li
cp
f
798.367 735.656 mo
795.507 735.656 793.266 734.793 791.646 733.066 cv
790.024 731.34 789.214 728.906 789.214 725.767 cv
789.214 722.686 790.037 720.261 791.683 718.492 cv
793.329 716.724 795.562 715.839 798.38 715.839 cv
800.402 715.839 802.51 716.41 804.702 717.553 cv
804.702 720.333 li
804.524 720.333 li
802.535 718.666 800.437 717.832 798.228 717.832 cv
796.213 717.832 794.618 718.532 793.441 719.933 cv
792.265 721.334 791.677 723.278 791.677 725.767 cv
791.677 728.238 792.275 730.17 793.474 731.562 cv
794.671 732.954 796.264 733.65 798.253 733.65 cv
799.328 733.65 800.352 733.479 801.325 733.136 cv
802.299 732.794 803.365 732.123 804.524 731.124 cv
804.702 731.124 li
804.702 733.917 li
803.077 734.688 801.813 735.17 800.913 735.364 cv
800.011 735.559 799.163 735.656 798.367 735.656 cv
cp
f
813.233 722.466 mo
811.854 722.466 810.792 722.952 810.047 723.926 cv
809.302 724.899 808.93 726.309 808.93 728.153 cv
808.93 729.973 809.302 731.369 810.047 732.343 cv
810.792 733.316 811.854 733.803 813.233 733.803 cv
814.613 733.803 815.675 733.316 816.42 732.343 cv
817.165 731.369 817.537 729.973 817.537 728.153 cv
817.537 724.361 816.103 722.466 813.233 722.466 cv
cp
813.233 735.707 mo
811.193 735.707 809.581 735.032 808.396 733.683 cv
807.212 732.332 806.619 730.489 806.619 728.153 cv
806.619 725.817 807.216 723.968 808.409 722.605 cv
809.603 721.243 811.211 720.562 813.233 720.562 cv
815.256 720.562 816.864 721.238 818.058 722.593 cv
819.251 723.947 819.848 725.801 819.848 728.153 cv
819.848 730.506 819.253 732.354 818.063 733.694 cv
816.875 735.036 815.265 735.707 813.233 735.707 cv
cp
f
823.11 735.313 mo
823.11 720.968 li
825.345 720.968 li
825.345 723.177 li
827.139 721.704 828.794 720.968 830.309 720.968 cv
830.842 720.968 831.379 721.01 831.921 721.095 cv
831.921 723.431 li
831.832 723.431 li
831.13 723.262 830.419 723.177 829.699 723.177 cv
828.261 723.177 826.809 723.786 825.345 725.005 cv
825.345 735.313 li
823.11 735.313 li
cp
f
835.082 726.655 mo
843.499 726.655 li
843.432 723.803 842.124 722.377 839.576 722.377 cv
838.29 722.377 837.249 722.758 836.453 723.52 cv
835.657 724.281 835.2 725.326 835.082 726.655 cv
cp
840.325 735.644 mo
837.938 735.644 836.087 734.998 834.771 733.708 cv
833.455 732.417 832.797 730.591 832.797 728.229 cv
832.797 725.885 833.428 724.021 834.688 722.638 cv
835.949 721.253 837.621 720.562 839.703 720.562 cv
841.599 720.562 843.069 721.129 844.114 722.263 cv
845.16 723.396 845.683 725.014 845.683 727.112 cv
845.683 728.344 li
835.082 728.344 li
835.082 730.07 835.55 731.397 836.485 732.323 cv
837.42 733.251 838.713 733.714 840.363 733.714 cv
842.005 733.714 843.647 733.143 845.289 732 cv
845.391 732 li
845.391 734.425 li
843.351 735.237 841.662 735.644 840.325 735.644 cv
cp
f
866.351 731.898 mo
866.351 727.734 li
863.193 727.878 861.165 728.228 860.263 728.782 cv
859.362 729.336 858.911 730.1 858.911 731.073 cv
858.911 732.791 859.952 733.65 862.034 733.65 cv
863.447 733.65 864.887 733.066 866.351 731.898 cv
cp
866.351 735.313 mo
866.351 733.714 li
865.157 734.577 864.176 735.125 863.405 735.358 cv
862.635 735.591 861.853 735.707 861.057 735.707 cv
859.778 735.707 858.717 735.284 857.87 734.438 cv
857.023 733.591 856.601 732.517 856.601 731.213 cv
856.601 729.546 857.229 728.291 858.485 727.448 cv
859.743 726.606 862.364 726.105 866.351 725.944 cv
866.351 725.513 li
866.351 724.514 866.055 723.775 865.462 723.298 cv
864.869 722.819 863.828 722.58 862.339 722.58 cv
861.027 722.58 859.567 722.919 857.959 723.596 cv
857.857 723.596 li
857.857 721.272 li
859.44 720.841 860.964 720.625 862.428 720.625 cv
864.552 720.625 866.107 721.021 867.093 721.812 cv
868.079 722.604 868.572 723.833 868.572 725.5 cv
868.572 735.313 li
866.351 735.313 li
cp
f
884.632 735.313 mo
882.397 735.313 li
882.397 727.277 li
882.397 725.415 882.152 724.182 881.661 723.577 cv
881.17 722.972 880.362 722.669 879.236 722.669 cv
877.907 722.669 876.498 723.287 875.009 724.522 cv
875.009 735.313 li
872.774 735.313 li
872.774 720.968 li
875.009 720.968 li
875.009 722.694 li
876.693 721.272 878.356 720.562 879.998 720.562 cv
881.479 720.562 882.622 721.024 883.426 721.952 cv
884.229 722.878 884.632 724.218 884.632 725.97 cv
884.632 735.313 li
cp
f
893.379 735.593 mo
890.417 735.593 888.936 733.964 888.936 730.705 cv
888.936 722.796 li
887.298 722.796 li
887.298 720.968 li
888.948 720.968 li
888.948 716.842 li
891.17 716.842 li
891.17 720.968 li
896.197 720.968 li
896.197 722.796 li
891.17 722.796 li
891.17 729.436 li
891.17 730.942 891.273 731.917 891.481 732.362 cv
891.688 732.806 892.004 733.132 892.427 733.339 cv
892.85 733.547 893.392 733.65 894.052 733.65 cv
894.678 733.65 895.368 733.498 896.121 733.193 cv
896.197 733.193 li
896.197 735.225 li
895.19 735.47 894.251 735.593 893.379 735.593 cv
cp
f
900.958 735.313 mo
898.724 735.313 li
898.724 720.968 li
900.958 720.968 li
900.958 735.313 li
cp
901.098 718.099 mo
898.571 718.099 li
898.571 715.775 li
901.098 715.775 li
901.098 718.099 li
cp
f
914.529 731.365 mo
914.529 723.431 li
913.269 722.847 912.092 722.555 911 722.555 cv
909.604 722.555 908.519 723.016 907.743 723.938 cv
906.97 724.861 906.582 726.182 906.582 727.899 cv
906.582 731.318 907.852 733.028 910.391 733.028 cv
911.736 733.028 913.116 732.474 914.529 731.365 cv
cp
916.764 733.688 mo
916.764 738.395 914.533 740.747 910.073 740.747 cv
908.609 740.747 907.153 740.548 905.706 740.15 cv
905.706 737.84 li
905.808 737.84 li
907.289 738.449 908.753 738.754 910.2 738.754 cv
911.664 738.754 912.752 738.426 913.463 737.771 cv
914.174 737.114 914.529 736.054 914.529 734.59 cv
914.529 733.168 li
912.997 734.454 911.394 735.098 909.718 735.098 cv
908.017 735.098 906.684 734.472 905.719 733.219 cv
904.754 731.966 904.271 730.231 904.271 728.014 cv
904.271 725.796 904.866 724 906.056 722.624 cv
907.244 721.249 908.719 720.562 910.479 720.562 cv
911.867 720.562 913.218 720.938 914.529 721.691 cv
914.694 720.968 li
916.764 720.968 li
916.764 733.688 li
cp
f
922.312 726.655 mo
930.729 726.655 li
930.661 723.803 929.354 722.377 926.806 722.377 cv
925.52 722.377 924.479 722.758 923.683 723.52 cv
922.887 724.281 922.43 725.326 922.312 726.655 cv
cp
927.555 735.644 mo
925.168 735.644 923.316 734.998 922.001 733.708 cv
920.685 732.417 920.026 730.591 920.026 728.229 cv
920.026 725.885 920.657 724.021 921.918 722.638 cv
923.179 721.253 924.851 720.562 926.933 720.562 cv
928.828 720.562 930.299 721.129 931.345 722.263 cv
932.39 723.396 932.912 725.014 932.912 727.112 cv
932.912 728.344 li
922.312 728.344 li
922.312 730.07 922.779 731.397 923.714 732.323 cv
924.649 733.251 925.942 733.714 927.593 733.714 cv
929.234 733.714 930.877 733.143 932.519 732 cv
932.62 732 li
932.62 734.425 li
930.58 735.237 928.892 735.644 927.555 735.644 cv
cp
f
947.943 735.313 mo
945.709 735.313 li
945.709 727.277 li
945.709 725.415 945.464 724.182 944.973 723.577 cv
944.481 722.972 943.674 722.669 942.548 722.669 cv
941.219 722.669 939.81 723.287 938.32 724.522 cv
938.32 735.313 li
936.086 735.313 li
936.086 720.968 li
938.32 720.968 li
938.32 722.694 li
940.005 721.272 941.668 720.562 943.31 720.562 cv
944.791 720.562 945.934 721.024 946.737 721.952 cv
947.541 722.878 947.943 724.218 947.943 725.97 cv
947.943 735.313 li
cp
f
844.293 766.514 mo
841.932 766.514 li
841.932 757.056 li
832.029 757.056 li
832.029 766.514 li
829.668 766.514 li
829.668 747.382 li
832.029 747.382 li
832.029 755.012 li
841.932 755.012 li
841.932 747.382 li
844.293 747.382 li
844.293 766.514 li
cp
f
851.352 757.157 mo
851.352 764.508 li
854.792 764.508 li
857.221 764.508 858.827 764.171 859.61 763.499 cv
860.393 762.825 860.784 761.918 860.784 760.775 cv
860.784 760.03 860.641 759.394 860.353 758.864 cv
860.064 758.336 859.614 757.919 859.001 757.614 cv
858.387 757.31 857.195 757.157 855.427 757.157 cv
851.352 757.157 li
cp
851.352 749.388 mo
851.352 755.202 li
854.767 755.202 li
856.417 755.202 857.572 754.936 858.232 754.402 cv
858.893 753.869 859.223 753.048 859.223 751.939 cv
859.223 751.169 858.96 750.552 858.436 750.086 cv
857.911 749.62 856.591 749.388 854.475 749.388 cv
851.352 749.388 li
cp
848.99 766.514 mo
848.99 747.382 li
854.627 747.382 li
855.49 747.382 856.225 747.398 856.829 747.433 cv
857.435 747.467 858.057 747.576 858.696 747.763 cv
859.335 747.949 859.883 748.23 860.34 748.606 cv
860.797 748.983 861.136 749.426 861.355 749.934 cv
861.575 750.441 861.686 751.021 861.686 751.673 cv
861.686 753.365 860.831 754.669 859.121 755.583 cv
859.121 755.685 li
860.416 755.955 861.428 756.524 862.155 757.392 cv
862.883 758.26 863.247 759.337 863.247 760.623 cv
863.247 762.442 862.593 763.88 861.286 764.933 cv
859.978 765.987 858.114 766.514 855.693 766.514 cv
848.99 766.514 li
cp
f
876.717 765.638 mo
874.999 766.441 873.501 766.844 872.223 766.844 cv
870.014 766.844 868.298 766.196 867.075 764.901 cv
865.852 763.606 865.24 761.762 865.24 759.366 cv
865.24 757.021 865.871 755.177 867.132 753.831 cv
868.393 752.485 870.094 751.813 872.235 751.813 cv
873.648 751.813 875.143 752.206 876.717 752.993 cv
876.717 755.481 li
876.615 755.481 li
875.032 754.322 873.556 753.742 872.185 753.742 cv
870.721 753.742 869.582 754.229 868.77 755.202 cv
867.957 756.176 867.551 757.563 867.551 759.366 cv
867.551 761.169 867.955 762.544 868.763 763.492 cv
869.571 764.44 870.712 764.914 872.185 764.914 cv
873.598 764.914 875.075 764.343 876.615 763.2 cv
876.717 763.2 li
876.717 765.638 li
cp
f
889.501 759.087 mo
886.061 749.654 li
882.633 759.087 li
889.501 759.087 li
cp
892.18 766.514 mo
890.212 761.055 li
881.909 761.055 li
879.941 766.514 li
877.542 766.514 li
884.626 747.382 li
887.635 747.382 li
894.706 766.514 li
892.18 766.514 li
cp
f
906.322 762.565 mo
906.322 754.631 li
905.062 754.047 903.885 753.755 902.793 753.755 cv
901.396 753.755 900.312 754.216 899.536 755.139 cv
898.763 756.062 898.375 757.382 898.375 759.1 cv
898.375 762.519 899.645 764.229 902.184 764.229 cv
903.529 764.229 904.909 763.674 906.322 762.565 cv
cp
908.557 764.889 mo
908.557 769.595 906.326 771.947 901.866 771.947 cv
900.402 771.947 898.946 771.748 897.499 771.351 cv
897.499 769.04 li
897.601 769.04 li
899.082 769.649 900.546 769.954 901.993 769.954 cv
903.457 769.954 904.545 769.626 905.256 768.97 cv
905.967 768.314 906.322 767.254 906.322 765.79 cv
906.322 764.368 li
904.79 765.654 903.187 766.298 901.511 766.298 cv
899.81 766.298 898.477 765.672 897.512 764.419 cv
896.547 763.166 896.064 761.432 896.064 759.214 cv
896.064 756.996 896.659 755.2 897.849 753.825 cv
899.037 752.449 900.512 751.762 902.272 751.762 cv
903.66 751.762 905.011 752.139 906.322 752.892 cv
906.487 752.168 li
908.557 752.168 li
908.557 764.889 li
cp
f
574.571 338.239 mo
574.218 338.239 573.875 338.051 573.693 337.719 cv
573.428 337.234 573.605 336.626 574.091 336.361 cv
783.202 221.962 li
783.687 221.697 784.294 221.875 784.559 222.359 cv
784.824 222.844 784.646 223.452 784.161 223.717 cv
575.05 338.116 li
574.897 338.199 574.733 338.239 574.571 338.239 cv
cp
f
579.57 337.239 mo
579.57 340 577.332 342.239 574.57 342.239 cv
571.809 342.239 569.57 340 569.57 337.239 cv
569.57 334.478 571.809 332.239 574.57 332.239 cv
577.332 332.239 579.57 334.478 579.57 337.239 cv
cp
f
416.006 451.396 mo
415.746 451.396 415.486 451.295 415.29 451.094 cv
193.709 223.537 li
193.324 223.141 193.332 222.508 193.728 222.123 cv
194.123 221.738 194.756 221.746 195.142 222.142 cv
416.723 449.699 li
417.108 450.095 417.1 450.728 416.704 451.113 cv
416.51 451.302 416.258 451.396 416.006 451.396 cv
cp
f
421.006 450.116 mo
421.006 452.877 418.768 455.116 416.006 455.116 cv
413.245 455.116 411.006 452.877 411.006 450.116 cv
411.006 447.355 413.245 445.116 416.006 445.116 cv
418.768 445.116 421.006 447.355 421.006 450.116 cv
cp
f
185.964 670.411 mo
185.622 670.411 185.288 670.234 185.101 669.918 cv
184.821 669.441 184.98 668.829 185.457 668.549 cv
459.662 507.458 li
460.137 507.177 460.751 507.339 461.031 507.813 cv
461.311 508.29 461.151 508.902 460.675 509.183 cv
186.47 670.273 li
186.311 670.367 186.136 670.411 185.964 670.411 cv
cp
f
465.241 508.188 mo
465.241 510.948 463.002 513.188 460.241 513.188 cv
457.479 513.188 455.241 510.948 455.241 508.188 cv
455.241 505.426 457.479 503.188 460.241 503.188 cv
463.002 503.188 465.241 505.426 465.241 508.188 cv
cp
f
283.101 438.466 mo
282.993 438.466 282.883 438.448 282.775 438.411 cv
143.396 390.406 li
142.874 390.227 142.596 389.658 142.776 389.135 cv
142.956 388.613 143.524 388.336 144.047 388.516 cv
283.427 436.521 li
283.949 436.7 284.227 437.269 284.046 437.792 cv
283.904 438.206 283.516 438.466 283.101 438.466 cv
cp
f
287.724 437.466 mo
287.724 440.03 285.654 442.11 283.101 442.11 cv
280.548 442.11 278.479 440.03 278.479 437.466 cv
278.479 434.9 280.548 432.821 283.101 432.821 cv
285.654 432.821 287.724 434.9 287.724 437.466 cv
cp
f
194.425 806.573 mo
194.184 806.573 193.942 806.486 193.75 806.311 cv
193.343 805.938 193.315 805.306 193.688 804.897 cv
277.965 712.858 li
278.337 712.453 278.97 712.423 279.377 712.797 cv
279.785 713.17 279.813 713.802 279.439 714.21 cv
195.163 806.249 li
194.966 806.464 194.696 806.573 194.425 806.573 cv
cp
f
283.702 713.534 mo
283.702 716.296 281.464 718.534 278.702 718.534 cv
275.94 718.534 273.702 716.296 273.702 713.534 cv
273.702 710.773 275.94 708.534 278.702 708.534 cv
281.464 708.534 283.702 710.773 283.702 713.534 cv
cp
f
421.885 875.953 mo
421.84 875.953 421.795 875.95 421.75 875.944 cv
421.203 875.87 420.819 875.367 420.893 874.819 cv
434.426 774.324 li
434.5 773.776 435.017 773.399 435.551 773.467 cv
436.098 773.541 436.482 774.044 436.409 774.592 cv
422.875 875.087 li
422.807 875.589 422.378 875.953 421.885 875.953 cv
cp
f
440.417 774.458 mo
440.417 777.22 438.179 779.458 435.417 779.458 cv
432.656 779.458 430.417 777.22 430.417 774.458 cv
430.417 771.696 432.656 769.458 435.417 769.458 cv
438.179 769.458 440.417 771.696 440.417 774.458 cv
cp
f
674.734 826 mo
674.343 826 673.972 825.769 673.812 825.385 cv
618.468 692.506 li
618.255 691.996 618.496 691.41 619.006 691.198 cv
619.515 690.986 620.101 691.227 620.313 691.736 cv
675.657 824.615 li
675.87 825.125 675.629 825.711 675.119 825.923 cv
674.993 825.976 674.863 826 674.734 826 cv
cp
f
624.642 692.121 mo
624.642 694.883 622.403 697.121 619.642 697.121 cv
616.88 697.121 614.642 694.883 614.642 692.121 cv
614.642 689.359 616.88 687.121 619.642 687.121 cv
622.403 687.121 624.642 689.359 624.642 692.121 cv
cp
f
836.999 702.372 mo
836.818 702.372 836.635 702.323 836.47 702.22 cv
621.304 567.653 li
620.836 567.36 620.693 566.744 620.986 566.275 cv
621.279 565.807 621.895 565.664 622.364 565.958 cv
837.53 700.524 li
837.998 700.817 838.141 701.434 837.848 701.902 cv
837.658 702.206 837.332 702.372 836.999 702.372 cv
cp
f
626.834 566.806 mo
626.834 569.567 624.596 571.806 621.834 571.806 cv
619.072 571.806 616.834 569.567 616.834 566.806 cv
616.834 564.044 619.072 561.806 621.834 561.806 cv
624.596 561.806 626.834 564.044 626.834 566.806 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.1.0
%%For: (OLGA) ()
%%Title: (Hepatitis B Virus Scheme.eps)
%%CreationDate: 1/26/2014 10:29 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bp0K+Q6<]0Bu^/QZaEt8fs\3G5"[VH((if2CISP1<*/frc'Sp`"A,sc+:!bQ;87S:kslkHN"hHWOG\-8&&?*Aa7FKsJ,3*W
%\R45FfC/"L07TMqPL%,h#U]0qGkp>pJ,7dYGDj'<qFij"pE(1:h5fr*H?"/\Cf[%mh-VPSYOhGJlhNVeB0Q,5Mq)S6o;#^;YCD4<
%W\;gCg?!(sDRLYL]1I/\d#7E)o^KWO_,E#fr[tC(\\;D+h^i*Mo8B(k5J[/?oM5AfrUG3=gVF$O;a[)&GCQ[Lal&u"IJ/`j(@RQ5
%]Bt!TgoUP-T<W2)A]>hgH>u%02de<V#MNh[k%)&J425.iGW$5i$\$q1H%JE]^QWSSnWc1^.YA6=W<L`FYHT]6B_sp1J%",2DtnZ9
%M'iUZcDt#Fr/?FnAAKN_iU'/W#kpL_?hoX-M0o$rikt.u^0Ar=VEo0d:-Rh_mN:.#:5:l"6$*j.ANBS!N.S)c#a.bck#Z8"As:R4
%nd=:tP\2Ni/:LbTIfAZo?Pi='`E(9rg?r9#rs@k'^dm8VmXDRrrnDb0K+6&g[??U3lcm[``CDB[[&Z2.ZF`j'?$^l_hnE=]!+Imf
%HT[G*:($SAhqW_VCB!N#+g[CDq=]!:rdOH_Rd0'M=AH/H&mT!NQ;>B-KQUm\*a9[]6Khg<;hr=HE!.1Cf.T7k<re]HDO9gXlbA0.
%hWI=q$.Srk]=bC6Rn&Zo^X6f!$Klo<s(0W_"hWT"XkOIX5;Za%Ol-AWIP%2^rVQI&Dq=M+DIHMkrrQh5_^/D\kIWaeT#X8+a7RQN
%rcL_4$B?EgA,Mp0pq86KHdh2ZEK!-B(uL<_HoI)]h6s0#q6;KgDQoBDI`H>/L>B/:D0=42`'+/k)1F53HFtf6>?PDor!gDN\#-uZ
%9nSKb%DL:JfV`TVh6tQ`HG"+"6eh0!4DCBBc\OfLho/+YrA]PPnHX6TFl@Q2L?m:<np@kpr/Q2E;>?^5Y1pc'j1=_Are69Iml2#"
%((ZC__XFjTqupHIFlB7hT(3;o)_MT7A"U3KfCY;@o"<GaQb6>nSKHtDo)a154?NOiR_0],G2Y+@L24`r3#!G[YFOL6K>V'#)m3%6
%R^\"n`\lb"r!O=^E.HhWo(WiHa)8CVr6C)>i51u,1Vh=9=J3bd,jE_H'RB/P)fM>9%Bl?>5a1B1nL*q\H>MA*^T\5$:gk%S8<<Ab
%q/'@]I`H=7laTF@(Od49@inqu4K_M`2i5#)5D(+b_-)=YiJo82+N$I<QUK/cGG"'=HdA>.Rn&[oK@0A^oWam74qGsAnGE,0PNRkH
%ONhFa)oP+NoYmJ>Da-GgO6c2@pImNhh?/LS]`T#_l#@)*HLpN<lX&>p^cCY&dc5LDFLjMErF?t:*t=?G_&*(b<#Nh['_,E$-\!EK
%s)!8V(He:dr0%$#?[9qHgRnCD'`</PQqoBrX/bqHqiee[RfBf\q$S79:AH45PJ:]crnIG5YJ>MlT#WY*msMkI\,O?2EK*iD,\]>W
%EED7K1i;!IaJW%c[V5m%VZFJ_J+Gbk8kP0-;f)A$gZ%\WJR4hCd&Ek^U7<:)Yn-QDT1B(mqL_8\Vbo&e>Pqb($id*MV4l<Chr@f%
%EI8qPnU":*GC5q\_S>n*SMpJe6cdu,,bAm;j[XROp_SBo;Y,k:A,'L#<u(A;I=jHcISPLu?fOquq='nrJ+.Y<H%$=VaU@'%j3Qd\
%irOBg4;4;44cW$dT;J5VYI+3DD'loR&)!O890,&#fJKRLU@'AfGO2Es`HUrm]U3YK]IKM_J4Upbe)Dl?Bq7!i%0t#L)TQco@ERc*
%'b!4sHS$q6nBWd&fUE'Sr^Mt?9)67":-`?@eFmm2_Oq<[dl=hWTf]>gc\'U8huS:+(I23&0Csf'q$M8W!t8o;7PO<;eFEOL,O9On
%4O3_A*/K/>HdJ\VDX).&&9bLS@h4Jn_&OFj==7roT-qd:`II\b8M7)NJ".]ILgZqgTQa-9AC-W(LQ;[s]r^WWpnfjW0EC-c\dLV:
%=ZaB/G?R4j(WLY1B;Z!6#L!EcJ4B&Jmt:U=nDX*m=s8!]E29,&Ve^j<],KUA/M&rT0%W?C?_bsgk5:*pM)1fE<Sl*="\f;aREH/X
%p0aL^DaI8iAQ78m<!@Ypi#T@9FRJj[^sCfl$%%BC7dlp"P%KDQ"H=1-p+mY`h*hu9oU/C:kn>iW,MaGoW-R2]Z6Ecp8]r`N8jN1,
%UKfE&Y,&/W1S_7W?l,93JW>`c8ak#2i;HnfkK-fXSTYY&@VWnJa]OSf)2#49,Qep43b)(U(01b^Eqaj7EUV'tU<e#Fe5X)'AQ._6
%NorujF(f]BoY76C$^`t+:>m?4H>?'I7F(>+=\Qcg"cuMN'8FEX&Eeucdnds?9AY@P:\/[37#gO?r"#9Sqr(R6!(QOh7FQg<8JLZ,
%LG?\5=i06>mgC+k(L/2^Xm7<MB(4f]b47S&nI>ISA9+,p]!cn/J&*frJQZdA"'Q;3`BYT-GIPEuc''?Ga_1Aj7S."I=]89JCc4^[
%AM^tYoQF%Y['#q]OMPWF,orBSl=j'DUHgYrZ(.uP*#WX-QHmnuLZQ?\R3?rS6(\V<"=9q5r!EC=@.\]$c)c`jdCb5%$3AVk5WsL.
%BfIX*Qk5GEIkHMA+ZLceK".a/"/*d:]NY5ihiip]Sc<L5HjP:3=$-Y2Y`YXS]P2Ve[rPnkkA.F#gnG+F0WZ'cRh)eRE1?G5=&0oj
%qC)P"ro?2`?p_rrj53i:0OT&MS'gKE@#u8^M,pd<+s`j>XdKDh0o%!+7fe8N!G[9M"R/1s*B#;(%EVcX&if1iG,,7cBJ\:'r&]VC
%E3H.['AC``?s^[G0mH*K<tafc7qgi,"itWD8sdK*!sjXk3Z9rr2<$`+lWHO`na@fXq3:P/CKYPo\KQ-ha_*E^YZ<Yreq=%3Hu21M
%bRe\N+u).q]J_HJfE]'n#"7CGYadF=i-?Si@Bqd%b*nuUA8")Z1+DNeACUaj"s,4W1b06m(7YgB#rAPr(b3]p*eSodH!j*&(BPPC
%7_snbi1"*E6?7=4^_GY@?,sXPc`M.^n.hBSX<'Pd_[U>uBOH`2BJFB:!tbQ7RFDS`Zj[T=/&iZ&+HY@i3@GHfiKP3JE@qM#0Q:Hd
%9,A?J9lPMp=o`4m8,s:tNj$60`Zp,H^nK^\!5mfldi\[u7SlU%Nd*DmoG[hUTrl.V!d99gJ@c?56*CVJK9sbBM?l*a_*(>O1mW-M
%QIt1R$fGZuJ)f='-3ua'$nQs<^4OJYk'!#?DeF[^8t&<oW!)pB`lN*pZ<9p0jclr>L,?>NE$R&oB#1*5ZS4W:ob\d+UMTF#iCUmK
%.bl`5=2mN#>+,Pm"Yd&F-6_nQOZAQF.YfUu)?Nu.g2bmjT7.j>9_ag07/paAW8h7P>M'Dbk7-eb!cWuD?<2A"'9L*Lj"Q%=m>3Sc
%<s9U#p;KdYBhCd#I!@UV>c&A>/Y$qkT+g^;l),c[`!P]sq1"p1_#)*$I%ja^d^eD7`2`l>P;\IKQRSV?j;b#=Sm),bR8RG8gc(V@
%,>9!f3M]5&NakW#;Zc;ed)"sWFcp^Q1]4@Am+]D'_Z!>PTUsVG-?)3iFbX#"6tRVd%&7L:Zoegl?Go03>S)X[3I,0,oJ]F#%!GG3
%$Dn@./42fd6V:"m$Ed]d+:(&3iY#pcF.bH@G#[.LR&:gNa(<2/O@7HVJ<h?<RcQh)$sF;VW=Z:VW;rJTU*>0IW0L/"`<,#*'8K`4
%M-Pc@M6KWe:7N&8(qq8>)NbG(&LWUmZPnrNS4A+..aRGddAKq;<Zqh]0a>RT(p.VBQKSsCpE353@NHns7#k46U'gIEYCiS8Z=X"Z
%8J-E%'SO!DE:/NSOX2V(ge1g*9X(Ue(oGD6$na'EL9&8K-t3?%]q)P%YidGJ!WpA.Go,NcM*^2#NgUaug7P[R`DJ[Q]Z_?PM`s/k
%&t.a*VXsj#E4Pa]d\jun@R.nXe`Jke*2XY4`2aH!Q?AD<EW?p8io&>qqOiG9-#B?WZ$VMD/!5H<YD!]:2NaXsZ?!?F':DJ\H6k''
%-W%nmIo\Q_6&9a%e1dldEP?r,a\fR0I-OJ7!if1Q86,0JKP2q7%6KZI"Ea_/\8=7$$X<n-L9Mgl!E35/d<gNMUouAA9#K:.$5?2a
%0`&7DIl9#I*F.JAW=n\<`*H=k65q^%Y[pNc_ok[i#9RaoqJe5T0&s68NY<ZV+ql\-;E,#2$P/&r8<**CMaG!ic6Yn1:RDI>h\pKb
%paK;["%s<DE`C_V)30^pL--Uc$$T_b.)\\8EKUJZj[e=@-'T:oCk0!JBt)782^3>&>S17pGRSkJPBX3f?=5alRQ-iF8MW*g39,m7
%*)Z5C@'/N^X0.9J$lpC>b7lrUV!0T/KXM_85Vs-::S35jFt4\fb[?0%cT21E#Dh6!`(R:g-#j`G20.at)k:ASmm'K,:\^ed3<S[M
%;#@PKc)c^IVJFO,Yjgc9cV[^XnI6`2OsZ0TPn=3FC4%^f^[]5U'*")pb"2F>M0[1)_\6k0Z4227@TpD_o[u?<_"rc3OVW-[q$d?%
%!6$_UC4SYW"k3$q8TL@6Fb@TJMaE@/Tl6GiObaR?i=Wpu,rc_'D*ja:mV\TscH5VN,4\_6pdLha)dNbZ-WGr,XE9piM1l%pBorgu
%;CEkD&W-g=K5;6sE98X6-8#9dR=jOH`on9O6HqTU2h4:7H5'm<qAJ;]%(%E`M0QoF(#4#OmdNGRW_/aa&Yi$=5l?mUM)..)AGRKY
%9r`pJ(=As,7YnNK,NV?"e&#&b[d#;h<fPf>'_SHqM.\q$L&j=W_7@_?<Q*-_GQD(o"<\'h<Ols6l#Unadl7mO8ZZ95=V,/kJ:@nD
%7%(fj$HBH'*br?QV!>niVL):"+LM0@GD<%+I4$Ep@\PUdW'\<-A.GZiSLc:YE3^sX"2C2>SRX)]Qp*o?aC@%d;;ptai[>@\!b@s[
%K[:$,VnuU-(?3oeYNBIj?s<t5$[GsEQWIRKUPj.nI/nkd0sdtn@!C1@G"A>PUiEoH/9/J,,@Sf8Z@jPVP(HJ)C1%'/>/+rhB5;Y\
%,mer-G:aCl@Rula,t8kl"C^7-5D$AQY"4!hLj+'0Ps1pQ,0a!.;RKg\Ue6H48-if!e@)Zh\rB2(iVY(R(_6rq,2,?t^_f':]":DJ
%]EZ"i,JkYL`=+`<K\<1Sd,mHfE"E<D64+9YMBjA@&L!1\KeX9I=FWi?&bBRW)h`_"DCQi4Yj/;H\k9rG.<9PW@oj6=OIm$M/H]`A
%,Gkp;-9a"KTW=$=I$cb[9<Fp>S8M*-,@c1'@@:tLq:lQQB>j/sceLfj=i&il+c\tuN&M36;re#M@n;noMWpf;LAt:$*&;M!hLKSs
%b0\4V&Bnc@AJY:KcN\cMAqu!_ZJ,cYbjhjZIHOs_`t_Q=@W$u&,JoP+1,<U+[\gUp>9ee6cPBX,dYK'5'G1p4#V!%a1T%Mdq7+Ph
%&gu3<&4/W5L_-Ih2pS'M.nL>r#(P[o"e$<3TI`A9Qn0ECN!)?V]SK+O\u@!C9NbB3A-.f#Gk`WJ8Y]=b$>Pq\8BV%^'5XH[Lk1aC
%/31V#_iq-`;oo?p!!UQ)>.Z3Ao8$D,O]aTs>Zc*a>F(C(4@D;,#F@MsNC4Ht$3c`[Y8*!9o$/%*m?7:7L?'.KIRP_XdHs=#]lg:n
%D`!"S1LNVu6K0),'15+B]%=(P[0tKCW.?>u=Cb*QO9*<&;EBTbLp[RmbH+&l,@u4SX?#nD#U6Mj9iQ%5OIhJ6g`Wp;AK^gm!u34\
%Z];UoEf:5/pa)S7kk"QC>4FAs4BAuB`!0"C)M7\i`>$lJiO#"),O7e:2c8eN6-H!;<Z2%\1'YOFdj"Z/1$AT\EkUt.d,_IZ/^B?1
%+=?/H.*RltK%,"g[YU<LikOi$9VM`3;hd[bf8^]P7V]_;XqW2hl<+),l3;nlJnVge;k+/XBUgp=!#.[s@`b(,R]oZT.<'.N#&/q5
%._u7h'iqGK2MEikR.!o:j<+mo5+&QMnUO'&=k:MF's+RBk^rST^3`CD@&KJN9PW9@6-DtqC1uB9!F7u-fSNWS4@RGF+2^HHc$6fZ
%Vaa2`j(*UdVS]`9Q;fEVdT3:o,(:_*5ZM51OW/2=5TR2E.(`K1bX-Q2MWB'9d)o6L<fdm(:aV":+oIQ5EJmZ,(2jsE#U2XBd?3oQ
%4KdHX@^eC0@hlcdW?$k1$?3&o"KNP>EbEh>"?KViB2!WRi?X*s;BK>$EL*]#@;KG\7B'BT&>L,FZ(n_j0P[HRo:iOf@q)"1.O'[.
%Ka;OKcA85\1oZ/G@bSNq$j@d7f-JD'2!'ZRVQ+-7)Fns(@(cZN7?D=/jt"UZ]6Z#k.n\3Ne%/aP^o.nJb_Pb"5ndiu7YV\>pRO%9
%D=p\uY%UA*U7>c&_InK)H'SjB9h8M8)0$WSR'"d<A!r_S&u%4]Jgd"#2dRT%,=^4DYboWMb5Y-DX-mCQM.(&H7<0Bb3l2`j&Js?1
%nhXc5LKY*Zi@5EL#[OCY`__EPS:pO2[)5ShfM)X?.\CHG]oVJiL)d`A["/u<WtLhrH\UGRr'_'X+9W7a0mGT#4I_E\U`*Ep#tP=k
%4!_*_.]T2.R!9m^!iDnZ;t`m1$rX4-P+RDL&VJP;DB&]\6F'/'d#@Z&:Hl_A<$aA9EPtIKP$u=5?EGCh`Se$eALATN@*4Xc2(3JL
%+?AH3,2S'a(=ieMNfk8f"s.:en\;J)2en7]%l\$V&4mK0A!8BNen>hWJ4Pug<]'POL)+;gSjOeAk%V,H.E3n#m"n!Z<`_ZRGLg"H
%bYcu>S#s!6YiNef5\dQ_24.P4GWmf^71`1.O^Jf2";q7B![/3-A4ocm):^UMkDZ?4";)g_+?/iaq.^Jl>Vg`B&dF9QFRCRNW8ssT
%NJg)KB=F&sC3]p:<K6bq0/0P7!"`g)n;3rYX@*(%$'QdI'o=9lW\`'BAaG^3'*T6oE@NIu;._%7&ZZjD+C@.cIM@eO:1CA(Up:jO
%BdHTWpqfU7ZRF"^=TK!Ki%Q=/V'`G*qo$KZAqGhA6Css<$VJ4pn?f^!XImNHAXN^O<Zu3sk_)g[-@7-n!u2BCRL'^Wighp+O/0$_
%PVo_IJkN#;4YGEd)(1<2;#/)mHW9@]Bu!2!ZA=`GoT]eA@nRE6"B]j1fuhn)ZrF$Kq[P-G73KS=7`l-<A5hRt%;`F#?C7bOB=!a]
%(7-Gd0Ho\D6=j;&[81US@J$pA1uW:[?@sSo0b)L3-(rL"#I1FpV8H264[DMQcDg2FPHRbOLKga9NMnlUiq^SMl4W2g_R>mi;KJ>!
%41rE7[E@4?183_/>:&cnX5$7?@*[nNg`uAS&E\Wsl=*(G'/h<ZE\pp%k</E-0n'rLPnB_5RV:)2NXQ<Nqq.>t;j<nq0fTl4qNSjQ
%"H&-d<%JXH;kTG,34r.JWPUnF>E&1pFYUrf+;#gBHt7X'd'q6qf5qFkXg1EaHLL>l7!sWU>AI2Md9clU7<%qfP7'o_d%ViIT$/gN
%S_C<FYXcVu"fs^milBp(@LH7e1NALlN*&?$$b%"-Z^9`g7+9,56]/NUVHfq'Zs\@62'cC;XAO*YVDJDA6Jb[$@H'%GldB/H8#m,h
%0A.@)c9$dW$n$g7M45u@6r?&hd>AUo)3JM&5;U@RVn*LC.kqMYei:QQpf^gona+ZKO:]^=/#_dJpX8i$Z@b=1bGa2^g8Z,DHBY>#
%#Dn=@dQ"*th^)ah#9jm$&#'Ub84Yt+jq^!;O6int>+n-oBGRmS9)$)f1=c&eI.bHMN-q%$Wp&JTQB75?1dS!i4Cd;3nD%XoH3]5j
%8&G-ShCe/9'(LrkD\.:)\>uo7cAH1HA-hapD$/A3c-'L6%P'F-H-X4jW@YdRZiIN8_WRVUDebQOUebVa`264?a(\%HL*EN9'V`]h
%#[_A/:_J=e9J?B/$'P\cQ4'-!D@WrY3##f5_I>G?A/nrc#E$a>QZ*;ApGeuFJ)qE6\8^Heglmh[g?@H-oWSAi?N^B&Ca'ZM"6[Og
%[Sb%^,l$U)CCO)n_n6FPI)\WTM%7Z+.4^ddmfD9_VD+a:-!-@nc"fjAH*USRfTm+0OU7grSpOR6hJ5C"aDd%%`tZ3,NU[$;"CMrX
%ZptdVJ4^<K+K`RNW/&%\e\JeUVPBY7YrL#EU1>U/OEER:qp0^j7Ko'=T-##E@`5mkiH4KsdNG#(^fW(DTTi\L`S1MZ6+"'kSon6@
%B[p`:!@,a(e,WAaTfgnC27;"nQg@)BC-M/1/Q<\4FuYjj-)ctA":R>nER.""-SuT>N8gX!+#B'o$F7`5ScF03#1qOp3)7?HB05(T
%^FN$Mm>BK><NRt!BbS<j"p,e^A7P-I[Dui<K_Un4j(iPFRN2mUq!CiX='7!djQ\2L32@,!bSZ=slV)0O'N&7H5AJ7;<@Jj^OJSrp
%A\G$Oi@n1#+dc:T7KbCQZXK]X,g`8^Z8V]BR2T,C-;\"Y]lfN2k*)'2$!8n/6ln^h&0P?AGB*$]D,c1Jc!U`!b0B=Gnijki.;R#J
%1c%b4-nEBWVN.@L>h-!PFGW348E6R9800&?Ltg!5SG38J'lhnB3s.g7ALW'K0N1tb7=hs]'AmBV_ul5SaA&1Heg(HW.Q:g4H?9?<
%pY/AHi'V[;8)BI-f**dGruGAk*t.H:Bu(b/?k"cPTKnD18iMkV&9U-Eb\k/]kFnf51JseC,"-5umKKbfPp%/rGS%XJIhVGUT0ZmD
%jPNc)W=4;Y,YdK6,lCf=CJ:_/JfDITb34G32I%j`R9>A[Dj]L*lq^f>?7;V]loL&4;]<^N69Pk39ne[<WZ)ZXDS-Hdig1YCVK^aR
%&Q3g!lU'_<Idt'Q]e9D.l<k*W'Do6=+Kj8l^ph+tN%j.jThENs.GEA@l3YJ&W[O>ODJU@)q/G,3C7(3E;mW`&`imgndbb5]qjG#E
%nkt^l+GtNFc@Mcf.kE<.cE2eGQO]uVWehbS[F7Q<m;re[c!5@a"*#D;,&80[7fR1uO9U0mCW_r`TGd4t99+q[W&X$8d5rtOYt)e%
%n](s_C:p85DA.VP<cJ&+<Jl:rY?X@4*`kp5%to-M1d&1WcRF96jG&?1f?r:uE0-W"rRenji*LuXL*dLV+eqt8OR>6V+E:j8NJhNr
%BCCRTC8_kA0&rlmH[%HYcNYZb>[H,,084DXe+Q!9S!KAKBcQ#'Fp?OR[c)YG;B&[$%]hIZK1h]:CSK..G(6^f<*G!$pX*\UFa4hV
%rEQg2pVhqT]XBpW]:5b[`$^W_r^UYGCs,]LIb\9cCRKMIBstal6m2&9Zh].9>;-Kl-OG(+h5iO'jB_Wf^%ZiX]>&d98PnW)+26FD
%"3WQ6,'j"D)h,!ciRR37hYc,OF+=)KqX*G,MpJDmc'u]5qsF;"H;;2&o:Ls,h4H'eaU@gOfD!JEibH3?rUU+Y[B'+H1#[?8EV^>t
%^;Z^3St@XlDRLYR!;u+urR55`\TJ*7YKYTWPCK3CDhec#C,KAE[hF)*N;_;t-[986Rq5+!Y72CnZ+[c'NMD9-:Zis_FE$(ToMP59
%qanJ)XDdONkko(+o).L/+^b9GiQYuB]_c(@FC-c;&"MHnZ!Djkk%S`%n(pjSheZ>:,IiB=AIj'uj(H["6VQ[W%tHUbGOT4Y=tSWK
%kI9oHf6u]R]Pg!t^pAZdkaH\.mh>Z/b_PRME?:a))uXrj^4Ac[le.i`I(7/^CQmB=kI:4Ap2$:kG22]p5gh7trquAS0>_s3Y?`^X
%\*a**#tY'!PL'5F]q0^Uge?SH99Tnkl?dXd:=;^^oCBjb?G?1f04.,RW/Umm@3!7+S3Ta-/C*8W=r#Y/")St&i\k\<+:45;]-Kt2
%-5hQf-D]Hcffkfj"">c%Yo3]kJX47l(6W:VEc_X4YHA)`1nCJL/BG[ZJehuQ'Qg(",18/F=UhLTVU/^=1;*m;#VDp>;Igs4;9;IE
%.*9uW-d86k70"om7f%'$huX*8TQ<t<_"5_c71B^D;5_cQd+U7J->n0Ab_G4W_V!3f5`Od"l)Q]OKV=_casjcc0E+2ie_l;!/q1`8
%^2o42K`H;o>ARJP>)La&ORc3(<Igp1?jYej"t5q;X[!K9:I24;E&.TP6$S4l=u([CL63@i#!rNQ$]r1Y;%kLf"9C6JITiJE>/BGu
%8ad6j;&*0rdYD(1=b.Q"9rk]4TLF!.-ZrUF6r`=L=r9f\5b$?2-9qqBM#;7V!9e(Za[#E<h)*@jg'e+q&6ab=#F:St85?374?T00
%J[(]QZXAO(0?K.eJ[5tm%B[HG5&C9OD"2hKd."%LcnISZL'Bbeg\H0k6@ZkT#.1Z)i?:ksI<oKZ-2adbbo?+B%[4n:RpZ:&o(*2r
%A=UIMQAAl_//W;)%_!5!"iL.E6R$1eD@as&#$Ws=%>1f`<KReGRP:D2J3<nY^ugg7.k-luFI=%*YL6taOb9fD`dSSC7!MEn]X4nL
%]Y_0s%:*ci^8,"+Gi^_J!+\A^-XLI0,)DR=neN,f$q)(K["\_q.`%1_7rr^%cWFgUAkb`Z(kWZ'$eW,7%1j8FOFeu'8-052-\<+#
%KB&E.d.hA`%6`Wg4(4?:BM2S=:5]<LW?opNQS2r*!CAUNT`qc19';+b:qA$+-NY:ADSerO/L3Uo2T7aFJ<ik0X4,0\FS^+Y"9C)?
%_2JV_oO%gHW(eG6-j;@5ZLheX#d_9n!H=25XMb/n&RBpK'T3".%_%k5WO0Z%qc0>ZI9lA=hGjZ%%!;u"$,KhZ@')/&Q4ocCPXPX^
%1P)]$+KH'p8dMF`#GN,gVNN&N,=nPJ5_^D5SghJb6VTl9!dd2Z&dspHI*?9q)^&m+]7lr!9$*D$iW<j&#V6*H(')/.EJ&Lnf*K&$
%0V/T'\hL:W&rIu#<+@\;KnpZK]F['l5TB@I,%?LqM`bh&SI$34@K&UA*FT%**FbdL9dYAdU#+5cd`l8U7$NHYKRJdBNfoS53ioWj
%^ECBko90c2+Q1McQNU/1N";g!8W1]eN0]4jSPWl`kd%!?k-'N4JRP<bQn`+dQOFf?%1`FlIn^ppFBbIk;$`[#/1dP(=o_HO#lsJ>
%nF?U^#r.J[ak7PHhZ+[]0XZYQQ&-5B7YmJ*Pcd(lS'&$&L'^Ic?\&NXfnGK^qdHBk*[NX"OHtjK76JI\Y)qSgOq@fSU-i++!YCLA
%P"T!N'UMK$Nck494Y\">>>+-%5`&lO&/V4ZR1a/0!3./VJ/#ds!OX+:V.dp[TLKqeD$WrU9F487`NJDsQ\LkEE[',IO.91_f:4HS
%!4-!SF4m+BmU#SS7<boFcAo(91c_#7Pr>BqV8cW@VFEM!J;<=uJJ)fGDG(B`P'CjAMP(R2imB!A+<8^pRG?;biM)FnOZ+OBA=R(D
%]@YYR)r+o]47kbHe?k26B>g'G#*nBF0,W+(V2RZKOLuc`qBWCK.Mo<g0LHal,_FZfEOeUC[?1cWRgU3m!5F&b"3C/3Jf2U;$\(\7
%RT:I`jS+MG*\lX_20D"h3*\j1\Nr&N68Bs)Z(/eS"VD-:'gsO]Han:K"BCi!>KH?o0$Vb,_f346mD]S.!HShqO,K%`aPTGe^DWo3
%FABb#"AB"&RLKs,%J3iF<N%42[Eo9-X3dlNC*@^1:3@<mP%b3!+dP_MR8>B$A0MltH">o:EE3C^2MmM``\LK/0I;jsN7JsnacdC3
%A1c5C3Ki5TPfCR3.ueeUO>nNI@u-r1+`XS,^`-ZdCa=%U_AS)]0LMS`ME:6aHT*jmb3<$t[feT>Mt+9^JD1[pDeTi;"hbj%Qn&Aj
%Mpe>U')X?&'2/e.KDgH!jTTH/jdhF,,*r_f&SquSS^&q8#lKk7E0FsuKNE/"`m>/!_-GGRI*<H#*R4[d*CnHWjpom<Z=#&ap)Gl/
%k>@Y#pbmYG).:>Q[($H/-C]\M'`saYPE-`@kC]?3"ndLNAs?^%.Z=B5L%JOL"2Z^*&=2r\W9['.8Wn1noE9fgXQ\^mHLMS2pPBs'
%I9I/0,%o3=jV_\iGNSTu6U&m+60Ng@g#6m0Z[-@dA?#YLWYLG<[:7O^'cXPi-Q$jQMN(fE;(FP>`C?u^W"g8Z@\Zt?e;B5hYu*#0
%C;iZEfVfN([:5n3m!$p9KlOk6$srC9`XGZ*l6j03$MTfqr=Ve#jCgIbend=Js&Eo=heOoTAt%U=)t]0FLopA?FB]n?mqnd]':-:M
%)iRl9B"bsir=AWPpI6.nb[*))THH;7'U`'Q6^M:ls,f>Y_YbWQA.Gf>@g\2*'EnKt@UWLS^I/GZ*)GYZ5]`\&X[rm]AM'kM4@h#f
%lX<MRja%imKXO;7=fW8tHI0OVJi6X?.QYq4\:GJ])CTPoHpL'()m\-qeUWPN;mfu4q*][7Fe0lE&N;jQ1%F?5,:'R^aFYTB"Jjnr
%*&1:o`Pr1@/1Nt2/QuNb7Op5`[BS+(2QGtS>OFE<FDEmB/(V[olRLt#=f?D\3^$F&?^Z7pdf`Dj&FMCjD)TNube#Xn)B-mYj7<r`
%Cs'mD3]YBa_WfL*Q)^%l><8gP1m8ek,muaYel(i0kh30m>#,7]*0b[*$s63L84_nakIkb%;oq+j3$PjI^/aN;<JCMA+'Cqkpf/r>
%5Vl:ETlPr'7AMn0p'<;W.[O8Q6ni.:6$3lWP5no[=[d'UAuo*^+pD$l)G\k(C+F*>[Hl.a6mK0@VNj<Hk\5<<;lqUt2#BAA['q?p
%/adIp01_YGhnk!t37LJ:%/>O+m^;(^e&)VaS/V(k_l\Bt_2/(@eRP&>Y#.jTU5ihc[&BWdq.rb:Xq;ikh1IFLTJDoL_D>%2f:kW1
%@mjq98$!bD"`[0KRM'43K7m`t!'H]2AdR?KTr&.I.#DqqoL_,H$+o=+1/Iu,D*9*IRjli`iL27K=OB!-KLXoO-4?If;pT8g%2Wil
%.&?]SehLRB-4F\0#VcR[CW[b[gsm0DNFCj]%]/FS3ejD7c7='37U="3ERfJg8Uu,OpR_6<R"\Lbn*BVI<_r@6E#-G!AB[8QqC.EO
%8'O3"$@aCL:`F7#BhEqP;a"jEUWDo&nk!?-3fAWjI,H<?4a$a4A\P4cBfk$>d7(cs@<=Q55#O8$XP[G,O#H1%X(<PO>&7Q+KV@rJ
%gNJ&O\m[G93Und\nLlKY5U58m1>u?fer#9d-!hmLm9s47%MuDrC[73FP?BRA*YeC48@Xg^\.N25TiGQKD$7V:&JeSdjo[aalZ"Sd
%dZXP0SLB<JW1CA5@D[Fng>AiSlo]Jur0#a*8p7HTl=5%dfhJ_fo=g?37ZAk'dVYiMN#E)W;_luE)gL1r<O3F[P<ZkN:Tq2]gt+J+
%eM]J"7^t!o.g*AB;n@[JBN$_7US>c#[AQsOS"eK`n@.t;kic*MDH6A0WTYu[el\*4P'*"jR4LoG8NOqZ03Irc7Np=_-aj+o]gtCS
%GUl4gcf>k2)sll?R5s#3>omNZ>de1(jY0A^[=5.[]^Y:GC'uC^\2;5=DQMeF@d'/dL@8?`/`Y5i4f2]WY/JTp7&Z1B&0(>mGX*BK
%;hh'n<2D,MO>A"pLl[[kWI_&n;O3Jja+c#g@7n>&GVS/DZ@sQ^aV>J5(_K=SOXVSQ#g>o*&<n&o)2oGh'nd0LOi3>.qW,Y[b8dd6
%%1(4oM#9=n"L2,5)b!c0#igguU,VQE(D^TsolYs),G5=Rm#!-@]qO`h'<8X^[aJrceM6n;[4P-BD)PnSR5bc_Crc_n`g2ll>RFK)
%Q3l;C(tBNTf@[YeWYhLA$]2P?<?'j><m5*m#SiB[TiJ\K*7mPnC35GpCi1Mpc-$opqFqtB;_gG7!iI6;,F]Zc`X1$O3Yq!c#'[;F
%r9<R"(lCX-1%'h\B]c78`8)t"%VHY.Fgq\\.<]%3&3l,8'Plu^;2?]]?-m3MBjmOY1?3u+^(do"(aICM8a(@pn/@717,`Pje_O4f
%47/te[rP[>[)QfYV\*'^&]mne2J61db?4e]fJI+0(GfC?7Qn7=RJ<-0iap!/1p)pA9/A1s@S!#H=`MIZ%?/r.:">*aQWthHZ:q*+
%dSuM_KRn([odB`"o+C4X@71oLLOSp4GNb%=HNP=Bs'Eb_1Q-taI;$*/No,9KSlpkMkQM6LN:2rs/4-=ibKBTH2$/905TN3r/?T=/
%_\>t%MC:_a%-V+iEC=3B;5Uf,G<7udR/R[_ZP7dM',*r.\=0ZZj64X*&SL95,TH(W;Aaf*3au&lK]N'(Ae6kO1qE.mUsFP-G31$t
%(Q@R,AHQ/oGbQu<#Eo##F8:AfoX%L8_*U_R/sT:SPbRZG$tX&dLakdW6sNfIi[`Oq'+HZ^1ZE+Qi<03Jgl^P$U,3J-J>"T\n-!Nu
%.nJ:p3!9_b(?_L52:r4?L*S$6"J6!WN@B^FR1mZ7:.mG`n]1lpgm<\\LkM,Y3\_?^dSP"BH,EP`ik2F+U5VclXRRft];UOt!5Zb_
%gJ@`ijs(pKV]Tc2Q1V$/ERYTV[VlH82]Prm"Z.(D<Fho>9#GFmjpb=8PXaU4GH/\g;AiJ*jf(X_:F5!K7@m0slM^S?,>MZY-q2Mn
%T9oCi*:[K-$p2+/T+'fPH^;FQr*3r\\46;&&7t8p,`[;Nm7*VS,N?Ztip)s3RZVY`@U)C#i\6f6FY8fSJdJ)s!n&_1Y"R+unV>WV
%bT,H^A)$WpK+V+AZet&]k%!4R,;tM5Vt8#V%+D@k-ZY3hT%6od^=K*\H<&LljrI022k!8^M2^<`jU7h@h)EngIHb^GT14U0a`$>*
%7WU<VZ'fN&3mj+LHYD+@af*gI2A?UrW!PoQ?&^Jo^bqt(7A0p-$JZD35?$L`6=V5)3M;FI(HCCc)ulTY0j<dfH*B.2>2NDX9r#>c
%dVFQcXF$;A2d9oK'bf(k$m]7Y<N>U9&5BeUrb(5:ei4->Q/`"?_'GGY!N<H`\,pp#!0&(ufFt)p@h^de&QUJqs86P(RHjNppNZ!D
%YK!RR_ZDq05FSQJed7MjEJ]%j2NE#_,NcGNM##N.,9pg8Xhfg]"u/98-&3FukQc6tk%R758g46a3lbW_0L\#g^D,ad:1!/c>[%V^
%i33:XAJ._sm&J8CFA:qs,fd1g.7Rg.qZ%Hql2r#7Piha#n;.bRaobEX73T@-@k:#eQ%W]aOKZ=,a(Oh15&qp;&,&T3+=J]0K#/C'
%5W]hI&P]QAP/-^B/@6K\oDosqb0#kl!TH)\opK&C8tM"h7?3K:BHH\-lL@[A/d&R&dbZ43N3I4l3u"$3YOSM3=WG6A,o#:"7qpZn
%eF<!<I=+FMGp&iTHpgAT<EQl:4CHg8Lk`WGL&K)F^6jN%p^^r-@bd"r3++.ThW^(ma:CZHYckr3;$5A-"s`sKW5F&L#@%4aO)("n
%,+o,bZ?O?-BEKG(+t#]$2\?[^(EjA^1nu!5;2R,1NO9pTeV?U7Rlbn).\hAkQ)g?f'/BihjE[(h*2FKfCX*c,'WcbR`4g87C3.CV
%s#l/G6qq0OQOq&O_-(9$*u4GuRW"*bm!Y!5EFY1a7e=U7W_MOWo<qRV`1Af-TbBT*nIr1TJnO)dc]*Y[G#T\8.`4b8VHK6iX7:7l
%f4U-.i(,!>QLqWX:jZ`k73fhO^5*/VHYk%f_Sus2-K_%E@kJ$:h#'GA5sZeo(Gc_I5pdcg&eP=a^*(]:'Zuj8H095)26#$%*.'t!
%NMi:;<"-)/E,SH-b`"/_,WT=3&g.Mo.Vb.aTf(M4,.#`<Kjg,eO>s$b&1AHLY-Z,iF/3s<`+*b7qb!S<C.[-qRU+E'7?ZFPQKS`p
%m*Noc;5K,tW$UU8In=AeFfplI1sfRCODHb^V*-F!CSOLF*:Yc04r=ke,Sjq:T].q.4VS!=+9J@n-mI`7Yoa3nON3>i7q+ZB7si%-
%"!]s`a)lFY2Le@Mr!4tUn&Me*7[Qjk&Rj+F$EWcf4V,Q"Qme/tM)'&c9Gl<A>P1mTElj@ul&RYu,nm8GJ.am4-DYPMj%X?!//rS<
%@npitX@/#j&TL,ao#-MNOb?k90hp7pr/!n9pb=00K`^mJ,>hA!,nQPXFUH^+b%:;F.kHOc9U(DRV_UCPZf8>^8$!\*2W^d)1(c%W
%@TI:d)E6cB7]k<J1o)7i/9Rs<e@65n'DfhKEchVQ*S&dW2ZXZ_7hSs03,,=-,-#<@c]=FS8+ZXh-I5JN!rSHk5;ntL9hj/tB<_cC
%El\!oM/+7VqPZ@9Ngk#YF7(l>JZYHd4)V\=i!1Xt`K,If>M@^&*:),A:u/D+X\`:0eIbI1YcOU-f+j5!Z!P/K/m4cM(,TO<8B%j_
%\otMFf`a7J+@j+age2F'$p'M(@bB*'Qc>):&a,:H@TbD6?qXW,;i4f<W0KMiJWDVYFa1ftDQ%t%MZ#(4#9<-$Ln19\37_^`lV"X`
%i<:R<!;9IX:@'=[6gA0U:AdX<)gUG`T(p\\h=qX2!l_ZK3B;"7%`Li%*/Qj6;'ciR+qZ+<:SP*>.E.E_'FAR^knu=4KHj#II\[oG
%JeDN@m];7b?d2$[^^fLqK["WrN$K?pFW<?CL9R,Gj@ur*L74<lS],3(GDbGSF3,EUE$clo*><GF,"F4E'8kA-4L;$7(8)T^98Y,J
%E_]c&'.YR\8etR1%nM4']:!1Ak8U0YCbD2]'oiVUZ6I40U`bGEPR6Re;PfI';?OBM"&4jaKg:3dA3S6gJ2olt&XcC017Y62fmsu7
%Oj;!dLe'HC0e=V9+TaDI<Fecq&G!o$,Xs'%\B8D/%2(tZ8eA!&%jUL24H"G@JWiEVR_h'//7ieC&V'mK&Ah3QYS2fU:=0-];ueKU
%.gRT?+4Nlu*>($jP['R?ejN,WmN]."r+fTj6fYJDlqn^E8N2[n5\&=>f=IYOl%EYDRl\f+]AeXPdU]k^bZ5?X(,89TS3W3JXHh;V
%1)jG0,=Ea]WumTB%B$(;8NYm6*PO]/K!V=;;;l=LNia7PE,m`f7;_:cW-.Y<G#HgjQD]AiI`V0Ia!:Hf7Jf&+0`_C&>a]-0-Ib\-
%\Y"c-B&bdPpREei2J\/=ZQp(eejQmERR,WOZDZY6)XL?/5."`N2TWiHELEO/WY=Bt+5en;'&7LM[)L.jg_\b?*.m__h;"DVH`"]k
%p$cg?O!r5iEc&Pfr,g85hKPX=1aKt82kY(S"+=H9LJ('r6bNqll3i^-$]b>jbF+/ce#qq+h3>(qe$`%9@QpG"#9/)Rf%pA+%^nYd
%@Dr+GlQ`/Grj9h;UVEtGrCK_irpqVpW74TDUN#*ik!,AI_If0k`U+r;c%A7ua%Ku[--=/"A),,6W[ir[/HUb-mMb$D@;UJbm%'^*
%[f*G=IG8CqrDB#!kAtK_7_*C`@0=n6pal$Rc1nf:-3Ha-_TJtHk_>,N@'RT$oP29^'?=s/;,#C##s"Gd-<.>B/:97/laHL+)jXY(
%2EnG-\=o:DP;u9WB14/k8$+aabF8h:d/]f%3H<7g.QRD_PJ&'Kmt`N6).ggV3][(YTI6,-59r9fE39K!I[6Hh?LH2t5=t`H,9HOC
%K+SX/Hc120g@*/6N['#FLnhBEUV8kWh?aVXf-_RHj6ZW3W,IOc(i]Y@?+lom/e`7#=3a_>8dWWCI'-W,3@$C<@0!-W@Q&sfe3M6Z
%-_mAt%4E't:HG`N6.E`q:69j!Q:d?2q,#l(Df*g<`,nNp%dQ]UN0lb2bK4hb[sSpG)N<>Kc6276YP-`>mcaZiguj$Tk_H[l='jX&
%P_ThmG*Pks?0)U/ahN5nTW<HS>ie+]q-JD[Mj\%8g,/\IkO"W0WB,4-b`cOAp\C[6T3JcIb?gM1QS/PRIe*(o\b^Koq4nn#MV.^9
%4>@bsJ('3D_nTWua+]9B"J5Kt-4E'*C&@na@Ae5R0^:etkN1@sI7p5K%CGiELMVQJ>@9B'Spj+WSIST!UD:6dWRjEsSjk!,b,a8o
%3%jgRS_[<hn7rQ5/s^'2Vqus%L!?F-5]$(sWen-pfLEMA22?AS1_0$f->="(aoNSAN4?YN0t^;BlTprt04g7-ijTD&'>5Nke;;a%
%Lp/-jbWaQScqTGuA4,nriV8TFPLUI<(ag1]SHj.<iZbO_0[/e+.*7+K,fb+&rSR:4s/8e>*bbX?S'`\e&;G0>3NOIe+pkj$l4,JD
%$)1!t?6R'BaeC9g5A*Sa1a(*sNXC;.lsBr_8[TM?@_)S>!C5oq7-(2**uW`os(0%Lg6k+??m"cJT;;F'p@(,e-[4A44%c_0!U1pA
%gb2^f-P$=_T]Cb7D>iVOnqd+MndN#?Rc041`]1gP_+!rE9b$s':(FG-6f9sfKMG"583S8?*$H<@\f`RT"Sp=T^5I[,:hg7J:0#tY
%N$,,eO$2$=/[!*hX9.r);9F?gXC?1J0VqDgK30$gUA*$E*r@SS[SW*/4q8n=8*8q3W(k]h>J;r86`9#)j)#n8Q4K2D1nhd5)0l>=
%Co<&0S[,F(H$W#Q;pKDe8:FL[>)Gm..-1U<RuRs'qA.iJ)%EF<TJhin:D9q:T1%E'9@fDUXmfNY[E:DurtEt0cZ3]9LXte;/T9nL
%rAbW]CI9@#0X=$USq#/Wm*]3XBu;)-4:$GLkA/R0Z?>2*3Y<i2$a"8:h2M:L)XBtIH4\VOq`h\)4Pe)O5+O_hH`ldB:GJ@\BMEEG
%pKk,hfW]AOVTL_SI9YYel],Ydn0Sm?P8XqX)qi+DfdTFg>Zp:gVT:O>KQP3D@$*(4,b\d0;knPVVR5M.l$Gd$0i7iI$:7ZpfoKr-
%J=s!a+(%G%mDo%&Q-GBNf\!6c`CWfEb'kN#EtetRNYc#;M&!s3><e5fH&C+k>9kME&^=j%a];/`*)h0iOEPF)+OMEZFrn`=e))Du
%O)=j7!ZoM9j1Ca%cJFcZ\?B]6.t'\16EWnr\3(i?b&;U\rg3(B:.9qTF$`+nf2G'>6AU<5SO+B8:^Fi]&/2g_LUq>,7rVB7`_-cs
%Qt\SVSN,<29bFN):c;(ToYCjBEiPS>"`"aMD46o4.k4_46EOuGb$Jp`+jOsJO6`I<A6Q%$L0Pp"8hb:#ntO`51D3U=-/-%C>F[O,
%E:8pL^4K=4Nfq+k]BH3$<O'eWKi=JaVT3B'kP2'I?0sTobui@&ippL_MS`5;+*J1%jdM#""6?57E!]&\%^9`Mm$]D.7ih":.fg!'
%b#F+Ul\q8a2%4K9QRgW==0J$$D,.Q:_U%oqBF_W"loEDmV"QO+"LT;+h[LJep=as+b@""<OJthXIf<>?cJ5&i]DcW[T-.9uHf.TJ
%(F#Wu%$>X\1@\<f.Kl"CWtJX+(K3nD/.cR&]J?`e4bufQq'76fPWNmm^mC0^.Zm]3PF[t>C10H+!q5D21_mt>?K$FZod9R:k'[\1
%L=;ZrCr"@;QQl09B[ESgd"bg_73[Yc[c:t1fW"gC\]u)GN4J@.&"JTR][ul6j%dWigWuF[3b:#t>@lnZ/+^k(MK;.%fK:Nk0('c:
%$V#!Q$FEo7C91[`bhco/ml;1a>j:W_-!@AEo3&EBO4A`:_)82?$Zf2gAgX-m.>l,KUsDLEPV((Pj>IU+//fDX/aL&<mTYi%ZS5N9
%3G=kL/iU+J,eD.:i2_e^ek@@?P)IRVRHA3Z(<^)B1&h8E4QldqlNYfSDV:YcCd1jd"@+07jodV<]c:V6?B2=HK.s0%jhVJD.%ED2
%6`N4i!rn'4MgJ]brPDIC#m*b7\#<9XIFo##o7Ok_'+F"=-$N!!"eDs[VD(#aK)+iOI^Z21$7bKZ3H;EkHb)fO%>-uNO&c;O!`UHW
%eIP-O*'!Ei6Z)V.>6dRTK4"gO<&d`W0m,d@*&BCe4&[@1eHUIP&Jh07#f)c2o44Sc8k_KG/?5i!%I4TPdnGL6"O:`gc3Gt"i2r*V
%I4_A"Y3T-e'KR_BeejLNBirTp04,Qop=q'l;TH]pFTPHFA('bjI&7J0)k(NY<e^ee*t.`6;?G(4-r*9I[$"td<IF$kA*9(\;e0o\
%Ug*SpCSN@1r=bO+J)YG00Oje+6daEUT7#hg,uh]@HW*jt:Z">88C)br!d\7ijN=f$ailL6qdt:mih,U(Jfg^\L4'D?c(p_B+#Gs?
%VPA]Z]^Li"+)%1jWdC9CX?/^?7JL]OKt7r-L%o7(kOS\-eB^]8m"o!R=E>q-(P"SeUY'iW_k#?VRDYcg)JSCj#?sTfj0KMN';kj<
%R)htc2\m66A,D[?V;JZT>OI6jMD[p,BA*+m3!q&8J#=hs+rOd0iAB(.\!:d6OV8.2A_a:aQ8iE1>RK1Ze"fna7<q>_&SI-")bZ34
%CZVK?eOh%mG=%LS5G@!q/PTJC<rOPI]E/a7a&Pu/,OoLdi^a.519>^r&hiQlAtlip`&OinW<g4MjP7rTR$7Y`nRg:JW,50dMG,<a
%kOBr.UORhJ'9jAV/396;]e:L_-$i946Y1X>IWekbA9qd3^?lX*j]"Msd;'o_<qK:kO34;LZDNb8F]*d$>K""DoJ*:adX^8kKEET^
%8SHhbUfe$rZc%/9/pl3C[ZAkK@+#fB>1WiMQAC:$H>Kg(^FQCJ28W[dbPj'8f!WqGW\hP1,\M_!W4F<WcX]CbCtL2[cn+uM:9#N(
%9M)N18Te4g_W[,PW^M;I$Z$fL@I8p:A3$Dh9[sH.g_O"SQu9W4E#A?KN6T\i?ji(*SUgU!<:aO5W-"rOJQq(u-,[kNg!UcDf%kBo
%WpN(-506>,8X6)RDMXT/kNX%Tp^7j84%V.pAW.1[Z&2:NnqP^t7g%/+KouXlrGm9ub06[OZL3Fd-'3`?.e/%)9]ZCOnKhn`9HAi&
%fQ]60VUea<,fDX,e-h[YoRXToSTGlH2]U1`oemf::%YY+&."oZ)\fdu(0F5(%H[>$\^F7$#H9Z@dOeD+<29Lgq[doXQVP5i%u$<%
%"j$7mQUZ>d*qi6n(5ZD0e14c22^@O^FWd:]]>orMAEBZ;9:]L&V4Od"Y*;=cf<(9Z85;3N$F3/ol?IDEHTX>u?0triaM"=01$Z]h
%^)_*1^?aZb4ZpB/O)A&P$>3<?b8,I>=0O:fB,L'9XCIPiO1*&D[AhRuV[k$+F<:hrKtr??c\uAn^,ob>S-R#)&4Z#r#C8gW'mc_t
%#=*G1/'O$S_d?"b&RseaB:\t=_=*JTTB#"1DLUU1#H()LSb+[TEZ(u#adNCqi,)X8dO92E+fc(Rp%t]N\+d^J)KQkE@NbE=-E]u0
%6R"P>,6s^f#&C6./Dl68@$&sU*c+6ij^t;Pjq-Q-h%-NT;d#XLn[hJo[+KA6i(,R,_[H(=>$jgj;pRL%!%L,MXU[T^>$;T4UAnDp
%`G3Y"<u/&!"Wk-V0pSB5U^UAFObDE].^iHfc`3P%oGgodd?T9n=[s?>5mES$8hJE0S:QU1'Q_t)PkUEKD<5p@%#AWT@P/aHFj&;b
%rlU3nX"@IIefD%*[=P_9=i]*nj/17I4R"nraQ<+.iqClM44kV$f'8iQ.70Q)O(-X\.mKmDpfr(;]gchiCpab0)HqKqCTB(YMNDSN
%eo[*]4#OX5jUsPgenVTo2_$HuS$bsQR>Brc29@3RPA7$?)5BY]MCdFZ/[oSe`E_"Kf+lMPr7ZAfiqa>\?"DkgGgcbo%ur#%#`,ZA
%#nS)ees5u7M9enJi1rYX&g>24mbNbmC<t^3&Yj!2Me0A^1pN3CPYW??^.<s_fQ]K,$HCfcT)[#+rYc+XE0GsY7NQWIX@$^(*jY/p
%kn1j6b?4(VOsF-[^RHW;X3Gg>PKBE\=.!"2^J12*/92B/m+UK7P<trT5=?>cP:;;m(DtFA1:B2YT1]T*dT?+%GT*mBmI=.bBC*gj
%YIX0"ZJ.m$.q?W88uN'p,of@$?eQ926$8aQqOH6GR].#lXjslG_A7E??dF.[h6I/>F7O$fA#gUih/tW_agh)oKj/rlL>of^qHsXJ
%`P`C6PEB@DEg1gOL3r8X*AsZL6:`QIgR:.A_?>Rco3+Ia\<u((4?h0^LQ+:%q4Sn,3Usa$p]2`\R1g(TWO>,6e\SNE$NT]a5Vb>W
%eq`25XM^_pW>V8VPg3uX:8XoC?e>>j6UTs7@/oV^YcajM*b#*JMe.ptE(4;nRgN6@I'K0P8!>RZH9n!;O_nn7>Jq6m_A/87XhtZ^
%U]HLO@aL@f?`?^9)gRN^Ad&>sZ7O)idp#C^_=^e`7fp%U10['#b'bc20t5;QP:uBi"A^Jg)gJVe`iBA3&.`kGp\Et6F@R#8glH-D
%B-tT\Rs*%%??>l@l0QDBLGOtcn.Pm'>mL%Nhon8;bWaoW649/=mP00W#J;Z0^Iq/Xlhb#VHXBMgCMmLu9W&XQ,t%C,@.nlqmanr7
%o6ti2B\;NQ'8Or6?YO7WRW)Z$mo:IS>\n#pqtf*Oph]Bg^r-D7s/+*I>>D]8S?Vd1:1YYed"G-38R*sbLs#s+rn#"]D7i(J8h=d\
%5?n9oE2*'up!g+)XZ^%;X4B:$HZjF=YlC[_.=4B>?&:]P3<;Ks5:Ru4IR5g*efU0?Cu;!c/53f=-!=SA1,gmW4FKFD0S^:*3h\Pl
%0Sdq$P=i%oSHPNM]-$#M_e+T>;]#N+&lL"oTRL#C#HJDM"X"J(.)/ReSK$Sa;8[('B+?0uT+$pJUFm3>N0pA.e#5qg"u7cf.%rq<
%Lb-B&aWrF@O9bA$4J-4RR3*!nP/9R"=;qEU!c?4T5Dlk%:F^@d-,psk3*OP$,l81P:Ga9A0?]98M@>2M#s40PO?!R^1i/8<'IXjZ
%RW6[_GR]OQQ!^7WP$KA2O\ISip@IOgPjhJ]k7k.'`3BG]L3T,k<0E8/Z*jrB^?R\o,S.Mbqse/fi,/a8(R;Nt'4=KF!A>0-n]JXP
%a:[KP?l9-5(,3&4!TumqC/6a`<5bLH;VNi_ec5>5#I\51Ipae>%\JqEJZU,0jMi@s%GauPJ@\3O7P.G^NkI=lCMI=iX8m&-?X(W.
%1'3W)FE8*#=Rhg&b,(,5_5N;ij;4)D.ZBTC\O9"\OqK#d7rFW#;ome:9pXPhA<)"(l=;93)PnMhT%l4"MfLHtZTkL69Jlo,AN-&"
%>b/l7@!#?OCuDb<'=l4Kl)7QhLM!DUGsDFI-oIQ))akjhP)>L;DIo_BFtj]k%+&u,GF\SL:4-*o:N+R?.m2t7e^7d2Vh4B\<BH^n
%g%":[pZcdI]>VIB\1d1"B*2E]Wa`SI#/DYh+;Ppdq(r,Da).4B<m7]ee$ikRecOVUB],15Y\UMEkppS3pA)&s@+kYt=rZ#`C$h-E
%kS?0L]Cp/:$gX%SfS`r(["@Y<?[;L`rT's6oVkk%=@tuC"m4MQTpco"WMopCQ4o76p"=A7NT'ddhres,]c>oN^F-ZXEdV,4ktiM2
%+49agUi]eLHs.Wre7)#.`SUWKUcGX#QYT3>$V"Z3/;qjmPtoe=Ml#a[77!cDG[>@C74O_uJ4?6Y:3%bnR`:pFNc)su4Y%',UEu=s
%Of`tnlT9[SY+N0Bm%&Dc[uS5"Uj@'6^2)'<EmMq[K]EV80/Of^OQ_nL(4Xtt@,HmXpnW"q,^!!1q,jG44@uUrM<@;O?94s*87p&"
%UjIr*BjKQLlmF?MZ@K4-W+W7C?&3OgV[t^?0;7o_ML-OSCo.E?I,LURZKlkO?RDc@[GKMp(]2_[S/Qg4rQ@<=@"k.V)lE[E6Pl?l
%I&,PX/OGgq@Cf^VO)-hnMMou@?RqHhSC7Gg=;_3u-A^l883#7Ve(^O;0CAF=@`"O)8Vg`1Q]P%dr?3eJP@bS^R0\eg<*Pnsl87dH
%k%SLV:N\UI_L<tX2\E[fG9p3'.'8hdr?:VP_]ndhKs;q3Ool#a1aQ*[.9&s!QLu*ZpDGE^IE5OMeTY-=m^T*;9(Ci_SH:pf2ceE[
%^]Tq.lXSn>hq@VEl:DHhXCRi_N0V<STTC#+Q/er@"c9E2hW-qT9$-@_jAuU<IWDBJ)+Gm]Ub$PLi.3SegkAukbP;<SrP;H%,3PjT
%:kP\\?@b'<&qAo`DBD([cRMPEP1G8+4/kH-*$C;qd4C8*_3>]61eCOQQnQO"]_j5bo+ZoWNnWEJ#8YEDKptEjT-M-&3!@;U0dZ,e
%arHPp-IkDiHo'pK_JS4q8u4&.5K.R`/&TB?&o?@*J%Xt2X-I6Ua0j0th`;5O>o*TCAkqT*.:J*-SPhD)W_"";C=h0CV67-j]pC8u
%PSuB`EB;1[e^\XuG65iQEEl4tlN&M"98>X6"+n*,W"VMY<N&bbPh\6ni0R.tfjK7IQEisndt+]!^:R'XB[!<$)29.FX5h"?g'D<P
%V]BW-.`U"578jY/SogrMC\":-.s&G&O,,moLoE?QESbdVHpI@?V0X^$5e0gOUN(s[I5+7r+V9?dq'-J;W/r\9$q+c'+9GT1A`Es:
%Q-?2#esd*_1"@FWK*6rW<$qM<!S9M*-c&hsOqqY!:2j]/Xh8JHJ!L%6"5l_o;F\YX,blXd<?L.?0.-3fViXTS#uTZ5ja4:SImR,,
%gUA('jnQfE*4X;FnGUN*CZ.PO,?G0oFhGh+V]_a9L/CSs)P9]_s4,cZd.fK,:(4'?o4t*&h3d*LM<M<-,-)UH0>LV2,5J=;a(T\\
%j;hs^Mqo<j\Ymt&$*tRT?oN84)o$$L"n*i;oof5Nq.KOQ]^]M):*%SXf5mO"?%(T$q])o^,Bk>k/*fQP5k^cFO`Df&5WskX8-:eC
%%QF_ZIF`%5ZR(?dc`h`J+6R3PP_&?Ch^aZGj9@ABJYJ0[AT#0IXI!M+mq7EE+VU7Y$'Oq_cG%Q62Aq+D!ZPrm[[nFC:^"7"FWsj&
%dRr(2QJ5AN;\-O/;%Z=<dk3R*g>09:OKr&c,jB8I+W"k]o<M%aEM;lAFT7G+W0<*pQL'BUW<1.qI;.&0C;RY68e@^@WY'0_4D9^6
%Z.E;!9HaF0[K>`C0T6$18YWI+&E<e+e,`NCmTD!#RYu%SGSa+Q!C*2aQ^mEC@#ZQC^t^FKs#*aL5`g\,H.C0F>WErC)IQtWBQT\a
%""]D@Cu"0SJ?5JbBq34<^?"_Tois9s6GP<!j2<o--PBh5c5NZ)mp,jmqhG#;8q5U=%F._m\;KP\SF*p048'rck289]\.6S\+qSmu
%eE4/:6.ZFr9."cc+VD'3W4'VKPoE+I,pZtP98m+f'!.ToOE*dt3a5HjkEN?..Wghp2KQL#;AF%dBQ;3Dm$=bjO]2@]S.jQd2A9bI
%JqXnb/``@n+:2coBEdU"BN80BOLb[p7M38)SE"j/%UVrCV^+02d<@Z7THlECijolZ9]M9(<8;I@p9SMFY/Hhdds"'bcG[F)E?*!T
%N=E%23YqWFJ^)?aX7rVFi-%MQc8l9K,%W>:C0F076>?SM6(p?:UR)>Z!]Ge_2/u$%'r8@%"Q!^E)8%D,[4#pUn1)`2%Du0IrT5iQ
%(F)U`F?b;d"*L.'o83<6jMj94ZY)dl[($H/-L:21q:LgS4uiU._<JL'J0T*##\1Y9Ua"5\fiB8+PZkmK8\.iHK#(tuFRg).pkbU>
%7$$.fD0/-ck2I_MF`h1i2WPOrd.>b3Rc-G2/!fgB`KF(K2JU3+0]K#G)ms.M<c$9CNEWSa.lM.]7]k=A'cXPiUK23\MN(fE;(FP>
%`C?u^n"pgmbC7,A]FJQl4.7mfY+g)SHYX3%V[uHrf`[;3oiO=-],,Y*U:mF<2e(rg^DU(j<1NLe/_G.dR>6L'AHs1D@W$H?D,(Gl
%PZ#l*:4S%qU=EY/RHO,]'2>h$hPlJK_H7s[jBsH+%VD<EGA'*X;b9u)*PIA+!_\\mJKhIa\2KF;E@@2K=34g<e'UlhWViurW)R23
%do:@N>8I#D8$1alXD_Qc,]b3IaJh7aPd%6?`,K6^"WL@F>>>3PgaUTci)HTm($<Gfj\C[\:3W`?Q%lZ4-A\3+hM+eBgXN$8.O>d3
%K2ZAWJgT#5Bb5SZ5q3LhDSjXUh0L:AW([kMO.+D_X29W]?9*\q,l4)(q1fXI6\G?0G/Fmr,\?EkA9UqW;h0-hEq[2rqgM0K2GI<*
%BjQnTUOmQ5&tqDG3Don6<^(^@iCBI.Jo2e1^/Xk2V8@FlS%I4qD12$&j>C\C`8hhnfU-F:d-,(CVTG0']'OG$9b/L/<Q1e+CEn4L
%LU6]"l_L;+ne7QdJ.c6jjg4\-qHEZ25M`B4m+%FZVGu4!PrGL&G?:LRNJ<`/Rs>=Z1ms^8$u3>W7RL*VV.8"9&JdWp5Rq!Peu*&D
%P:k'+=LV8S"uAinFdOcjBL7)u%NWpg'Q.rK^!mb9qNQg'_5*nMV4=0Fih<^nA;`-u.D"&=A#0JY3/ReJrPThI'I4mg![aAWpCg8K
%[%ohRbHk@H<2M>,E50WQIT#^ieY@,18Pb]8-P`gY;Xp0M7TA"j%,=QG^?:$Fa;3R*!9hM&m:W5t\&E-'8Wq%YNM/)G9H@&j<i[N6
%%%O"1d-DTZCiroGSC\4M.\&b8;2nMK5mgX.SFhrcQFl]NPm;P=GiXDU8_#'&bp0l2ps[[?ZupI+O3q'KZ=VJ@W+I/+M+_KU#uDXm
%b5Q9F[`%\*D@3h?Ugj&8,WX'uL1QP/'*L&1*b!%j8J34IfC=9Q^*KE5-5]546s4rV.$FS*-o6h)\k3U&2ru98lVjJ;&!nlFJ><8-
%D@2fK59a,:^dnWf=qm/[g.QteA7J6Q<<i5a_OhCR$Bi4M]Xnm(V2C//J?)8PC9.\I\A:f[29a)JUAacGe'U<gFO)q_Lnf=:kajN?
%B8l6rUO1#ESh[fhN:%RYHcG9@0tM"VmMVdH`os!K\n?ui)8DMb7b4UTb=8VdW"hD1Lne!ee;B5hYu*#0C;iZEfVfN([:5n3Ct+?%
%>-UpT2JU3#Xk9Qe)ms.iQW>[+YL/R>HQc#mEGU)(%]dA.kV0B3b-.5bCon1OYJXE.Yc[WQPT:hlE2jj<jTeOpQ/PQl@h"a@0,k`s
%hkf23[c=&VIUH(tplFs<.9?ZtmME%+O(cZ/pK*4Qm-0;4nk$-ra'<DHX6pb[%f8=l4$21fIH;pV2Ik?:EAF)QMSJS>qI+#S5a`'3
%bIjChV#kK\F@'\2-1mu#/aoOdW0n"GZ<fqon=tQ/q;o;GVKMSlU`E->G>sT1.=u+:PopFS7D"iT/-c8)C.+mppm=JEQr48rffBic
%eZ#LGg(%2deFI"HE&GH0OVBN-qVYI4_&Q'J45)gIjlN5[X//Rf*sb\6,nF(LQUkdl@5N9K#,""?%0NP#Wj%$S!Qc@\cq7#lb!PEa
%3Z9i1os8N#[Dlpgf.*td$4KDb5a]E(\^rU7V-Zg-7N<J.W%q$,[GeAiSOb5fT!Ia.'\2^ZWh[s?*^fDbXLjtIm[8LppW;51]-H_r
%q!7Vu`nY_4lS(,lplE'$e)cp4o?4Q;V:ti&D5;WU6>_1&2SV4U[kO:MP0FbPe&j+q7ps9^lMFQ@kNq_tp9gd2/84cUg+V6VJ9GKr
%qbY\_F'>Q"aRJ1D@#j_jLZ1&DBFGQ4EM-!qUZE_[;Lb[UUO'Yl>!>1fK8[^*d,Kp7dCtW:"BJUIQXk);=SL2?bX(hV(X4J92mHP[
%;q"UY"Q_][*URdE&U:[s@nr.E=r].R5Aaoh%J=475-AitlPPf#YrYdmaQUkU&S`WO9Cue![&B.n<*FMu:(oALfSYg"An3;9N,pGQ
%<_JD@PZ.XF;#mQi?a)9SjU5Q.S?]M0PY=!82\MBH?X[BP['5j\k2O6]5^LGHk2=6h\N.FWS<at_P'JB"o1[je03h)Jk?0b;X/fk-
%>tp2DMU*:m7Ye:MB?5.'ipscRf06:g_2EZ-;/dc<'X`(n,qScu=RMNZ4A`g+7^P.=MHNPnm8-K!a<&aF<%hU#$<q[H5J#!0<`^cr
%8id_@(O*.7MsOb>e_?&alS"FQ<LW\t';nYJ+>-kL:Wqk)Jr%rEWZ33?VGR`o.><`GdT=6N`Gp%#o_)8$3nQfW>QK#AZ:SI5bW!\4
%J1JKi2&g+W''@-3YT4OYj1oZ/Ws&,5,GbAbAZfY+M+3a*V(#4SdM;s_a[&i+lubm"]2Zt9-9)un->=!:,jUL2k[S2hZ9Jjj=a%t0
%G9enpH;D8_ks-4[f#Y$ED'^BsEmbG!)D+@KZ>u1pTcCr7&Q=I8&d`];B''ZHga.J?;TXmLJYoTsR\)KK\M8,^p`8_!Y'BcZO\fdA
%B8dI\+/Wk+PYHsSliee!.4YCD=e>dSep?E%<%i?GFAo)LTn\C_N[9Ma`GLHB%G*K1$`R<:lP)]]]HYFV%08C]JU.r/KR?`o%'6O$
%iUZ:,;3Kgl<amBDTo8HOJMZO:Ybi:i\aL[!$Qd$OJ1kkD_J2UkN9H0<Y+X_d;+j#WZKVup6QeP.@S`XNFaoJ'F5CES*t489Ed,_5
%J(UK7aJKNr?$7e-/t&MG%DiI^"M`7`@G_5sJ)/DmV2f\Bp"oPY*B<,9?p_hhjZQLuG-<rK+_`"QdcRs)%b[SO<_+S"1T;7o5IGeo
%-\[*J@VSJiVP7_1fA*Bunn$K+_fR79b?]DdS\#W.?'`+mdOg-80SWLY-j-WO(J7OAe4(lC[HtE@7NnR<"?!##J=orC-/0B:W),!T
%@d6(BVE-<#$J2&,1Ou*$M3d`[iJEl]JQ>Dan!TuU#__.]:<R%U_ptFW]]bMAX`J@u;.:BIWu6'/F%q"(bd>%nPMD&HkIA]slSR+2
%)fdLPQr;splVOe^OQ/Z<quhdW"T)t"=,*\K`BMW!::53o9</IQMpIRI?pDV]8Ru:9JQbtWg/`g6[@gg/Ml>P!!jNH@dFPVZY@O-p
%<3crN&GE+ra/7_*:#Ai/T"cTeR?OdB9DE6WZBR2ZF9Q&kXZp(u9s<YtaZl/.;1%T*K?6n1s#&"iDpi[absHfIOgesur)Y&Y="W[S
%)T't*q*$%Q5r`,4(9miE+9D*e'PBmYC=HcaRJ]NH.W^fcBi;&,::6E2-2+?-=,,V<MAPn5;9s*])==&$jJLKGi'c0m\R!p+WH[GL
%3B8:f)QqPsXh,ABBueY>XmNN/Fk=X!PHGAOD*?#8goAZ:ctHEllTf)gkh(*RlUE7^FR2DnIR0Q$OEq(e?VjOm'""h),Ud,.&$gA5
%V%dr&JRkZ,7:mr9P.d>:mj.*4&Xo'B`#p-bQ3sH+AN_KZ-n0F(^iT9C&>UElGk*EoP*h1R&(6UEh6`-H8[N-QJ(elgH&6-F!Q^0i
%`!$iI^'R)o(Z[T<)ke(k3hnfri\6BL8R`_kh4*`ZN[rYSK;?Re'$[`s56-\uW'm<K[@B$XQ&lK:]Ifq^F-4%FU-EC_+enrHhe^lI
%[`e>]\UO;D`Ab8F[jLcoW%nA2XB-?kYBSIsA*D#OHLa.V3/4#`TdO@6aV]=ZL7X?t-Y)A^(j[rlSrB?jA*D#OHLf)d4W1"``b:J^
%N#"FJ<.\1VQ."if+'1A:HXX^.^Ae#eg?!(Y!-%mpq0hg8q!1/Yrp#utc%:D:0!BKBc$I,&omsTdR!eVNLXd="r-Z65D3o2/GDj't
%:]:MY<nm#SgZSG3Ecn]oXJn]Hq9,,jSUD0dm=)`Sd$pX2J,8ct0<\g*ofKq3:\3,Mo_J/F(Y"XG&,>?qGrFisKO4p7iKr"F+Uj)V
%iofFJmeqZi8AFb&bkoBMh>?#YeS*!%/SF\;58Vq`H?6j8JU,h96_NMAm4DW<Ip4RMG68WEofgnUX"St$<k%P\5D0P#Dg=-H<S6PC
%L<]MKE8p;7qrW@8=C3^&h@"et_;-etT4C78_s:F^J,&_`2udSH"Cg34-c>d^62L)VhTYF(m<8$7n)6*YOKhR\;_;n#H+dGMXq)\&
%B7Y9Vn,)3]d(t"@:UN0p?4S]*]=>I[%A=<dE?MPI2!=A\S0,cGMsh`S)U=k6n,,`eA\!9b82dr8m<lCr%QG0Woi+c]H?6j7?3!?B
%qgNfRJ>O>j^IQc(kC.34lU/2=?Uo5/qpK:EghuPG]4'=Q'?u+gYD4LpQg*MsjGQm"4,YDDU>3:2Aea@P;j9pE;=<gp%YDjgS'CNl
%\Hm6Y:A"[B\H-H#;3i/4\P\Y3A[t[()eHSC0$AYa4TfD9fHSUHSkGZ=4?$q.(F.7WUf/pq>-)&FTAOI6*_f^gKS-nmc#iL)EfT`/
%`+HU::Nb*(<qhAgqa^4F-Y-m]8q1#fk*0,dhraZWGK]fn5($Dobr60C4?#Vum`c&PmZ9:7Tt!$/,e9DRDsnIR,@GVM=+1tj]9Kr,
%/KN5-hXVEP/Ek?&]if3\J,T3A@Ca@PR_Q"[kQ[m@WM"'X9>oZbp?hd(nbRPqCdDD%P;03BeoeU7^0f-oc";C5S$.V*K`+D9[_?/E
%!b]:'DUs_9/^Q\%WWhBU^:c`fk7OCpWke-b`@,*-WZiIjMDNjaHl`_YN.2=>`]m8EA%^MHf=S5@W?V?'dnSl1i6\Z\Dn&?8kLl7+
%Sf^*5]V;_kD`gq0nN<onkCs$"gZ@l%LW+.e!UZU8_#Vm@a*>BlYg]T&0S!d8GY#1$XW]^n2&nY-D[kZN_pT*<oj`*T26<+U=7bN>
%naI/_j)_R,5D%DbiJ?M?$Ghd#=C6r?pZoflh#_fk,.X9'8FUnra![FskiMD8qO0_<(h^$5)mG&Q=.G!'ki?eu25bWgq83>P1n2ai
%hC]TD*+4eSmX@hgbLLur=n\RH'a(gO(FG;n!Y;0WTZjG;.2"<nd/=N/U)hPscCPr(Hnp.lZb:e%=`*")@"Q[#%!e.Plk9R#SF';o
%Ok6!ef8.(g-gC7@pqsf`T[LRlCc*VSm*)`bO9<%X$\#ouYg5!WIXpnQ"U;sWT^?5sr:pN9^DXnP>n#O,K!Wdpn-h:=9-HD6StP#'
%4-"[LLP@1H2D3t5J>J4Vr9UT^UYI?E(9ej4X\Q0XmfjU5S+lOIHEhe0==p\2Bu'Ea3S!u+!QNm7YAaH''2tCbo'UZY^Ku:iXES$t
%D_I:7I$hfj"&+Id+mB+CD3MY?6grW^(JMRR@B6fraY;]SFk#N7g*,\Ylq-RN&e'4=*7nRPnCP^B`-LCP+T\kbRJ:9B<p+L@rK%D.
%p:#LdM*-"VPd^bNFP\WOX'm&?X4&*QC:RZp#C%kRUj`47Ar$Phe+H[ug+J1mI<\c`S"&MWq9tF*frh5VeGp<O/knS.)d:1tlgt"G
%C6@i,HH<X&?f-@C5N6#.Xj$$WWb&#^Qu(BE3[AbZpH"`/0jkl;YQWYk6Nm-FePZV@9Q.D0%mpmfFZ\,7k,Y-;^CE4=@"3@km6F-t
%H_0T0%$8st6fdmaM'\)UHMLt\Nr#)<21oP'R-jM))0hl\O.Ic_---KTO@rGXN1MH\Un8Zjc0GF:;9"37Qg'EKrLA74#%?o*-U"4X
%b.3V+!NbC:pnD"X-XW*&c8@h9?^)^a2>X&+^*p`$[2FBic:lf7^]EPBqP%4Z-XW*(kl'j>mHBIK2Yc[MqP%4Z-XW*((Zt(&r<[jK
%0#:/$M*<eLcLMPIH-3J+m,WGE4M8[t\@hGJQZE_1F;CdE_6_9k=FL"_PVV%lnAH6>9;Gq@1=sinbIfr*7K+5]jd[$i4tb%&Lt<]#
%f<Q!lNHjglnCdk%*V%j>f=q/k[Y7dPG4!7]$f$OMX.;+K)nE?gX$$NbNQg+4eLgj&NP*u$eHTG>f-9k)$1-F0[Nu$ai+)/s(M*Rd
%YL2C6;*J<]!F%6aU[]7J0_:&K_XhO<b@:-Z2?3?)-]S[!9c/",8I,#ro&bE\aS"!GH_L4Q]D/TjR.'(`P.06&@euCG(GdCV3I11]
%LMke4\YX4UB99YM*0To(9\o8d0'*tJ4:*Co(Jujm;tqD-i;XV_48f!XhO$F#fSS_dB(:&T5$TSk420IgHoE'f[@FrYPs?CSn`AP.
%UYe?o4H2ksT[MU3j1G?(MD#H$S3N_es,$7:1UA0/Da)romXX/AHU"/Er5Be0J_0&>DuZT7H]JK"5:%Le'^RFb$d?*'h>7_@h2jG'
%-u:S&XnUj!^Ctf;f]cpugjh7%17!3$8BuPkLX+%H6[7Il1^%+_Gfo(g%X!.o)%%HUoe1tl%VGP:E('70%2"Z6H=Nc.)!O!5It'ES
%mh;V_)stE'!mAp4r]:na)"#)5rHGXKNqV?tip*AmIu.4$"ZQk'(eD,+S*t%^*GrLqehu0/cWH_qg3h3R#7O/uFa(TK$U"7NTt/O`
%m\^,mS)rD6pI!)\>RVNq-<B$?#BTSgQGGJCTf:$XIB$<G\lc'm5<lffeahPn*H_)S)KXI>=C(ZP1Hm^Jd:T]ha^@773UAm`O=m(C
%3>aVaUPA+l7l::9N,#Y><KiCWDFZS;n&1WAnSYs@XM4aQGk&anIC"=1q;S=6B!p9>Z!H.4Z.[FS#E?KnrbU)V4Xo)8#&%c7s'1#_
%h]41"k[AN!Gq)q>"tXDlK"hM)".d.R<msa/`0Pn,>fK?`;l2)nHmS.)AV0l%eJSfFhKjCX\-?hdqZtkos,ke#Bu:`HqrJT\eOM4<
%5'!Y,l:f3BO#,;`!Ish?W0KikbG]Y''ec?AAQ6=$MO34K.F1i\,&.lo]SI>XoIm!!AQ6=$MO,\7_U$"A4t;Z<Q2+AmGqBZs7;J!V
%?)!2=WHWU:Wm4rL0ZMM3+XVHBaX2`f3>drSS;"H(fdE7+EXq9(Cgsg-]p^SbRM.<94?g7>,f;cd8)cK@a"\7VjV,Zh'@V4=a6/\@
%BfNpnHc#PK3VX+T*&#^rreN'`AmZI_0:`GDs"N,m?GE,iCjpiudQ<eOR0I2o)Pck!cej,UW;KSWOGaW^+&FBVAjE1jl?"Ms)R>)b
%FMM+u0;i$lk3^p8`=B^t]=8`'8M9/j5J9;L.I[2DFB!`X);qt(l(sp8j+Mu)4./mC>/-Rp)'uX_OO-0%dm#u(TgO'b'=&Uq(,:L,
%3$HT[-Gb4$r4KZ[j:j$@::?O7aC=!ZL,l&tN[Nils'U/3-Vbh5M;2)hl7jnWQl5Q6kK!W>cTmOGA.>:TA(5"IHAk^^1$UKbn"G\d
%N(_N-r,F!hh0b;Sj`?d7hJVN.]D:`]c#SWd00f3hI[K*?2M'3Nrkl4Lm[j[e+hO:@[A`"u5h;Mco=IH'?2X0g`VOn:>gV_bWjSrf
%YBS1Goc\aRV^fK2h_/&`cHY['Wl86S:]ap]XDn-VNcJcZ,0q:sO,8UO05+$9oSJeA"";ZdB;f`[B96ci\YL)]_FhMtDE\IpI+7O_
%.sZkPL4ZH,or*&'+[X94FK68-#(:O"bMrErm@3tfd#lLN$9l)g-\L(:F-d?UoH9do`]bnAkn(V"1O&R3Z@m:Cp'RCTZe(khN6Yai
%dbu`N$'l2!iD@+;5EKJkpCLPPC$('L%P/E09aF40_F9n,n9TL$K>K)5dnuDm03N00P`=,HBl;*Bc&L0,.*[b"gaLEq>%qjSMu;A,
%\S(+I2B]9A"j1lg<],bUUGt2iF/(]RMK>OPpUnJUcbjB<cja3t\VkRoEt[^A/S5^]c:t,3pW_j_h0(u8X?UoSDLe*.VIMT6SAfP"
%.PWWsr/!)aVde:25-Mnl+*5XVE@uJ7gel\c=@.iP6s`ZQ+QG<$kS5dl>b_/"DcZJq+2=349:O]3olBfm?O*PrmrlIKL1mQ_hl5OO
%?mYN)5mIMDF",_>7DQOV>P.9hS'RO\%_Xce5t2rcS`hdXglj;TNY4K5cO73fG.kNh<r9N+mG%I0iq;tl(an6a58C++0$JPp\F#\T
%#fA0)52uR67_q5%\;&i[YP5"sp%/&HEO[OK`^>O-O-*[kESUlFps]F7S'CeI2a:E(cVoaDT,:+_cA``qnGmkhs6&sjr?)K4l$9;H
%-D5_F"?*/L$p>_+f4"o5%CAJ^I8A'N9p]s5^)CSfr0L2>&\>ke$(`'G\MN7-"s@b73;No^^&Q0qei2N5lYL4Kght]$7kN(OE\bc*
%1$)e5QMfFAHm;R3-;;h.'9,-%_\7;IB`"NlU1^C@J"FUNOVQp&S>M>'f4TmGk1f"crJ/@b<9>!N&I)(K*tMpeEE@a_c?TkS*#?1E
%,\J^,rckB&[taCbcX@*jqXK5n`mo,(C;)eY,@;X?Hu;]^_sK]6E?'hqVaefREBK:>S3(^1!_XbX4Q@`Y4^EH2)#T/aNL-S0*fCK!
%/(=*(&BEn&a![Fs77+pKbi/.E9>$6E=c$@m]HfZOVRsB,#4u&!KYR#p6m(PFgjh3jQ\!%%J[E/KbUX4-Q@9j+/@=H:<r=n$qX00+
%g*NJMa5F[)_%II-oC]B#G2?ol\L.,sVBLE7P1!ZaNf;9h0]Qf<,ieLZO<rrAk8`CV4B6&2S7LX4q:;72)PQNp:R5bhgmRE5[ugM'
%%/0u`Pak3:*E"Ka,2$ZH0arjd]GSl^3.uK),k^.7C-7g^Ge;V:bO'@KJ:&P%FGWKGh>GNZD7Bl=A2G03@\O&+IAm"il[<5Ydb_12
%^Um#nnsk6s.\?j-k72*R)o:mj?ktqUA6,>P3J9d?N(<ns4($mY*E#Jf$t9-<W]jOsrlgbTa77SjYQ&ih,flq\pcXXk>i)L2lI0".
%99aB:Mbl#p\Su78QChgpO">nTVs;GZpgLVF0u]7<[1m!EiLA*g'oYK469^aflc$Ktg3r/GMf3K_o.q]-=)E/b0idle!6TduDgl$A
%?O/6Ur<"B-L\pe[?qoOor!A`s00e6p(8b"aq%g`ErscF:R,]^S_7-JHbd.SNPcH?2,Q8uAdQE4jo!hBB&q1/I4A,./0FH9f?A[++
%SGYm2_l-5SJ,G1RrAXN=5N0#B-Xe_)HLd-s'hiLO_OKHAftf&n^]_c-)>Db=kRohq=mEnOp1h<FluibCgoEBDRQM%RO;:c,781H!
%;$<Wm<>gHm+uB2a+5ap+GIoHkB4:7J&c_Asge[s0QS2ZNp[-dLs%_fkjR&#__`?BUkLVr@E1]#f'fHR$rt"o)hu@I/"S0R5g2;dN
%qVr^^.p/8G2>]J]?%+$6_I]E"?iTu]c";YsrEnt=lF_H,'4fP?c1V#?i4,]V*UM1GIe\i8J3]*DH6`MtE9Ka:gP<$eF>ipgpDW1N
%533?Er6l0HakWM;q!A#`hu3&nI!bV,K/='!iu8NON+Otlrgt"A<GN0DL@!?'F8b.Y_$i^g'CGWLB<f62b;C%@He8uFq?"mR?L5D"
%eI5QYg\iRPio;uZ-n"P_+,4XO&sX_pDT7d%4uj`J*\%$[Vr;:iqjn&.j#XC4mrk02B7TtF.>[urDN;p`dSRH/_]e^I\2UT5Fs-Xp
%kOZ?ho%i&mcN([4!0c<BQIjFfNIMEn6SS>ZGDl:^aI44CCo&$IH6t';iUo=sjN=*D-L2Ok7"_N%dNiYbg^@9=YSt)0$`AmM)(][r
%Q[5tu[^%i]*UjeN/`,p0h(ISJX<47[lp#SM/-Op$<f'^#iUbtNJ@(ld4?b<>o,D)?SmX>87o/:I^(Cgr+II4roAflGH?$:(s"O7d
%EOT*,Me^HE<.,X=';L-[?KqH4d]NR$([K%`nnPeH>O3\sTP&4/]ilt)&@DK*bV`&B30aYK?^?oOG5#T)hqh$Tn+%`o]Wln6.#Ei!
%I3Z5iKB$j/fH'0UVNpCX9R^6!CqdI;:#9_GpUA3?/n(O;]*1l95n^PV<GE;1F81'$pO;\hr,0!r0)nM37;%P?OZ;hOq=]8]$WD<.
%Ta*Nr/iIa]mEgN745XM_337.G1V$`hF7<eVgF`oU5.K?bkKqsN!gr@NMok^O?ZqXdc#PamZWo)+^Y0]p@J@V+X82VJrVYJ\nnN7#
%G=:QRG('faH+3]j^R@5'(*9!H,1S;3M).;\g\K)8jF!?PrRbE3h<eh+m5JB(n(`Pm8_i)RYN3Yj?@o.mm00W+S5f6pNI_-uK<i"C
%bt<(rRecfXq;#iL,RX]PY81?ddBd'V[.kT1pCDKfB><g"h*9?^4/BSsBD4.aPIC`$^nk0cf8I`\::03.h6,A1jXk:2MPe,gPeMc%
%f+#kS5^AE,Bbru5$)Rp"ok(q,;b3ptIsA,JP7VC*s7^SfW6&,!T,+I4Au(X*gMJl6)C#&]QsPJJY&DRGeX,\%C8JQAGM"L74M:R,
%ppUV!S"CJN>?#k5B;E-1Ip6bt=l1fKmoO]KApld6Vr8gts6]86\*fa_U5@2Q]O%]=FhWL9I'pMVY7Q!:;29T9_t8\s?>RBHH@=WD
%^IMuV5Iu'!2=W`q1r$j#Y;b4*`D+[k-\(r(Zh*&bh7LDXfKGcVf*#,`Orm6HU'Y)4A$jI68a=N$nh5K*@&uM!F<Q/q2[Jc0!;gs]
%Y^;UdHiIqE^KDb`S$-a`F;uSBr7"dR]@E4>,*]\5P`L<,Y?i<AfO!`Zjat/=/r7+qh!`nH$t1l0N+6MZ0:r%O=adm]fRU)Q#SIl?
%s2FQlJ,.F8S#\Kkh1n#IH%3?<manN,eb*M`+M:(qEVD_""7&o/q,lhIc.-Eal^L*q"6fOr@,_&rqbN-7HFqSLl9S0l*t5J\c#9fB
%&+0/@OnmhIqs`V\E3FdlPQY3`g$?_:h7(SX53KT1(QN7>gmObM<L!2OPks5fhVn]X7I>_k]`mh7\UM/9W8H/\2a>fYplm`/mG5$!
%V4MT:c#2CP]ikH-+5V@R\K0OPlNlSS]!HpfCu`A2+6M<"mlE6Hd+cin5\G<'"1ih8%hB\@=m5h?![o0'\mm\pm<Wu!Zb"u,h5l[o
%ptND2Uh>3KmN)@j].6.2aD\/RmiJh"G5^OrC:f7h#XA$*I5_Fg5tAb"5508s,BI$Y`n]EemlK&aloQlcVju>oh2r5_rc"]]f_(#,
%O!7BSF0g5.fH/fCgTBD(@mC*dDV48A0l37a7D7Ua?!S^S,iMaCW2$71qeWig$Q//@o&eQGF:/MilfuuJEnqt?HTTTFa5L@],^OYJ
%H]cs+'I>!_oV^54!C(C<NmF4$hn&or#<F<i$%mld./:uEp0bpNP`0tFY-*7;#,Ti6H@:!Z9;0fE"D4EN3(Q!rd&lK):5$A'Ud/.:
%BD^i936a[YhG/:hDp6qpIU'>P7CKo_DjJJ0*CktP`Oe-&Z4CBroo=D^NceNZLkt5+hYgi4B__Q(B!GXs*CEu=N3F:DQ1o9'J1TT"
%AW'lR$I%7EjLi%:5/rOXO1Sm`5Ws#QLGA@j#9UJ)N5+i5f11r*opW)97_<]:gOn],d(9CXTDdNpl`8.B0A_451uA?5r1BUprqC><
%rQd](IYnW:MWhst@5=VW:B<X"(dY33Fo4+DLY]%4$PGE=M5P7mGIs-g'+tKXL$B`r]1YBO0TPe=]tsYMXbY6^p,HiJ?27T=ci+jd
%Ugj-#pudFC=4>XhIn-IfGBWesUU6;uHi2b59"C(C-kF_JDSKNJnRcdMI(+:<Jj/tHSh(5+@HQd@eC+TSUE/NA/Af!`85e3:QDN"7
%-GGedW!lS)Z@0.YA[-QhfY1WrG?6q0[i;mhO><Q27,(YOoW'Ko6f#K6k?:THmUl\.FX,0["&rAm2Li+qHC:]VC_C\dmuH4"m!&3a
%o(EO>OCR&up=fYfh;0`&MVAAje2aN9rF)j(Hb'kS1_IZWoA-,WnG_2)c'KPR]3sgeoK0:!4'rpR69hTQhQH(o=0P!(9%0Aqqs5D3
%Y#b9B[;WL;hh'4%Ylh0"e[5:kWd0Zn.RGM+B1l+.=l4IMR0/<TrK-KWb7@s4K_t3KEUNZg429MNJc,Ccnah:fY5gJqo[FrnXS7'C
%J3Q"EAn#GT2#Q6tl^K,\l@$HLbOpnuqYgqhNW=Ia^VBg<Aj'M(NZhE/2_99(n!MXc5=GhODg)S@l0hn)rn-!7*Z?^Y8oRp;>u?hM
%[',j*feFNgQq2hb<PL7rOg$4B[h&0(+S)ISb<JnJ*e_4Q%dj35`/Vb9@IH@kX%8[qiU=,(r.fn`ieT@X=]HS0*[_jRHt27L+:/Uj
%c^c``\%f3BN[c&@Va7%'(-VW!487]UW_?H^Lr^SK42/t.OoGD"F[+'b#%W&?5O/ZJ**?jk:+P(/NoRt@:bUt6l[RhMqu1DODYH(q
%S:cUShQAN#m+o^+o?foir4BRHL*^GMIRqE.?V]P?O-$ccOi<oappr\XkXdo:o)frC]mP-?o@p:(Xa;"Z<kI17G5hHgk#0NKFRRu]
%V4JX;4^1QM<nZj<kP`hTDtEAr5sO5/pRi8Hn\/$_^t.eah8CB_(,t*<9f"re"V6Rc9EO.gp:m*.Do[M1B4J":g!io<A%f>SiGNR"
%2tYI^\#\i.eTK^")c0'AHM6@d!UDYf]l+j7d)&\!Q2\%t]h`Qhhu=hC_)A6?ZQ]f9[hdhq_`-2FBn1(c9Q0Y!frT'oY;_cV41)TP
%gKOW5jL!=Ld"DLr^$p1;o74.CiUuU)r:0`,A@l)_q?J=gpK#k9NV/9bpKol1QA2R=iLoCAm$@+Nl#tpthtW3RM5UG\kcX@B_:kG$
%i;mK?52,_ZIl>#igs81^Z)deL47&Q!au@ogCn:"NB)AiOi,N*'k)UB^#":6T2Yi7;\r$%6`4M!=%Q`5rc$pQ-g(oE0N@,LUDS1>n
%D=6fk/9P,Ult[mW[rB(]V)oFCSe(dnbWhngo[@F<bse,Ye`G?M*^03=6h:2(]5t4Mm(+;(hVf,i!(^pmiFm_-RsRt=`P7WXq["VX
%h]2]u[=bZKmqp)c)u=pUqZ+J6ZptZ9Kg6.["Z5#hofZ/:D!hh<g]oFXI>EOW/Nk>455"WUU>Ap40l#lW]1;0qW]N?2733MarBEr!
%bT'cnc^<@-%R7RBD<O:TF)On:DXNO4YnM9KY5YdQihb?Ho.kRDJDL#Wi=U5Gqm?1DNqlo8;5QM;hd$366[nO-o=_k`pW<BmHA>7$
%S6TpC0_',Ik05q^>;m=c%Y#s5]6jCnaOl\,B.grIHJqnMqJLe'r9O$`pQnq3O566fG2_eUWR\JQRjZ[[)`-`sV=@(-YMKT;0$X??
%k0EbRXbCM5VRTQsb!S.NAXh-jVH5B\-c[mT)Eg;KG2`&Tpu^u'U:k1:o%^LRm8^X09s39]5;tbAQ6&f'?FdX$4Z[n$A^A!N(8'7f
%X6J;9Q`B6#^J03&3>nF_02/Hab\c&JIsXD#24`BgSIR$>9RcbYk)$c`H9&V1DWoPE<m>[Xq#619-g%<r+92"<#Htc3Ed[66m*"ol
%S"jaDdhbbrc(;V_\88A-Gg3t-rB@pmnjt_7C&HH/9?WOf^J2DFT'&1)jNZrRKm`=3pt2u1:\5dqo]FZ(Puepulh$P.Ru94d:%ml`
%-RTu/:TUT1:Z!dBfk[#eB1E_L(?5;!;t%Wib@;3`b0qT!Ip@4S1-TjCdHoB2f(lA-Dk2-&H"#\!8,QO2R9?,.Y?0o?`OFCLeWXo(
%XhMBS3;Mgg[57cb,CaT*bWS)e"Wq]$r:6uaV7e3]If+56@X[4Zg;oO@QS2BTIpQ9[Wf*@iji#c)S,(.G96p9QL$;g2O)<sX1J?8^
%10_Du3d'tp9lb^Gb1ZcJV9)N`]et5UZaj#p;`D`l4INb,6nfBMhgCP]>cjk]?B'n,?@6alG^&-nT6k_ZP^V!1FT)E?j[FKYm]U-!
%Y"jF.QhnE]+"toNq9'FqVD#Y(4$@q,jS;li-K,K=p_7%DYK>WA^DZeg,?JNur7BSbRG5<%lGCaa4frs0gp@go1`NuOFll"FI;S)'
%5Np4SZ-/%IrclE8m!<Ko]/pnbf@X)e\%43)h!RLXp<!JB[1q7/O%iBak&?fhIP%AYl,1BVr:Gc,l/di4^Wa?=HfjC"HM?WPF77W-
%7h^*E-LXY^5@".BroN7<'mn29GW,S*"8Y,35+d+kO$'!B:FGSU:4INZH><+?\p/LGmF9;FeFNFj`pi8_Wd:nZZ2MQ9iKpt,'6iWb
%hk$B&[s2,PduLiE!1(F0c_L5)Y!%727A"ZZeSiJ]c[S#?0n8NDf%uJB27N`5d8%^1YK,?e4gZ5OG7(th1X?k5XV>]nY"`Q8Iu]k#
%#@h\lAuBL*SA-a5\^A(D4^U8UGAqTWajBUhp3q(@j+OTR*3*4af-an^b.2E07Qt1.1OF<@p?4n&2ZLELGOj:OHEqT[daj%_C%goX
%cf_1^V[";V7cm0Q\(@\JK4c,;2@jF9Yu&JXGHIFEO#q?!C?>E<Ap&CXd=[;@H1>G>4P[R=l1'dh+2:"g^[SBD2D*1oV;"rBRYgi%
%M^'QbXu=amF3d#[lRsn3\F04"C=tMk9T^(A_k"KakM*]'F8%k(St1nfMik'lhgej=qpXoD(7&TGVIMKOqKF#[p5J,m*adi0V_>d[
%I"(Y(\&Gbs:[='#-Ka2M4_`6P4jlLOo?;oJ5Dn.CrT_A?KB;i?m'`7Y-e$/lHP`79VO,Wa8Cl[XpC`<=O.Y9B-+^eKp<38PG'rDo
%;onhpe*k0N-PMP9/Ssjfme"GMq%o[g&"i].P]#6%!O(1j@,k9G2Yln0kLJ7jlhT37;?-R1q6u!o@_-,9FQ_>hXdQLs^-(*"4M1TM
%"b$)K[:1.]HFW-iqT[+CS"%SJ^DBY`aaEF'Mi!4-DGBq6Ru')a@lL8Sm?0Dh9chNLT$3gF]q0JY2'9:,b)7FlXCZ8Hlb]LIR^0bh
%HL]\@[C]B'<H\3+M<rg&(ZX39ZYMAj5Dt`Ym<in?^MZ3Hdb(b$=0:lWpg@=?1<DWIR__YSqOP+AY"Z6II^!2BRX;WfDf=O+#O,rp
%BC39G&+%o'BjK^7J+hK9*Q1s1&)qBUVKY77T_mOc[luE>H[!seoSu_P:@L.;;Eb`L3]Hk2D>lA@(LMgLGE5YRl.p9K)tVI^kNQbg
%>T:3Of!i8$G1E@'p-12W#"OmG5Po3.*QYM_",!6iI=C=>p*m0l[KdVPff<9SkP(X5Z"k\p?W.rVhN!qFeZXIB[2l7f,GOM4s&4i1
%b6P6-gPN]ARf,nf^HoWg8,?S:r$U&"kN4F`a*6+So4)iohmL.(p5Tsh^t/u607>GXUE,JJYK"OKa-@$Ci2_87[g-dELYGQ&_X8:'
%]/-Zqot`;amW^7RVmek'WdV3:ANQej_hUbIH5hfO>K1k6DSnXT>cN2'#G2r?E7!SCiM,;05Lmd`XL)m=[r9]D>abGf`Q2c`&([Cn
%:ZLj*dbXU557&F+Da!^T:7LbN`;JZMla,VaQKIQSYZqV%O(MkW[-,Tem$g)_0$PG!574fa/\Sbq[h_7/UtIQQ+31"DGdK66qWdbK
%behCRVkr,PClJ/VhHq@K#&TKb-TphT['oSE_lcb<oZpg,9mH-h\NdQghN%20G%1C>RBt/fqlL+LVf1Jl1-,,$PHU<"*ir/p*ImkL
%lT5rmT>oLRSZ`pidGiRrfr*G3rAV&%]Dm3Ipph2a:jr7eB&UW)`Q<4qkRSXbo>u2,dnAk:DJYeI1n\`'2;;X$f%H\gh1=&2TOhQp
%<uca[:U;"`1>DLbi+]FMqAU7>4SWt!*J4B([X<K%G7H;'34[CdqO<8,I@OPGF0JlII=.OpeiQXJY<Hir@-UO_?Z5^%4?E/_c).DJ
%->DFV&(UBKrmr/QGi!=6>W;YP^-.n0fGi,LS%Lubir%m9;_Po5<6fAec`83V20`*ZlG&d*O&"U1:qb[+3?1.8GWl9ElSkiaTB>8`
%mQS4!bMK\,f'%9Qrp%_$+ha>mq/.9ZTDXpS?LVc=YLu)\m-X)dh<F5I:G(6`]0?MpA&3V"picW-nTR\`E]O'&o=8plEJ>>mj20sT
%`5>C2,Bit,Q[Ic.[CaEQULT9*BBRSofm%oR56(qGk9!Jn^&R]V-0t*efBj2q3GKWu$7R\)n]lq2<:2>nDPLIR\`)*"a5Y7Hm6>].
%5.e23p*mmYh:ck3:6W"o1OkF.:T7r5]f^dRG%Q.1gTrliXOUK](J\:a;-+-H[jLS$)o#IEHa`X'GBN6)WJUM%4FE)4H2E@E+%dX;
%NRM&'EU2GoD!poYVsBgrQbMm6Fh9e\^&>0BD6N2)k3VlpYO<Qe96Zt4iu9U`f.OhS!H9MmDPh:]4T+X1aW$FPCGO'd4PDp+@iesh
%RV4>2mWX/J%pqe--ZiO]\M4$UpoPLAkKdE>-G#f$!U.D[\uD_8Za6j]*IEic/]Yog]ilM-Ee!0BV=u2F=%sVl+1U)2AG%"Bj$nOp
%f%9M3I&6492ofO5lI'Ptms*Rc[W.EV:/`GOZh`!D0"5iCmr.6;SmWMlBlRX.C3=ST&UrrY0V`+>bLE[bmK3n8GjbN?VTde3>isY9
%DL^XlQh("*+-6QeT&'9%EVinQW4BQ]qiA_\`O4hp]*-G$\)[CoCjPBd#q;eO`j)S>!Xsaj4h21Y/\O0Xj?n(MhSmT4UCVBlkehPs
%,5)qgo8cE7bF-tc:;*n"Y8eM]1AU3OVo%;7X3Y<q3dJjPUU^[OZnh7@iq(]kQ4;sM$QehDL!Qm:J?#3rq>>3051cX]=?3]EoBPbU
%f4M9mL?r&,2mY3$rAbJ82YTo[5,i*8q"r5Jj($[^SY!R+[eaGg5(5OREW>sMQ&,b;,I?#]Vlme9-9pXN?O%#W.@;V%Vf0;:3tD_[
%!A?014n`hspZqY(-QgXJ5&pGPoWeqZjJVk8L$;fSc^goSZRl>o?EB[nBIfi<IX1bM_tQOT)GI7sfUNg>T9]`T*Tl\ZlcE5gO&(6%
%f"HCTVKq9*qDL9j6fDRG+78OlgR2R)bno!Pr#)'J-*DUX_t*ApeMHsgR&tR@@WqV$NUt%ODT?m>`*RN\ji33C^N\5go@4ojQga@R
%jRUa"F!$7N?2A'mo'4GQNT[j/ad>jdN3b1@YC/K^#1n:eK[$*rFCN^@bFSA_Dm#q7f;JV8H@0S]!cd,<f4-JXV#Kr#ApXBuJD'.I
%b!p6$T7HBqrf\Ms0PVR"G"PhJ^YBZqr\PG#%:l*P=!s#&00aij0su?*A@2"MmS9ij]t#k6+`VD(p?lfLHuA@'?d'nc?CJDfIX1MU
%TNU]2)`p.\[GPdd6B=oA0,OYU?>eV)S9_j@mI[P)D*E>11N0_;X(N(bn*cjgT^>u>SJB-Dr,]LIeu`^H#F<N_/#aMs8t(eS1\28[
%o76PqlfmO.Ro%Or)W'?j-YB8'?EVLINNYISEUl_NF/$5?EFS\h'B_T=5G#XcG'7]ugH]sV/tY*eId+u&b'<m\lYAhT6XDQIS3,'m
%ZF+fCrI2L]p>=/nN*ZI*B5Q^EFo;O:c'RU[T67J?Radk\"N5fIf#WWqj,]Pi[g!n&2;QuT*dt9F+2@HgLQ;P']D^''3^1/>jfY(j
%hgUtAi/3n,1OZcC$I4%1pjVJXRs)<._Vg7*\@XVHj43;SoS%Lq1LoTCSpFoto%BAO[C]N#hF2Mc\>cfqcY5XMcHhs+$`D4'S%gqr
%4TEsWKA#hL^fJ+Yq=;f';mXM^O+0=_lJ(t%`n/T]laAN2\oJ;+Tr54qbLao(D:G.q?nkW2De47>Sp^BC2(R\,pX@`tSm!n]UIddi
%(EPfum%/QLp?^&C-THYU$#/pOH>2^\%MDtjgLnIM9iR]KH`iB900_1$l2$0l]D5uOVt"OEa2b?34u'Pr>O0@Z/RBD6aDCIbo5sY&
%R$id/g\2jHnfb3q<UB"Ofj]E/Oubcg[m%,0fBq,ed;q[plc_cinBS,[_m=\')\^D-s5GmoqR>e*HH')DWj7m_G=G3RXn/HOm;'o5
%=T(EBJ$f;<gckUIgNe6r+tKh@hRB?S-C\._p,,U+ht[,G^%fGK%)&IeFT'nf-b:C(P@N[rXlm.t#0><@bK3Q1pdq&6g``-ERAeDL
%6$,6!e6a9og3r90<cR<B\SUicVpB:)Sb!(eg41Z&2tJX@4#:R-q]h=(0_+Dp&ptTFi9\Q4*c0&KS%`k9b@56PIGF,!]gL]H25b(&
%Ni/4edQ.#DG,B_-A%)X4ji2p5*iCYEYFRjoVu%!=gI)rh(#1P>4Yt4ea(rD!BO$!A1NN66LlLAorqES-HH5a>m?@8/g!O63[b#V>
%Ikj4]C%g>TJ\M"q&-$qX@P<5!qI?CJ6No8dFn9mb/LVc'nPrZ9hEU`C-^[+NY+E-[k-f/Sea2Tt(R#0LoP(sa\hZ'=?f1bc7s][Y
%m&g9IWVk/tk2iF4Vq::9+.O9tp!k^21bU;OY:V<m'V/GAot/O#!ucdNp\Fcs2p;Q_a=],a/UcG,Lc<UT?Q?SNo.b=J!9O!=2\4.M
%IlKMO^1*$!iR[qdO-akGad=<(;o0PZ6Ve%F;TA,u4M3@cF0fn9IE--57V<LFNk_0aqkM2?.]-L0bk0B\dU`-_\<n=%HMP(RY"d`>
%HN.IE30%Cea2dV7YGQ6q*]r6SSTirq4)O]Yl'_(b0-?TN>2::BM@3c,9^"_@BPMefo>H8Wn];9'r:]CMk..D1Vf1HBD=sNgr&dZa
%[QsofSlbNe\(1T74ZkHAAU5Z"j'rn6r`i0!^RUq$A((0+ZX^<L^*l'GeVU8+4Ln/?oJ=P$dj%r6X5hY;7^/JsS>mV_DN)D2s*XB;
%IiB!5[(*V"J#R[>rnc_6IQi8[l1:h=2E0M?\+)[go#IeT>I/6SDS8OC`u,qiqWes["".St_D;hsCIXUCp7L"(5<:m2rbc;RPB/f,
%q5RPl<ZHqMf^[b;B%OcNZ8$`Mb!b%`XmNn"8p`<Js/;CD*kpdspkLm,ppDJ2?qu[QRjY)>5%g>ug"7C=#Cod6fAr@)q<@LO(Dk(D
%4M*a:;.$hikFGquf5T>bG1'`WIQKi5qTYCe27YD\p\#'k?!!V+,`3Uj\prLW`R9[fDkCin^_->#b_K-'1X3r)bc@Z1+.;K[59"YA
%S+Pq4M[qFVk%=YkbD4E8qf[6pAg*_'PBY<C>HQIphB1^-I5d+5he[j*ZY+)ST6riOIo`aHL*pP^?jWpK]!*qE5J;>+IC]=Mg(c\8
%T=*/"=MFB\h,DU+_7k2=l/S&nQ`JG-$nSmU5s5.9%U/b1B9`.ghN'>`Vf.$QHEt^&aGTkESsVZfHa:ZHgj=KY@pfRc+R#eg&Z[md
%`gM&B1N?VmmWeDG(_\hDM0-47b4CAW$W#2^[^[!C\MWpOc%cZ?ldq0QRsfAOAV!SGkObldbLq%DgP<OmFnt1U)\:AnViT]ff.>1X
%m:ZmQji4D2!&<iTF7t>Q#BB`bl,:bn74lL@ouP@JOiDS%a9C<ko:%ND=)Z`d*hE:XZ?\:uiafCd"=IpLgC7QeUTZ$,h_0@E0E9q[
%mGPUI+b%n9[.N"`]jZ<k'jGi]kr=AX+%X-Cmt"Xc%"_OYQe]d'jLs254d;u*5?TY6Fm`O>>G_)^mD;@I0I"5SDOj(B'48K`UKW+g
%F1QRpVqYMghPLh,?JBmOc+35E^ICp6euj;p+*;;Xo674qm(^1BG]1R7]S9)PF&#N%o=o5DlMeHohu>Pm:tgVU[BnH,d.,<6n[&67
%*56c<^OBBmpp>-ToAF-2hY[0L(=h`qT,C<E`dJA$?%gTPf"HNGRaJ!H0Q^T)Wg_=sm$E0#f#5>"T!$rLmtLf@YHl5=@o8Ru>@,:r
%XK;#EkA3)bYHo1W)uU@kDu3\n+1jIT/U$H'^Ui"!oA.=XI%oFVq/1Pa9tnZtSpdu+AGa@&8kVcWKQsY(Nu;81lTb'K)(kE@m%6Bj
%Mr*M%7KD>:WQJ)Qqld0crr1Q>>iVij=&8hWUA.Snmgo940^:`<^O9Dd^UUq#G&$#K9=HftLZUJmD'8fo+j7&4<8'r4YID-JHb$,9
%eF#URIPclJf&7&gm/Ws=flOj):O[0t(9I_o[0n'oI9f=be`X+T+Fr,"k6CS5?>n`0c[E:qhu@hJM_1RK`T`$D`/qiLQ")B^76+Q6
%9o6P#;E:32@%3q4X3hJp*S^T9/ZV"-W>l@jO#7ZIF]gY:$?fDeYfK21lo>ebj(QO$(AlQo8ce\?p;!g:+cN:qWR-gp+jk4f.$V^:
%Cgi%Gh@\1LY[>s\k+d&MU,CJrH-ND4E]!@,R#TfTN+e*DALL4;>Ws&nM/JROL;s4Kr`49/2)XT9Xa@0#)/cigL=0%1Ls`@UE1MDM
%'cT7eNTM\1JCm6[:c5gANL!;TehA"`#RkL+p>K]%CR^uodWUC'fiM0&[.hSU@7p?/JZXg,/2h_m`]lpMKq*'PEAWC%hV*X=0hM%O
%WY50[fQ`_GEeX'oU$781N5jKq2&5m-ghVrW2K$%6)6Jd,Z]f4BZ3hBplZ-f\D]5`-Ng04T6s641nSO,bKltR.'V3BFV2m;::pDIM
%g97XLgg=h),i^`83m)2a1tGc/eYPaX(/JD'Xfb.RC#A$U/Om(Di.\^)V6LoTOC_/9$oMUMY+XKQ`^pOr/!Y!@;76P,44kQ3Q+YDo
%@Te]A[T`L6L^ocfQ=?Uh@;U.i[:1ABn]M9o!PG[&@6"d:>u\?MB4KcLXlX4p7:4"go5Q682;(==35g/%hL7=M?CpKU1E5GU_MDgT
%.r-X`P\n8fRo>f8(gL8/B0QObF`,B,^MMIM%?#V`FB4RuB`GscQYk1Yj(hAt\.1lOm&s2TU-d.oGc8cr*i/G!S=E\8,PJsn%\h1>
%;)\<>O72D-o8im=K:5fFb2VkNW2:G*DJ]_*g['&Km8cQ='j2to?3c\(V+I!,-+O<h8?L;c9-,NY9GeKJ`Bn8`)@EJKH_:ZR>aLpp
%TGE2KMocB!8>%G#$0\D2U@'mI=iVqACa(S(*OU"t9r=CXKq:Pp'boE""S,)$=B\3n.bSR*`WVZ7BKlPL4HjP9FA!:CM4L\@Uo3q;
%B!eGfWbi<jdbY>U:^+M>/to$YCGI1Q1OMT-.^+$Ug;I#l;)d'c`i"KIaE!5F@q%Hk`GR@c!A+=uVU;NRM7snACJ:cd<RF0tRAP4!
%;a[Kc:M_./.`!mHcV>CV.NbeZA;s%eMQPqPFuD3RR:/qYrM=pOW/F,HAO5mn1t0+Baj^D[D%aCdc]2"b!GH:=TrlJ[H;^!8\fC=;
%YI2q$9%R6@,%l(WM0g2#Pj<,P8V(0P29Dmm>,G9`?@,F=:!fQQB4g15dq>Zc9m$mYa'-]/84d;2Z_S=IC:FaQTf(=1AelV[dJBk;
%Xe;I=L-9$2XHTNJI#Mpj$5t5Accjsr?"Ygu7qt?;>f(;9'tX[0*uYSD<**n&-uB7FCP0ib>aa<aa.g]E2;MX8MLq9ts'QjHQ*(L"
%.&L><eQ>\\GMXLC2cKAabQOEpb`&.]+19hPiBsk/bpG5fd.SI?6Ok'WHAcKTCji_kp=hf>n'tF(qe+D*,5.`)9Ffd2N)d2k3V`3o
%rnu]4YEf"h%dCOW13Op\Cc@in>=5IY;_o!4)JrWG1r<^?+H3DDA/f].!Sa]/2-lYV(Mp]mn\W5(3G",>-o1]M[#;$)oKkABO&)eX
%PV9t'CD(CFQ#&>"CjWpPr>BZ^=PK.H#t3qp#ZA%j:"69lk>G=cDp<-#imV_WQ@<UX9=Uop4Mc-I-9I-T]uk\;1TYA.9<@JZfb5O#
%b*!Ch<(_ePR]s+eK7W$mVkR9CRQ)5O^fsO\72lYk:K*hJM()9-SF*^Y"8Rp'gFssFM2t4"_Qnq.BZf%^:^1tZ6O2X2fRQ;MgOXqm
%fr6Vt&o!aC>0TiqU8af*17Q!=H4tdn3G]`"1l+Cq'tQ=_D#k7i^,G(Lldh:4d6X,d5Z72n1#ne_f[45mhjNku;P.`.)X=uZ9_S'3
%Ju01D7eEkE9#:%nY5E'TNleslcZgrC4fjLg%-c3ca?>JRe-J=)B6gXW2C4Z)m-U"Pp&L*5'82ci$Hs&F-ZHfejHik1\\MPHD.[\8
%:t_6)3p0S[:'k#Q[@KErH"57]30lG52mducbs4j&o/1\\K?)ZUaH"A"Rp\-i_,ioi"e3>=3\N=<TB01'VQoM_BJO",S#/,Tq]2^7
%YB^'>Is:n@8"uF=!F&d9/HT,uVJ.LZEAFqqf_oa'r;jNh2M6F5/Us^PrQ0O.?rP:a6N/)!]DoS8hc:r_Hf'crCudkWDc0r*,8:,E
%YX<6R8ea+f-510_4l3WtBO1`c$!?2Hp1eJl08K?EY`k7'2F+TH!"oIrWdpq'o=]u<i3'LiA(8(Cn795MjM+i`p0,or'laLa=B>s#
%8r&?-FAp\4.tI]^4P+#jg;Yql'ge`r;[1tln4$1N#?[Ip%U-5.^adWE[@6c#mk@1l&YHqRAnb:/*cK2ue9_jh4Lc4&<)1fqqIbE#
%^+DZP`*?Z3gW_n68WA4;D'iq89o3@[m]BKAcV6*2$bVf2S/P*]8cX*%;lkZR6<2SsCbQuVG!PBXBN/#W)Ite6/8XXla"F2^?Yep_
%/$PZ9[5AG=\2A%7DmbVZ[cl]G=^<n".e>F\Xeo[!/?"gPV4br$6@3-sr.n>'7GF'ImVAl7I:@qn1'Nn@@\_%/!ba<S=bpgueKm(g
%Whm-/BMm<Wn9R'XRR"")"DFj?6.FjM@-4fF9l?.@/lJ55Y`qlIe%iF>=t!JiRD;6DjfD(gW(]5[/?h!EL:\39:ES.uQ3jW`2!"m&
%P&%o2HK<c#[L9MEhI4`$Yc0rt*O0&;%G?,a.fF)Tp>,0(r_]_t?l0opl,-EA*(!!SId"o-YIf;]m2m_r3,'[4[pi^Cf3(0<`nXP4
%YE8_grpG9>p]m`iN5rl>RF`19+*fXl[O,j?Gr'D9[JaLRBp37QAqV'S-K^KGdWB($JVc)=bkgYIRF.ZR_*IA/Q[q:6@5;G_p,II<
%JTh;<Q^aRo)%[#"%)cfuKUXCL0H-]2ceN@+Ad!:[d2hdi^^?,'-jk&+]bun7kci/Mm;]ZmnCdlK22<k>b:[d29_]FN5&t<"E@!Y!
%qiL4S#SOM5BS"oeqn3h$m!H<"31=MQA^_]am*j]iG*),#Lg`+PY*V3pq&<f1mj/`H'l#V^;"`nqcq>Ke9/RGHSjeij!KV$B=>WA3
%Y[Su#;eYUFi.X(%2;\el!2U?G^l'E*'GgTaC^_X*HLb]fjR$YmD9>QON$>4".1..HqD0$A1p[;MT)9JQP?;B"5^rH?<,/Gu>\C\"
%T>;&30UG"V:TK&aR4P0rK*-&`S2I]IJ+tfB^!LMl.]acf1\>D4<+9:gH4/F0[T4k"-oj*k[H84<Q6)$[<_#j3k<4)I.W<H[s&s_*
%eA!7rJf]n6X#2FCO-FuMhdMCl1Y;kRGMkEBD??5OP2j5r_*F&NhYq$b/UmuV>p=a.58fLqEg;*)N8NO5rHmWed6s@fM+cRjJm8P@
%+(6EB#k<dQ/T?+(ecabRK+1Em+*4'1qn"FJ+<T#ffrk[g;a>fV-<N^@BNcP9RS7`:g.B6Q'AA&^6&4uo?D4h@`eR5\Pi5VUNRaBr
%[O*+`OLp,7Z/^uRli:T>*$9bgR68E<kl_J)LL17e)83@4H'?)$8s"i4&+>P=>8*6WM[eY?CrKdI+puB2Q^M7&JL_&Jk8R)K=BF$a
%!r4_B[7sUf^]MSQH)%5F!4[Q,>\'S'M1oFb(mYTf@4.`MJKk6eEJR1ge!4WJ!r4Q`'>Uk&D50[m+4I]%,"=mA+%)J!An[X)J:&Ki
%a`_o0$#^T@hfpZ4,S&n1b6>Q'\aYm4["Gr!>$^Hgn\MWaW3:#gHtu<ZYCtuSc!cojr@Q2sGblaAPKXT`,D7k7r!N:k6V8e!-pIkE
%I+,)M6M[>GH,E6lOaLr\CE^url_8!\W6l+2M:OclJW]Z;;Kk#6e>[Ebb+%tAokp`R-sQ(/dh@fb)S[t88+"uULFC^M_l_\%=bq64
%dug,#b2nb@N0*_hCE`Tr(r&7dB.<1143R!:Upln1(.YcN3V`4*rb&tA?Ru!o8[R0P&7pVa4M83-o!-7dlr,HU#P)_/<@*<&:G=s@
%XU57=$suO@*g/$[Adc2iJ.otY=0^a3MX]"_O1)mBL`t68$SX^+]f>!*7M1ZAF0P>RI?+O%+k"asT_Q1MEI;PT/-6ZK>BBMAE$L_5
%05RtDAVV&-T&niTNaK'!P_^TF+8E@i(;F"F4U:Q*jX^GF(HtS:+$7'Vm"CS?hZXuA!3\s@P8'lG*66*DRG;XGm2eLMp^MmB!s?oa
%83fAMS/T=U_4+(?+5VOt+QQ*`D?o6,CU!?Kr"-rIW%oNcntPIWa9O8g9ZT+8PjNfln3WV3TJ]"Pg#ms"(c7XOXa1'>$\)DpEqano
%aG5u_I\,Jt-BM$"CPng9@ol2boi2ZIdc%l)nf.TAW_#_On_U-@R#iQg8YZo?P].aP6OIag_t]`DoZ/qs@/QH0!Ql)(7i8uAnl=dp
%jtTN?k:h@[l-=&majQraXNA&F\UkQTO(kqAC4TlV@!jR.**j5"/n+[`;NpJc%2<7KK(n9nep5+,JPB7rAfV<5I"s6NLEYF>Ila0\
%K2`UA1[K])I3J?a2tS2#pcpM`S6E/dp*]d5R2f6%-,T\T+8rC.rPB/WMp1n:o:#+&%`Ig;n=;lQ$H._A=4N]]#(cR%D.\IO*Z!4U
%psrX."Q'lIc^"o?XU29C_mcL@6(B"T8dsT\Es:k8_lqb,>.1b&Hu<sIaW<c?%%k!U^`EbP,_jVT;qdXA'S_[$72=W)_0_$tUG7!1
%,U%OPY%FVl2Xp>O_@MaX[YA=6o2\-O&@`H/)*::\"Q;l-CMTup6Ve8B8M/V_&5u+o#N8<%7`O"?KMQ`*Vp_.]ph2'%m22`.!'cg-
%UkTG2?V!O"E2a2[Vso73SI(<(J<,d_l:i2"!q8k7Y/Ep8_A?'&BJ:XCQN4bL[2K"DfAZJj*T``YZD]E);c1!4.MA&>$4h04hpY&n
%l_L*`^UK?C$BqY^pcV\]E4;h,pNR!p[iFqN/V%c'R)<(.JHC?tS-i2a28%NAHu#`AMSeg2c5>p6?VC;<)lnSQ[NC+i!D$W^d1+pj
%pM=;l$Z9hOH`ffd%lQWTn8Z=]RPf5EVEGmeE97)'LmGL&O_jA<)8JA'8Fd9.qR%d4p><;a(k1.qL)BZ?oFq<!CpX-Sl$r1us4>DC
%!JuuM$1VafjM+N=?l)h&BQoXR/W+Hu8_H3onY>0[=ThUMZpXAc2+S?AN8I/,?rM2%5379cb$;CW`b/@.8n<PKM;l[RIh%OD:j`Rq
%=Jq#k&W0A@`IQ,5]`X.!jP#;JbXnQ(Of&EMBm^Za[D!4!WSj5al\+7j8D);m@7NZS?0'L$EL[+#-&?M.1.a#.+79PNKFBq3+F`0<
%Y1_L(C@;Upfd=>T81o5jnIpU(oSSJUJbX$fMJr&iZO"@>.Z(q"euZ2%)n@GOiU^@_,bH,epeigH,"trL_l&Q]8g`1`LuIN>Xe+TR
%hWWhEJM`1&i-68sc]=a:=r;]=`J[npIUW"d[3JIb'.s]cn%_F?;d.'-.8OA.PWG:V(r!E/o",:JYB!?6(2J$&EL1d$",\TkJbZ4+
%`ik8m$gC?m<DZ6TFst'^RGNo1";6U<1SHBX`f1;Dk><FkX^^jrf:htEUKP4-W+H$d@P*?^j?943DXoIg@E@:e9GK5m_VS_Y!kNA>
%nt.Ul.JJPW7pb'O(6jmJfspJadRVT:D7&:=#l8t!i4i=($W*'E.QZm%=FR7rbjo-L^VfWQ`u(6s/>",?(9`7+@JR9r&JP8*5V/N.
%fanp`Q7\Cu!ECO+:0;u-ngF_k+tTAW'6Ym2#T]4,]9TZ*pU42<YUFa'L#qL)H%S?o@JS]L"^i-rD[Y^^RG2NpP7YV%.?*gC)(dCH
%plA!o=ndU?9D1?ke58O-"KaG4\!e9MP[?H]6,ScX!m2<YKNnM90qit)SXhf9%,&>4nqg[3N>s.PQWS^i#SJS:2$hA98\bWW+,/h*
%D.$EW1?,tbEnq]sM0Wgm"t[M3fT?n8RYBj9V>ADW$h"7b:T^-5W<?Z*P]$3.#n)PkISKkp1W<?"kn]TB,?BQ?FWpQC0BKF("$Y:u
%I#`1S-OInmPf]\@!?K8u8AaDMJ:)*$l_F-i`u%'jbuJ2%B505ar)ihfLoH<Nnf<]HKbS&P#g4%0kW2[F5!WtVE,_B`Q=!9@L-fWO
%:k%Z?O[DG\5NOra0kk.=c8u+!IbV<eC#d@?"leV*0!sDaH*>kjHM_&f(7Lln4)hFXT?+L,?q/#:ZgA:qh>^[C00g+mG;:Cr-KZ4M
%*OW9*+EsHQq:8@TFV'p9[j'7[.KRfroBE8d-Dj@MJb^b;a33BUJberHilpf`OMLc\mTY95_X`9CVjM8G#g4mN;L=XhY^AuR[[JAl
%':)FL)/dE"'UDN/)7_*)SAE)5.5bsNF-@9\:\&1g>em%%=?[WikCsP2cUNTefcaEf^0JZ)JoJX>P$cTGfPF2X,5K@:H$k7+I.dYc
%@C.[4P#!5+/Q3mOM"^tQDef"a_lqW7q.sMt<eobbQ.[uk&rfFGV[$U#A[8d4o%E15Z)C(]CVCTcG8;IPLud$O!9ag5]L28C`$#eW
%:HpGToA%;nMr_408</dZqIost!I>EBTA2$U`2HN;P[>i'TW'medH*=M0f(=_:qgPR</<!$2Y3[FC^p4T"Qf4q0N'+_-'Vcr,NuBH
%==>Sidt)mZBQui=>d_\E;1e@i;.@'P1&?6\U]1WlI*g;po'%AiLk.uMq2h.k"JG`H>eBr9W&@/?c5Z7E'ZC'P%q!\T+76g0o]b"&
%#`l9"h2_bj=3"obheBlU+59$$\,Udi!0K]>Y#X-!--^r!G)2$[etBeu62H^<(d@hl0RX(`6nIt(6:R>+`+Mab/1=>%_3mUe%Kc;@
%Ve0/A-*RrZT6[5FK@kO&qMHl3$Y^mneBdfp(<CVp?h'`s/ek1T$8j[fWWhWS:&o4TJg?g>IE$4q*)>kB`:S?/O$':ioEQ``A/Op?
%D,?9IrQKW/!.JDRhI3ae&KEDsT7N4](C!3[=%Puf2$^-49HV,BE"t2INtYYm;ojZF$.``s.h6(_+bK@ha4NP[*N[T4+fSp:\t,c`
%^QrbTU&'<\B`rhleW8ROC'!^Rojah!C)+S]MTs+oH0TOVriUSgf(W3!\?rJ(S"rAT=J&;-4H;1)I>.p'9R^lqqJ?n`-3`^VQ!reo
%d9d11`u-`]W+Rn"#j^g-;Q^tTqT2fZUD"pc^lgiMj:7h3_>4QT:1g!RCtHN"el6iu++j0nJXca/Y^XD8A<bhQp[5^>M!E[5\p%Q=
%D?uS7asqcL>uXT/pb-Q,*SV\'?Nf\9#:;Cfp87sY@q+@4,jYHR\,UeT!0K\s59]h<3NZ*Y5kRLh<ifkK:;ZkOF97GSmBE0iIARsG
%OiU7,_YQR?8nFS4C4M7i8VBKTJ0_3lhgcQ#>UT[*%uh3rLrg4[mkTni@CoLK^?7K;[@ilsf(V!K.&c5%H=)n)"e)ajZUdY5r)g0e
%1N5lVAA&)Fcd5Wh&cm1hX<73o;A-MEE*/a7-+qNTp"KkBRk.Z+Dk"n:g>`h-PZe.n$Eu_#M+L:'+CTo_:1>J`'gV2,hP):4VuYD0
%qD:`FFIB?so8#q/'XpkAKVLq,KR6p*^Fr2'(rh(Y8?U?;'"JjWnL[5)f^o=4C\`LD#e(Gta2($*7".*@XIg52BD.<Z:U!$Ho3+a1
%_><Ge;\JV,4(Qn^QBm]4KD#,;,XPIs@"!GlVRUJ<Y/C*aE=ujV?GcOYG]FF*>l`Df"ql"%75lSn^BeS^'*cB7;#SUb!`C4oqS#l8
%AN9HOVAATXPUL4ag\UE%,)sL%]m$F6qCOErLP$!*-7>->C0K8fUEHSFIq1^ZqB]c0H=4\j,e`Gb47N0*T`+h;ikJR+'3d#Y&Khj?
%Ode]1bG=M&Z7lS;<1cPb5Z-J-lqmYp(jQJGa!NbPhh[FCPLPc&'I=8J'OcD`N$rt)>BdT+h^Nhk)6P)Lj%BZ!#hRB@OXJfS7;KGg
%''iJ\4O=PUos7O!!%'sN4=u4GpI31K'S3JP^K0!n:jn.51%IT$&CmsQClkAqO$rYL[#pFt5p!M6^3C9@5mc'hI0:F5>XT7UO1Z9f
%49,eGlGMTp,EGD3U&(u8SWUr)U=PcW8tN%1<$0OUPWVC`'<4iW##OlX1@EL80cPq3-h]T#^Fr3N:pA9YUG#4\=+ij3Bt&t_#<"54
%IJ0(n4M8/STr9V:*ms6Zf-g4m.=#kUJUK]kBh<t^*7sYgPWXu7aK-.':Fph/ou0B$8tHZr,+#V(Miu*s"^lb!&RjC<4=j[k?BdQ3
%]Fi`X@O*7\^UDUbU?&$E"g">_\sFE[Y+O=*2gH=FJGlKECVg"X^qMFS[52@b*N"''C?2f]Y0_%1'(]$@lVO(0>N:'@eq\eum@T(!
%QbEK9`4>8*m))nAEoYd5iu[:1s0Wb1pgR!9Z::(EnF.(D-S6U#H#3!YgTO"371MXnq[<W?09<E$K^FttOLA&;S$m?EQ?[ZT"lnN8
%Z\ZO^:(&LiT,_Vjk(.S5=3+$A`&raB"Or6pa.7M*96DPD2-B)EpT%2aQGDE$E5*Z<RdF[^@+)q#E1]Oa+Q`]<:2E-qU(&?fN6qOW
%=i`)6$f5&HJImZ`.QF72musA=`'!`Q_Y^.f+u,,g6A"s2Ahog-'chl'F'ljJ"l,0TE=cdFnTt<*6["W[Vlo:D9FQms0i([@K^Js&
%(,8Tf[')&3/q4N*^p?XTTCS5b4D!"-d/C\7H#!)K"5OK`JE+b=_nt2`^3Fq/L7WP!Mabf6KLaZY'bkn<Yb29h-`<0OEGc>r:R.#%
%3?2t>h01GSSg)cKC'fuf#@gGHT.F]Njma)9VETg%#@Br>T.>f+4Ea=g/ZVu\Zom_JG&Y2L=runWe2jKub>Vlm#jrLgRbCRcJc!aR
%=!1(&fKP-bai\,5c&fV_W!ZoLd(LI;%WInM:9`1]G-i:Jii--mJ(P8TqmCM!#4R93:];^tXO=;neNNDgs(fTgYXQt@[aZE*h^#@#
%l<WuO+?ZgGp&!b11"ddVTB(dgjTuV5_Y(I<>@JZ4qJ63f%kN+eqP;%T0ot3">b?<9,3I9qZD>F^P>X&W3C)Tc.6VK(H8Hb$Gqr;H
%!qt:K%j5=B$1+!f*R:/&?OC$[iUEZ)JU^M+4p2?tH1Ig[<1f]*,3;[`*`.9>gP_;Or@OPm5bpN-,#2^&MNk%0\)titPtm!492n-;
%&<inPTdNYYVQVt)49Uk@IOujK,KdFsopr6B.sh?j`Baf*Si/nnGt=Z#Gqb.EouVYS;BA4r&g7UbL9j>TNDP&.93+<>)S`LqL2)#e
%#Fg;bhL9D?7$-u,5SgB'a5s%%-E8.FSrL&NHpQ/@dhaGDU/d'8\#eI\,UKHtMg;m7.Q-[;<51(e*a=7;XP`JKGm*I),*MN\Es_/"
%4$+mPbp6_GP0oGWVoI1*f'eN]7nfn8opO1`Z181OGA_N/)Y2aHX`p_lIorA%[gL`IosP1n*o9&gIXf[hTEFla/M5:tKKiOnSW\I?
%($>T]r*LoND1%iHpJr6UT.B9Gk.5*Gb*j6*:A".H@Hb-$J,gc.Q=Vu@9OKs'XMIG+QBaD!psJf$Qtrc\W0i*<$_Y-5,$2\^Ba,`L
%$?5gqCPsg_PcZpjRug#V<jM$@1"l:/fZ$0SK;in1fbYMG!hQ4;P[a!b<b1cfG$P^qMs2M8%A:g<0oTXqRL6kW3XkP9.]k+1f1*[\
%1pq+l!r<C.Q&Ke&VGEd_"fS;=YsKEJ/S+ddVBgFuVS2.+6aO_lSG"XP1X[<H7l>@tLS82X5A>EWJ.4Dni>EUpN?A_<P1uBK\7cFQ
%&)3KQMm1MO<+*qMdCaFVXUPu*H0N[7\U9Ko'L>]#ABl]q1?_&F([CLUMis%nZG9!_4_MbW0!(R9Jil,fr's[\a;o"O.n)g?EkN38
%:kD4_2Vi)BOh:82;;hRN)%Ri$h3=enkF0e'ONIuP7?]L@+^/TNgSrZg&ZU<<LJA,4elp,,U2]4\-W0e_'pL$*)kpUUhM/FIHCM5[
%&WfA/_BMJg)jIZl`-!L?0+`_)>;Y@4Z_cE1MFKj+M2cIfi3dFCW3,JkiDP"]hnG@A,?[i4*1ScpGuPOE#%.Mkag'A/jR_II0YeJK
%Z&2(%WEGmf#(mWj8-EQj?C9tS+mC;.-QObE@.('%!5n(XNLO?T62]fOT:ZXl(r=&bH8O%hn'CC2\aOpPK8K%=:Y?7PpV0Xni;XnV
%+-/'1S+Bl.bdMGB6CEqg%"OtkG]&Z\:e_8,bb>0[$a5.Rn$5F\;F0]83m<=d4TjT"be\$L1XNI3j9;8K9!\!=<UpbE"PS*=k%pfs
%\ge?cR/P[!p^Z@l@`\U$cNk]Z.`X:1kVLp(OF_p5Oo/82fXj1F;2&4Ij$5eFgWU$7+C`g%C@M"KJcI8oa!IMnB.3;5A]j%f/g,':
%'U*s?h&^.ugHbnm+k&`M+(@E2dO/f:c9r^$7^<#iX&MLl#%?,p0F>t(`3gR?*6"j"l<JG3]GI/R*^FJ-odFmGK4L"89f7g\U6$V[
%KXSR"@ld>!QlKG>-88n"!AEa3fN3@&0@F`jYf?g:.F6Y+o&TDX6rO%]+IJCcMTeHCLnpHErV0W='2701,ip9$%mj";\LaY)"CiM]
%,j!j(+\8`\r8)IY&P]JJC)"OhZ_Epe7@Ut-1/AC%];5#>WO*4=Crbm(1Pdftm"<k!MbN(ZYL3M*\Y>BiQ_Ao14hs`$=?9S0!YK0J
%VGs4FKn=R3O0(hVPo=4VJI86/D_QNt[[Qei%,#i[V[>6Sc=JD?e:SWO]nT*H/$33>5#P@#m&e,^+m`.s/Fb0o#P/*__*47]E%o7K
%C2-l`L^FOeEes)B+EO3Y*n<!bXHKU92er(_d=]3Skl(\6+@(=:pkV$mB7dTB`UKN'iR<nS%XO5N'ju$#ML[Lb#eDt9mCFE8kFCmO
%OR<f/"[e8iMXi#N"j#:<%nsN.fiiO=,%M.uWt+@K2]lmNOC-TFe#L*SNU%;:s-8fZqCZYH;_F=t278N&r%OQ(Kl<D83)*_@X1XL#
%.T`;@JP,nR(/?B$IKVbeGu2'im^4iI;pYsa_%(*&C/KlXW<DN5**=NJAtjR1n<DX@QL$P+%OG'2lm*$<XYS:`668r;>prP&JjgIe
%%+aK74G<;/.mO*%b#(S25NnI9"]9g9*AJJlkUK7&Pm&NtJlA;h%L%*_S-VdPM!Ql(&!@]b>e0XJWXoWIbmq&Pd$pOO,B.)Rbg^;=
%,8F.Pkp+%LX.9M(8`$Dn8N0U:Xe*rQJNh)CdfBe$_@R]3ntRjoCb/QXiFc#EO;MPuTHmlJ'2U^sk>Cg+P,U.c5"!m)c5S_K)oRU)
%D(54b94ZtugDl`:l`a3q$X.f_XpHqM]M.\BTFiFNb9gs&.Z*u>mu.^6$3FB9TF7Aq?-6[bMQ@`%q[QOB<b,RZP][=oS+Vs?4Zm+R
%9$?G[=X]euPD)^c>S4t+quAnXM1*D&4'-P3#/d_F'cE2G72m;XY=GE#WsT3n2jN$Fa(b6o%.HJH-dk(V;j*UCX5G3LM0\,M2aK##
%pDJLT%"Z#!2fm+qW4\A`N!9C*fedN!-Q"HiS.WF;9`s6F<(+l;TMS3:#V^;)C=&\2i3'&D]8DV:Q;0kINT.0m1Ma!hhWj2Fln]8M
%T/c"rPS]#%?IYkbq\BYIML.Sr;,l<XiD3c3[&Q(jP48p0",m'7YejL&CB=TIh/R`k?NWedEEX`oHa)K4JckN83X)8Z6+1)?VokPj
%&8)Qm\A=)'P$/g&#*\B_WHgkU+RpFS6G`J?E<^!V$Ku)dD?FT(lR25ZMY2?PQ!(NX,E8pJ^=cCar:h!=dD_%uBV6D+8ib)e^tG]l
%bk-Jj&^E.lOf^ardJL+6<!Y'AoFst9<oVM,<UR:*n6FPqX$,BuXupDr6o.6\JuCFP.'\C`I&eI17p/mt^6Wo<1d"N&`Fq&\jb&Hq
%VH\lC*THmqQGL5r+^"ht2A'I\ccPp3+@"C'$/d"83#a3`=YPEK2F/-k$BRVRWS1.l`NNFX_H/)dW%4LpZ9<X\(bT3?'$dUY,Ut:<
%A&uYO9QaI3cm.PhJB^>%g1cTS3i%'-d_C&MQ#c;ddAU;8Ou=Ql^rd!r5SD+Kbd!--begH]'G"?>/FB.p_h3.+BV[LQ3)+GkVS`1J
%W5IM&I/a6$:_!laR/thqU,?b8b?\4pCT'rWaB_@4>raCb\I8;._7;ldOkbZ;Rs&$KVha&]0V[OG+_d7tKhOj%RW^-B97LBp/5`dK
%:]oO-9_*g*5cfgtKh)CN9N<R4gV&<^_98!CoV9$[fnuFk7u.Q/Kdm?0>4f[-QZ*`r8/Y_uW.$c8Tl6B'G\uasj;"c-6"(-tN`iYi
%7oY5FZ]In(cAM>`/F:7n8\tPagH#_q';cnp=if;@)<130IcN&]]W&#>87uAm,KtI8EY^E!$G#lO>3`bSeqC7:074$=&_bAS'hDG&
%^-\]=eJTUqjXR>=DeY+id8_%^\dDjbmOH0Q6UR2HOs;L9UHk#E]VVNf($L:P/&Hr0'XI"hBj'$[TVmk`HY@/_U+<6S8j',k$m"Uq
%Kkt3nWB>l\D=#nGh,Dt)2.raTH4$):<0pq?5b>h^*u55;eOWIZpB?L:k\l'X1c`cPWIYSlUCaW2Otr$-'YDjBONaKJ=m%6`/jiEh
%CqR[7L9660miJ7T7H>L73Jbmk[4R>+bVW[h"OLQoHZC6\N>_`4g)Z"#ldf:mLSI%aYk&FuiQlW?W&.tjPu[ab!rMG^c2K%7r"%/2
%Ea>ng%uqN`G(<>`b7HuV[66eD-^PuO!t!Dd5l,J)W%d>fOcf2OniDkZ_('Vh@I4IWX?f:9+fX#8>R@\DWi]A\Uhg&n#6Gl,O!-#c
%ka2U1+aMq\i`1;m/,0KD*1p:BbEa4?@nifZ>j*kPA\_ghYGGKf_iRP7#Qk<YY8i;`*n2%jn)Z9WLWu.1BU*]f7+Su1-M(3tMZ,r.
%7`$;b:/q#sEB6>u2&qmFq[9M`8VG5n=SocLPcak;HE/E+nZWd_oiirg3`SY&Kk)Bf;)ij3_[s#R*ObS"AWt3Q!.uWZ4ZNpZ5pC>-
%+lV':L.N9]Z1@INWFM-jK%KIcb7GT(6@aCEh_.:uTSeG)Y>!4j)GTOZ,!m><4q)R.TPNXDUkJhl<Vl'h/jjDKg8f63@`"iHes/CB
%)04q'k)6:7ZC*"#7g#npeu?gjS;X(NY(p8:XRV"e/h+<$'L_l:-^"R(/jo"5=PG747@,/*M'9aZ1J?dabdF:7\^gKaq%]u\2.Y_f
%W_Nst(C'&b]8PHijLuhfq6M;\V1B49-6H(Vj@ChJnf,.^1%2[%YgA[[8p!$"nUQ$N.WsC^//J-FoDAim_r"pNrs?i0Xp\-hTc0/`
%$`XY:HM(5a^>c(8^L<u12%*$aDF609P$uCb4@(n=/_1b`\ID!Ukd_)h2_7DZ(kWXuL>.eHe3sr/S%B-C`f!)c\d]%Ng/5:k&GQ\B
%<VXX7N_4c<6A1\:iFTGcH%W;8aum'A7(NhE"AD$F/]hkN.T=PbJk%D2M3V!+`(G,Id;?s..qUX]4]cMgdZRU:^g:nGerN/oRraq-
%hiQ?8E/PGo\IFb/pG"j=DF9q]'/Yr$@WWNO7h%rr=;($Y'^6Kn[(4Me&7HKF!;XoDb(s;N/>=>\@<04JL(h2FY]B_#-gR,FOPGF9
%CC,KZ>_ZWQ@h&O1F)W"[q%#V;g0oTVOEKXbINl/NI>7)DZn\TT^h4KTQtgq+Q>NUG%$!e"#_nSiOQFQ"M"=#YZ,^in*a#b-MkX$b
%ken2QMOo/')bk-L&fcYHYk17AH0IRRI>4QVCHQ(XI>1TnoQnu!8D79+3Iuj2L=,I$2HJusA6g32V@M:(LT1b_V8,5aXfKN+8$/C3
%K+%m:$=+LuLN4AD/]*VU!tq3C`]]0(:OYYH7)J:hNuj0F4Eu@:7V3n<e;h?A-9V53l,;IjM#RKj;(dg?/QW&N1R(UtmguTL-]+'j
%3=g,ZWF.P-XO!Gm:bth/1h;h!o>Rf="u_</<;6q2;B.VQ.JMpb,[W<X(o9KA^-gF[5V/[XLNjXs&k[god!(kq2r?B>aELb_B<YW5
%lT6B8]ul/YG=^p['cg=*hk=`YS^=?W*i`%'`?m717dg:3`%Jb\'nt7m@Eg?I*dY3rMH77u=Z_0^im:.KWg6oK+WBnm[WQG#(:a+c
%ahUK$blC4Z&*X-\hE'p.d<euRW4E<BEKffR,b$Y/:&)!]4f#>J_K#;k-;e3Xr_2K<A7`$3Xjk%>?6G2l2<6o2Gp;a5!mHo':_i^[
%!K@NfD<VsP6ePsqnfC7J8S<Qlk<1*&H@&>MpQ3Q'YrU`1PkU8lN7ia?jPE7G"^Wlq:6bVeWfc(`0HK4<,eGs5q62R:51ESTa+!7?
%6a*l5N;1\JaJOVGRdqQ#"AZ*7\tIc!$;CW?(XJhHs,`K_#TjK.I#"^?kr%b<(TDNr\JIh4UC=OliVnKM9R]s*(D3e_GSTUDG9X?4
%:p4p_W\t2>HO`P#*k\sPV&4'?29!:T@/iNMnTPl1It2!MD[+kUZ_Rk\273Y,'DC`SajP;j,+<KKJI6)(Lhpdi?e7:MXjKcEaGC2h
%X@>l+S.K]bJu/l&G+KI3Bael7.+AGh5Oos5Y#,K*b)+2#%ui%MnYMeJKfP0L$Mb74.VaWG-KOI.^I1YPS.W[HGqPd_%or%5lF_qS
%&lU6id,cT.5Hd?.3>#DbN2!b%,$Ipe]#C3NOk&\_;1%S<+c/N/Sq5K^5"$0e#_de:q%-][%*X0g9E=l"H#PF1@[Os`3.hq;$%7Bq
%+U5?]!L0\s;0@Ym:YgfIB/,mOo-*\$9X*QJoHBMu7+@6f%oFX(J-jDSkS9C#d`G_P6Yn7SiFVFDN)E[b"n#WO/H3XgIdaJGd@l:E
%5eW]r;;)1e^0HI6-7%[8m;$^1;(Jr.,*H-Q[VfneMF(T$7+NieSOaFgdY1fHC28nc+Vu=;,/ICq*c`FpBhcDL1u;BBj]15B@$Nm$
%&-J7[Z;Qe$Z$4M7U-@pK7e.\4bGak^,^1*ApR.LfQAJI3q@HC&(`W#q+qg#U`(Fo9A<8X.C>2M/<&s;!FQ1X=ph0dgLjnWRn!b0g
%+/9L!T-=1=kX9\P..*J%!hm]\DuGL#CBIk#XW,Y+r)=dt+uD`ZD:_DIgk\p>/9i<s,/nA(aiQt1,%3`UI:gcM75#iXP6E+XE["Da
%A`?"<'@@3VZ%<$pU_AmQ.j@Gj&CH?5o4a?lV[npZ)>UXTjZgnCaHKM\b!_=%Oc#Nk:j_aUZE>V`<+W4fksNsoY`bICI#([%TEp_l
%Z1@a8<>=8SI#'=`#gu;74QSrk6+L[n;Aq4Pb*,qkMcePYLr-GRQ8,0GObEk]L<+@dOUn_hLpGYgda3cJ,A%.9;D(A&0CkjsEZqH=
%Z@*035qe&(-]fecUkTbInXU2Q-f>o"o(!spS;?WXC2l6G;d5Ropn=46XIP=/-"QSqM--^:D(]QEh?t\T&*"htM`N402(C0s3>#t7
%coQ/QRAMM0QjT<d0GlWP&O]he/.jB[,$,J7EkPGPS;:@,;.[d/-R+gl_SNBr,-lYCMs2g,7sRh5)W_l'e^JgVD,Xu&Po?ss%elJA
%kE3B>kWJ.RQfO__n-brdA1_s\Bgjuoaa/LcTi<+nW8O8deE\*21`$usE(C5Q"*XF;<2*O9VXo:9EW*A,M8."0rrWt04;qd4!4l]I
%U0NP87'YaC>`"\=B#UMP:Zk=qW5Y:0"dQ9a/!7,DKcfMN/0'SC@&GN;<:q_\=$+a0#@"K9+.3i)9B8`$:]-M3OVL?B>rqec]+X3/
%L!;5W@dlF..]*8c;uqs^rn]1Pk5fa5,/&j`cd]6?dP&OP(ASSG40-BoMOBeaOffiAC-dT)I#3D\`EMAY3aX*0LMb%fI#/:,+\aVI
%(t+fh^#GA.<5Ft>C)&dE[5#@OmT7V$H6mbZ$Zpr:fu1Y<M,b_6?1-7(jA"\;=`q9SHh&Mhl4SEe\&O_2!FJqgqlm_iXP-[$KrieP
%i3S7X/93,8_OYtD3[/dBr-jn\#0WRYP#?8h@1)'j%.<+j%1'KXjj+=q=m3MTI2)?PFg'MW,H/=c>K!f>-aIb:9J<pi/$FH$_L\gN
%OgY>%ijg\s$=h%I=r!SiOTc;!`0/tF5/6T-,^ud23.[&&U$]LLgb'b4>'eNO4']OpS4B\7M9_m14-S_cU-m]EYFl4,E\#S/aA`g"
%-MBSYYt[of1Qa(*p+&._%`thtd-_s?<buU6kPHT.rWd/VhdhE?!GYKg$jIH",]Y`mCWW)&+3_9q@b&%&=iddT8Z:4*fN1dN3>Gb"
%@R%7hl/YI41c<Z[X40dPFuj$9"Cc`@J>"WYa3t1V(Fieg&sG9%2(<0If&#^]b2l<-kR%Uf&]dI\,+1YoQ;k2Kc:!Dq66//"8`rcX
%/*g]eR7NU.Pp1\CS;Gg]WN=6o8slPl?Xs^ElH,C6*"W5`AZT\/dC"iGosB!i'3XZ.;8%f4<ns1cBLFZ=Wh-k[$F<-tMH:Fhg`%!%
%UJ\Cko-PrK&VV+a9n]m7?p,!+i%jUJ6%Zc[8?9C[U%3c//X*[9a9dDfV,prR8\u]$=ul?J-;rYCDk5G'kY5T$%B_1.PRE7m)>;8-
%M"2m5E^>b:\0QA6H!X2<6"O9,Mr$k/'oElq02XHcW1:sbC[`VcMEMGU"M/Y#E])9qOXlR122-YhSL]iMdNjcR:rt>$j0EJVf0JXo
%AAC$?Tdqj:24!?I_%sTp=U>`QFASO=M@;]p`J+jBZM+i//\:8Hod%q-e9=uWqi,!W'cAR6\kU5D<:="n74&NMeS^[kd:U&a-2(3)
%\[")>8:'g!rB2'm*T1&'o)Eh@2S[K:rr]X&Hl<:?'[L75#ZUU3K=<Te;1:o*G-[X,.FC0hq]\%#:73)Yb4gh4q;b%VYqpEjL7[1V
%D+g!jYInp%p03DQq%8m%#/Dmb.<r7bNoCa>W:AU'I8QM('7P$KZ8*.T:2tYt*Jo2bS5rr]\b.6A4-!6+ZZVfhX,n=!SM.8*EL]qj
%\hC>GP+9[[(tCka9Xtd=X,7mp?88="-2,;t)TnXVM+dsra!iM!d$:!+9ptKA@$@TE.#q5*b,$VNW>stYX])Fp-2(Q'dfgI!;OK4Y
%SCXqmB4Ah*d)KkA[E_/te`,nW1GSJ/)40)<'DpiM`S"#C6l8n_3":=T/Ikl[S3m2%S&c58Uc9q\G+N[+(WEB*"f=5@.l;GP9&@M1
%Rn=gpng<Y0TK"O9/7.EA&k$_CC(Vk+8ee2%9h'%F#EKRsNLOU#-h8RZ3/&u&h2-PWS72Wb:?8Q+<GIN:&ai%<7kpO&P,CC(A`6$s
%C-<H?oaXbH]'j=%e<6sZpE[jt7.LEl>F'-KId9Yn]SimJZ1BSk^;PIjF*]6+qZlNV;5qJ:-MROo*&bRPq#1@PU:_@C:?5V93tN<m
%?:7\t<8t1Lgk^CKS/,cf'u&<:c`&E$\e/FVPUm%D8iIsI`Q3+X_WGe^+salUSl7lQd#glRPWYilYt7`#=fFHLc?clk8C<rbiLc]0
%##LED'Ic!5,U-g20:L?neXfdS69M1#k<tUhl&4`3/TY!UYD"g23gk554)%IOBVR5C%0,<I/QM.>QF_<9PH(;aBgrb%<ba#V-2*nm
%2!:Q/V_dk56F5.-aGYZ6Q?Z_W?_VdbJ@p'>`-t@#.T`@AehK9O@L>74cY::`2C6*=V^0iWDLI@insm.D0)-%sVCJ=hU*j"dCMAsp
%1oM+rSbHP<OQeUuEB8C/Q'b<l0@VVH7]'+SV<CMcNK4as\FC^)W&(!aSm7*uaaGql'$3+A3k;Q^rN$6*@T."f1NZ3k7"-(NbXJ:q
%RuF'.W(slAUXqO@eL@R.\e8]XiUdOcGNVTbMs=8uL2nT'70&hXYRong'[KUT>D?t._pjNO#LOuJ)X^13rC5i[-HRRdU`^gA:L`Wn
%PUA2'],'L!ACWWeSK:Olidj1<1]fb5C9/H3IoCXkG:MSM%`A0>d"c^RZrP:ON,?g.:e#Uq&tVG8d>_6dif7X8;RmB.=.Qqf5]e5+
%2M$OZ^q_ui@UFedU$g$^(eYH5HZ"JKLqtMSD7W[d1f\(^XD"k?C1=EF':sNDc.nkU@Q]>cc9)*70?2IGKgiZn)&Z5Z*K#a-&E>2Z
%HZUL<qBd(U&YVQN@NNMOac&deX5&]e(ZQt"6rf-YMt+0-O"kr[X;F`eY'"X#^)0WZCC>G34>NMj.%gc',5KU,GUccrlUC/%iMgS!
%7=G>Z(^!CJd>J;.P'j0m!d*?hA:`=GpeF]1Na>+S64FuPgj'M/i]EDuOA81Y\Ll?=q@H4V9"*3)@=f"e]W=*N\&21Ug*#-!bUE8u
%8VfjIdjTF2=4(mL:)E!^(;HNp:@5G`=$f`"Vn&h<Wam[6:8=.nPn-`>X/sH:+(F=F9@epELY*ErWH(eq6S,l-e9U9"LFBU]7`nG#
%6ro6mh._3IG6=Yud@JF:W/]q]VaL17@B)]XZY\kXkqmE&OunV%W<l$B#Re^n8f&[aacfi\,fP5%V'm]8l^a.-o[%hX&(o^5dYOU*
%\c,k\p>;Q(r@Q%`+.s8.`*clXQ?Ek:@Hg$&,B<,t,NqB\gg4?@VZ@N.+Z<d$MX[t^3mA@!._\j"1pdb2^A(I*]5f$WUmW?a%Kg_o
%;XKY9'_Q)p-QMOK:3ilikd>f9*]pAi!>:tJ*DcZ%(!7p=PTpEB'%a7G]Y$1[Z+;U.e'sT]O9Em)GhT\=qbDCiZuN"D4@d+a'G7/<
%O=qp;BrH>u+7^@q*"Hg^UG"qHSg&6/hS\P'DbUmF4a@RO*X2pH):KGagZsdeeBV+c*jW-c#u;-C)+:+F(ZD>`k-WFO^'ILP@G=p=
%,!7a]h)Z)D*T8I9L%CD49u9iS@cN$Q,WnLn7cuo#Mss]][%)oQ!("J#Pd7.W:ur*O5\/%@^;F&u!A!`3nlGK+p,fueGn4U&[="lo
%+3Ndkhl4X?ds]<hP4').4EMZGRVF2CFPapLpeJM-0YN6H!TZ=2*"KZ;d@3a/32ZF(GsN1rN`o9L?,H9o42jsgpTUdF@`).=L2=N?
%e;$e4g%&@q>NF'SHA\08UR#tOBrliI`3%d4dh4`_;`PM<F<#&;P3m@@nYW0oC>6i*^:@\O<k3tfIJ(?QkjPMXR.hpkj-j\9Kuq5_
%P\&uD5o%mUMMRMCN4WMC>:!nB+I!ul]RqRO?uM.E;_Yq02pS,%<4&8T,+L=pN%<Ca"6cYu4iF<5n3T0PApYQECTr!gjeG?o8d=4)
%34&kKM@^>tkYYoi@SH8(S6@>sM.d2SU+<.DS:\_mVf`KhE3ACo;B[j'%T+*=;iFo+n7UG58]_*c8sgbV2098ip:%(ARoiqs`sc5I
%,akIo2i$9%-_HPk%=lM^00utbT[FJ<WW6f@jr6-:'gt1R1qNLU_NW&ubK-VIkVR`]VA^A.@acC.[mt#Z(8WI=,DhN:4%VZhD.]>P
%K+LS0-prtFf@[IlP8c0J'`_/kam5R?l.]**JJpbeP@MX6fT=ZE[!">s_gn?*$XMk><3:oV*(jauj>%%I@'Uj"K*PH=`0bcj\RL1o
%9VtVUQIO:"_9H<V5'[9+#RD?DeWF6IBho1PAI#9=mP1G_XFIKt\?Z`&WhJ,8fL7?U"o_ZW0iLH[nE9LEc74Zmr+E%VM<J'*2IQ,e
%LU-tNF)6/Gd)/`8j(j_t%.p=uc\&4`!*Tk5J1U2[gdWJ;MMO,V3%9V]-LlVW4fW667Fm-2,RO?8VWdn=$CjhtoBEq<Pr;s#?rq4`
%A<m79.Rj1bDZ^.t/lHq9^q=*P:[-G9X`NLmZ6Ka**u,eK`!.)s(/!d;QkWs%@/)r=,%'jS=IU549a;b3$k9TYN8,m5gdf5-W%e-L
%A.MEUPLL>Xs&Jst?cV_';pKTtZZT$>"*4-=+]R=L-dDgVk6:@:P_`*9;3eXbGZC$pRs0qP:MqT3%RFtmP$3sc$2k61KV)9(UmT'*
%bmRM)k4oEa$A'.W[cL9G;?-uTREeu#i3[6<AnS<PpYa(V*'_BXqKc[gqK@6K)ZGZ.'D-qEA>c`\$jW.rH%Ni#b%QWi.,Z?Xg/epS
%'o]&h)?o)O'ePOM%REi%<3&sW9&%lWVcG*)J@m&26q!$U(]#VTT5Xjan.^^2UOhu,1D0q,78C6ni-6@obDXKSnME3Z$S$N;+]^.3
%=>4D.Tt,^Ze5H0XDsNos`>9*L)oN4D"\(Xh9f_OC!9J.[&-SM_ABCfZKD9NbWIU)Vag-io#4Q;Y+V<hI4MdAS'?E[AK*`Kili9cp
%m:'^(cn\*N>HONn%>Ic9*QBRGi;[k5Fn-:gb(_rrB9-e#R:sn2?a6GDNdeL7@&3kDLbOO'H'r4-Oc2L)T*3Cm/NoWa,']?_bN_!9
%/S9k^QkCe.Y#]G>`ed//=On$O#=G[<d=+d"5RX!+fMXGh$Bq)[M7oWk&6hJkK't.WHI+'`8f3P`)_?,"j5%*"ACN>I.cR\p>AA*B
%S9':F1a<&k;l,*(`/-2oS[`4rYqs4a>Gd.8i_M)(eq32!7Fdi'X[P\U#qTc#M'4h!Q#-YV%qfWtK+pIP#c>+F!.n79efM`r@Sdcp
%iC$Zf\@Y8=Y:;V6r#3cILT3td$CSjF9FG5/B.4aH9K#<:,/SJ5nTfGVM@t!iWn]7J4CLc2:+@sm(s7sX_#\El=F@CC4AW75aPp.`
%B/5`Kq%Ig<&!NNCq0mCbs-nqO/L`Vb#+r'!'g4t6/estH8d`ooIIjVm3RQhdPU5h?eY%&]_&!IAXCD=,$pGsMB'Aj9cnYI?>npR*
%WpaP"CIuXNE[qLH%JCR]!tp6NXPd-OXMDKH!frUNJ`,dFa[^d^p_/4m+&ZGB!IK0(oOg)R^W-205MT0k=;p^+,ZWgAStacU*7R[E
%Nf60aTOo7'8+V`uGcLHC2'r*o?*.550`"C^o5Of*?8mj-VIJ_b%Q-*>MQBWHCC@,`lAHqY#f+_Y4gAhF&d-*!3`J+(4i0.b93I%0
%fq<:k+f_&\gs_-._Whe"*.Tibd$*#3LfL7-,U7rl8$;-_:^<kPNoEhQJ7W@ep"d.CX=5#gDFu'^$e<sM'!6fT/(f;_L%7jcl=HgK
%+BpN8U7l%`*])B/2h+pT8dFbP;<>f0V?q^2(&1/W:KC-3EupjoLSeG?>bISgR=8\V5u7fL+_BbX*!/qW[`F31cCl!P7OE"cNdSqA
%,KhGonN_UPgQ+aiR<u:07,!++F/:C_K&VWorNtiGZ7=5pMd#aZUL$u-oW>rW9m1MP/%\mh02Wp=/F_&)q_?osA9OO2-^$Gcf1c\n
%`Lg+2AS4`F`g'b,ICHB7Q@^n'9@PD;['=<C_<h5DOG?'QIj)<b=SHA)d2J[m4?o'(JtM>u;/NEjk1Qpm"FmqhA@_oI9p3J!N[gKI
%F]<&gC(/dF<Dls6E`1*/A!TcA0^'53[b9+jVb"@'-S,r.1u)XAZ/UZ^Q?XMrid_E(*=JbX9KtS&_8/Npe=6bsBBflKG@[r+p1)ZV
%?$Rn3Xh:sdV_MD#b4"0>3iCcg>/rtJZ"M/OU?tHsG`r=YLPqb*5F.&?<K;A8)8`$<;`+Y('b)]s<.-^0A54j5Z)i$1pY;/V5_*%E
%e.cB7=kar/!N$lF&6=LTDFtF)a9)N3%]O'__7Ftmq)PBTG;PP6HRJ%_>H5#6q@RKP&bKkuXV'8%@5/nq:Z`aN+HT48gjL)eT)KLi
%:GAVQ`*KKdC2HKYK1&@#g=#ah[;$D=DB'j"+Z,u7F\O"=08)5d9BqSX*tM838au6AdeJ_oJO:2^;taba,o2WEA_Z7%HX#[_9'p+1
%aEkt::L!/2RVF)_+I]S)i)$5gg$7\%)D[17mAXjfWRe_&H`HQ.Q&M[N=aKl6]%^7R!l5WVCQL0g_TRKRZ,_/Aj,YT!M]AV3g/SCF
%mZF?ZR?Xh6KJr24c70\`^lR`t//lo;eK3a%5;5YN$Fd8##;4cHDd3F#Dj1^@[ul"e'B_\(?=5<ifmSY[V\;%o$$IC(D;bYQ,+9.B
%'tF>@F9>%(KNc!k:G6[!-7A2pMA\U""!]pq(*;@AVMC_mV#0koc?\2.Bg1_bNZLqK&nC`gbH`M-O-M>mQ\M%L2M=;oW)@D$[;Ju'
%UKUVk-Bt8#kZS/*_D#CH.Yo>'JOOOeD^dIRXNOT_,h\M/3'3qCR0.[-W4#Z(jE:8K[M2!Omr'Ype^,>Ti_#$0K*.LG8Z](4ZW(H^
%?5T0]0U7`.o0FZ7C5)kXYalK)['pYH?cFFX9MJ&MBk(sW/mi$d9jkpe0lI&KDc,@6"XelAXY`mVTbnoD8;8kl)fB)R/HmLVg`1`2
%'m><Tj[E'X#U5?!^cd[%*^Z'*`Eq+Tdb,Em1l26Z81d(U7DpMf=k3b-eD*ti`pdn+J/.S&`W%@E8)ZZ>p;qm[`2r%Q=2BWM9es7L
%s*3@0A.fJmU_T,fa2fO3XM@&-=5cu[MM(ZrVueGBFIS!`>JTMMi`h]>#MpKN\RL8]Q4O@F2=^sp/$oHK-2jR:'1+g6iGQ)i"/ppX
%]_8dC_3Q-+aSaqmBMd$VnPgqgnH(N^b'N#!9/mSV:N9=>1hIUC*MjU4`g%A*I"9;!\LSPA?:Y,>OU=IQ+`#6>"3K`nBuL/l7%?!"
%#JY3`J.5'@'MV^u+d@R-b*DC+q9Q%6U\N<R3_1Hh3:]><N.\eQIu\n-ALJ?CZrZnc)EGD8<90?#;p0h+p/6Gm<\s0bqgh[>L'g!G
%@`b%M7C47'Up.Udp@YAm<,K3#r>qoK93(./@l`1!?c5(Y0EMm6X=&*9nXn4N.4#[u?Ag1./?cah=Kp:LA2aV2(W2i;RnB"%6_.V(
%BM18f0g@Nq?7?#uG%2s63%C[`K`s2;a]]QqLN7W1&JQNlfm9b$0BPR5>?!meEc:D]K``0l.:u?0`G1-*9dCj8S$#%;=1YM*q?^=>
%<1od#3f$!2Wk64<]*;q;^2!_jH[l\TMuY`rD&#,\.$,oU?Np@51qh7;Fm)CWOV,q=_A&3O3D1C&[n#P\@c6/4JZ)5GOpI@!Di4IV
%Ft-I#P4>?r:*^QBX\n#`dR1+oa<OcN(>.A&Vm99r3DZVR()4/T6OmGPXMVnK3TY*4a\&EUQ'5s07aWj5W<?JOLgB#&@!Ri[.\'%q
%M3h10.JG$MYr2LR[SiAW4]S5kjl)fb.>b/cWlQ-e'/NAs]AMh'HNs#<6^:iChfg*f$@UM,P5#_8)9ce)Ort*H-tK6n4407DWa&u+
%kQfTN*fQ=lQ=i9)$J0q(p8BlLaQtb]HNYij[anc1PiZY1V7-e($Q297$At:&koZa"\8j;i<h;T9V-L30Xh`AYTZ#*s";%Ac;aF::
%0ED;*dF;!L`6Oc;L[[^q-q:Ku"!m[UWM>W?/<bL^dntO*J=tJc[#oU"SVh\bKe[bYiec#Z/Gm^$&84Ms-rqd.#)Gj9:.OuB!hup>
%+li?A!-QH_D)FShhr[m/lI.KHGnl^G2RFZ<(c:n$7SGgb[1jETkF/gf0U"cm_qJ<"n*j17Wfic9^I2T1(fcoY"aH;oIu+"2-J(R]
%OUE0W.c<3a<2s%oX;RN:<(Sjm8qG8iAp[aeE2fdTBL:Ds.3G@aphHC%RU2njB_,5kYGjFnMeo8E&<&V\0bqpW7$_:&OA+Eo.FXQY
%!dpi,e5Qg5RM)ImY1>Tfd75q.48h7k<9Z!9G1*?=hV!G/A8:<FroCnqk[]1D$=*<!>o-'&#G@kmN+>\$q,M^K.XP'!9Tk(7b*%u*
%Os?s+8/*"CM<g7Fej91[A@1C*8q,%TlGkrDV1?W+Jl=VR(YDd0h0,e/?l)r9m:PVk]-sI!,"p5pV20.E%;DA3%WKVEJ`s=1l@dAi
%6nYcs3Ui9d">7L!LrWpW@FmIW.:o0c"RSV<!k_Rd929\s3U<Mb%A=8^'HXP:Um:hk:o_3jMb%"c'pf_U!A2L.6mRbD+OfrU%cL4N
%W^L.sY0IdhnAXX-eJDhT%L+ToN,SrD')Y^s_WZPLQm&);CE^Je4,FYiKJ'PtU%1EmDiZAB0ubc*8&AB@GE.+dXFq\rZ2Ge&.*EJ4
%W&P-9i68CI@o%(YYa[ej$:UsE0t6HuE9AB`B5]:eJIj0%A7?lffs4Qs"nVVZ@9)<D7EZI^g^\$J##c(+@"ss"2gf(=8<QPBn5(X$
%,3<97TX'MnA?`4'f)LsuH<9F&-lki1d&'knOs2sC6HfL%*bmY-P[:1O`?Bm/P9s]0i.UKN,m>ZTW\uYT%\9[p=t3G:0_L=.k_uUa
%Ptcrs.^1+J:*M`fW<B8@8.a^qqKc-<$-VRH(r5mkc]@c5h>[Wp8;Sm&C+'6_E5=9F$7gs!']co7JebdX(bS+C$)CHZ!'$bhMj6RB
%jHX,)'gg:b7Su3l#>Hb';3:U>$!*=Cp"D*W^(RN3@%f7]Z@!e4$ASqB;39[l)-2!Q![\!52NhenZ]BH:n\h0@mZh3l]3et\D2L$L
%4,$P]5t#Ii4*en,roB@pgW5%+B;l>6:n.T>&e]i_+GRt9`BD1-YK&FEIK[M9P)!&1\8U5EDC`]kE4",G4*rfR$J_.pN;OuklA,/l
%+EPLA7X!d'Hp+gM3;<,rQG3(ihCuLIZF\=./.DJA4k?]FPVkauT`'(&j.,f6m+gmhe]$CWePE^>>]4NY0.6/OS[h6LVes:mcg1!?
%N9AGJ_bf%j]>nF`s7>kIjP.b%G;W(joV__As12dV5$6QhH?n)RdsLU?lRi+FrUBp^UXP'_@OEuA"1&29.hO(YOkh:$PUJ4W;R%"D
%Lq:2F`maBjSQ!X?QVH<'+SuP?(jsFjPP<)Wl+N>o`<o6UCiqe2JX>:'N&o&7Sai#:4nM2Jr-.&]N<=g[^0n1eHSRI#%/22>9JYu9
%W?I"D8O3D#Jd"#J8_D<q_$P6,43TV@V%=G:/fj^F:`b6TnSlFc5!!g31?'[)rif8urmjTMCpOQ+"tO]+?IK63P0!H6Kase9[XDpC
%I>X\r!'%a`(lL_XjIS9202mHS?&"]e7<fTC,[`2I*Q7s3M*gOT61ft+;Z.j$:\#;CLLP@?/=DRHZP`a_9GD9-l*LH1asb52N@(dX
%]o@*U0?G+FW**VrR/mq.%Fa6%OsP5rEcdQ2#o-VDAXOGtFFS)r&'=KXA,W3_J;-lf"g;I:SE-QF*9Be<.5XkgUhjMV`_@b3OdAZe
%`kt`KqsWiJ3MpZ8*)X<!:M_;\fWmOk*4C-!0\@TmC+j6f,\>m=Pf;]<cg,Y)5.hY8-HsTq4)&U`egpO4;cE`r6Fp.;>Q7Yo@@Z)R
%j(ON)qPaOjY2$)u+ECc2i[^L'F>O8k"9CN>n//-#;Ji:HiKtE#W#)*L:<&2AQ`cnQ[LRJCjsIm<_!o6.cc^@q=B5FFOq*,Dbt$MM
%KKm#@&=\=4Xf(k^Z>#t*#O9g['Lk(n"J$55oX0Y2&0FW'OSrRe,_;Kn$s=PWd+I),l0FKhG7h/KM4QbQ?]SqlQ)G2d96SfKZB?p[
%H0'EI%4DsZQ&N&9Qu[goF5b!1iL\1JZ1eHcj-Bc>8-V&M[D&u0)Z[9j(n,!iL?ZecH">kU?"aUt+cge9M?7(`b2(j?(^;ES-Sk1K
%&WX-HPi/)871:dW/C@DGI[W[#TUi-ScB0!;*^@08'i/WaALMV`'(lZ@jX^['i'IP]j7Dh4g*\k6>jLbt`1PjaWAcZ]f@)jPk,#$]
%TSXFG+n[-:]WC.D:0=NI8]d>_<.J@2"GfV.:ko7Gm(]Sk[@r2Cb)[lfEle1V.*MdHT@>8Hb&:gU@],<PY6lQuFN"#GJKlp4Q)6c<
%[NM/o$nf>5iN-Xmhk&CZNr[*lX""63>G/'47`]3nViL6f0V[j`Ugj!q$>PHoPsG9ZpMW]/@5B[+.=iE^pMpn&0P2RTM,SK,-u)06
%Hg&u9<^*`S"cZc_Lh8!q4^"iHd&UP#Jrg%\Y)-"\IY`QF)E*13YFpW*,..neL!4#P]42Z9Te-RZ;j8=^<QY2E\i\V0YXE3/+BHT^
%eL;#iKCC"S4Y#:sg3gYlMCQ]:ai'&<aLNLB.;>2P;*qU1\[,O#.F'DC'uW3L7=1W-&-Knu]KNB<:/b(Kbjkb=Ibp/1MDGm>gLpR5
%c#iIi(0_^2;H4n2HmVZtpY^<&cYCPa'M;Ap_dTQE&do&PJ_r#(Orci_9g0NEap5ch-(Rtc)@35<E!Ve+'kAGaT;"3rVG8+b![Q9@
%U%lVjA,*CNW1Fr)I5e+[JoZ4\%4M9)H&8=Uk1GfhQe#L0[FUt/4U-8Kr6%\3AnQYD%SqLDAG$2qm87^MY]LjZ%eAIJqB<sZ&qke#
%S]B0f'OrQ$h@$7aE!.MuBELB,^on=:8nu(h85?/0osL]_>KS1LqLNN>eG5o.c$*,P(:^:#Q\,/HHA]"M;DJqaf$[<Q(AXIKR;0#h
%")5!1CE5am5)D6$=Nm6C&1QfFaXn?nISGZ?D-&6[QmoD[N$>(#i;eDC1)gR<F6m-!Dj%tkHIRAiH\_+ZW2X3a8Su>W&u6YrPVuO7
%#An3WA"$9uT;a2%ceo-/#dL>.p6-.$KQKb1-jT2-;/Ia]?27cd;QuOqZE\,Z5I`%%8/-Gf`*soUNAuedUHCq_@e!3h*<YAC.`,Jn
%F)<FG8&`^]Oqd@mNRSr'PG[Pd>u=6f6jQJs*c1NBYK4_d<=!^Zr=q;\%lBt53;mhem:i-Gg"Lm_pQFoPk^'!Njkf>E_k1"/>bJlt
%*E17Zmq[G/H"+m#O<8-_>I7U"2sqHs*Qiqo4,gkZcX%XBL5C()r\]Gd5'0WKetPZ:-dk61F?EDT,HOC9H4gug0"mtnb0@7\an5M*
%meFt[[(7#^"c7[b%Gq<V6.kX;'Up756\L:PmiMCK9o@X\NNM=+1k)lqAL\<,#G<)7>7&Eu!l^k#9G9**;#iS!Di&E_H*?p"cD`Ns
%H/"!G&o<S5"`[])3J(4`TX[Vbg7b*F0f=%]IpNMj=S".3bgq4>s0;<94glWfFmcjAreGe[!+h[8B>uMJm3f38#8niBn::Q@L-a0T
%6AL;Q12$uGrr%[lN#B13C+XI5HI_^QE.^uf3]]&u7V#cdA]ukCBngX[R#p#i(Fh,Q#'ji>@FK1e'IZ`s6:Af3175&2]2.P>QbVlW
%/ZH2/qJ?;pTAqFNVCTC)@Lb.2FtKqP'r"@Z8e-g?nQ08X.R#ErE%t=.X,0!3bU!.ip"AG.D'?\O5/!c2*>]O4$Q>q9?QBq9i]dGl
%4K2qh6n4KAdG;).'G]eFY`'2cF&76#h+X.:\Y@t]HJ(G!IM(o;?#+[Wqa(kBYK+A[W47j^F0e5A4j:N,oUaWZ4Y";)NSrF/nfD^r
%+-5B0.+GnL)@j(g<S8(6\;tZr!1_58b2FnR$C,,Z.P@lAX+PWdPeQ9k5AEo80Ql8E7*dSnEP-B):s%g\"NHYTb5i?0(/nIC7f]K0
%#`Tf+2tPEH?+d,mIG:]N*cZ0Sd-c]P/\>pZN#d>HE=+lh0!:q2-*U)%gddXi)KLb^5"NpGNSr.bXf(4=b\^WVAkR^BU5B:gUiK<*
%?FRp0AbMO_#o4P:`E>KRd+^N0/lLVU[Ck&=bp!""]C,2)&,O633S$md+G__FcT:ii(gka9-I[*t0bJg]h"?P_CM*^K!<heMCe^Q%
%Z6-KKp0lBsRi(rK%6oQ>RRoE,;7Od.ZL?:PJj@lL4-#(&h@O0iY[f4m=&_)c>6d2W45RB.Fg=8E%a%(OIT4SheP)Ro>B:pj=#5,f
%e]31BH+XR,52=q+bEUZP77gZb$,<4eEH@&q+D-tZ"$5enXY7s3?+2;E>:hra6;I8OOZ]u12X=p8P%VMbeXX?L2i$p=(Y*hJqX;k-
%O)YFnF::(-f_nh%)"`E*Qk)6_8gJJ7p+t'6`b4*ig$_<\pr.1K;<<n1NUPW'XS%cM9<fnMCp&=PQXC?_]O!_d`IHrn*r@c\^+cK9
%E4=015fnTccu[_e[*]rQ3%>XPYh0"*V!>i%&Y?mc\bb&^`s`[,lc_>#HqsC_'[8/&TTp(*iI)o=pPAJ<cG$$_?,9$`3)/\@:W=lt
%CDDG8$.RarG>A4Zo<]T)(Bl]Hid#mPo41Ue)l*2g<n7^#S:_$p9Lt[4_2*pkH6M\r`a=b-Y+g7&X[Lo(]I:hm\m?F[?Fiq_f%7S'
%8$+?ULYp)]r/A%[OOUG8XH1+SK9+N^8O_L!1VmM'<5%)*2LS!_/knZU?F>AE=4$@%m=aUIB'^TWG(Q4-2U1!D'[Wsg>qi"@b5'g2
%WXD=-:MeJeCcKX=B$459=+&IFPl8uq[5'Zo__?SW9fgYa]0+mh`NSs<dLf,V*:6Zi/V7Xeq"U',l@WQ7^^c\]crXHD3nWi?gY?WT
%IGT=!<5#%L7c24:qP:gfd$2)hRF'5;*T9.%)"Pb/n=D2"bbmK'GrfZ8hl4JMX&c*/N^6[G7-GWI/&<3b2ra%mkaWq$=q@?>0g1@N
%HH,aph'8+,j%^*QN:,q,)Gb>m:Idi>/:Q35FJJN^jWM/89!n!th)`38PKuCkdN7@1*K]9tGe,ni5Ao00W6[FocQ+dY4Uh=2P$f)h
%p/7WX"A@BE^(sS\nI65no8-XE@W4i+p+LaPO'5b%I%>0inGDk3C/jD3CBo)S(4ikN_gJcX&gb*ro82E6?YTW?I73]Q'p><\nQd+*
%Q5EODHjG:Wo"kn-=gk,O(O(sZ2%dLBR@d`:WUiF(!c;4:WD8g6=]0p18d_L2k3H%^&W4m8]c9[#'o2R&[*CW&5mjs#3u;<h4]+mN
%8!m)`,:_c%\iG@L]<Vo"C.?Y.q^$8P<%o+@$AR-NM\7iL#)GEM&Ru[=8&74S5jN;$@(T5%j&`q_7kLcn!;3g(<hEVsMGi]#+;U*1
%R[Sdk/Ia";*9a/oj,8t$(D/h#*N=ATaj^3*UXh[<rMqgl:5/sI@D7\%V$gLEU9-.s"Akn)J=NB^iV/7Mrg?6-Hs6(k,k#Mt3.cN=
%1DCup_Kf&Sajn652d2iU[bc+\@4U^\A[b@0/jg]$5sFW.TT%tqjEgI4IRW'Dc^hX+VE5%Y3[Jb9=f$nK<cL>^(,:m:U!rVk+J6*8
%1$Z1'L\(3ihY*^F;f1R1r'".['0\]]G\_>?pXPc`&g_d=E"c)&cQQVI1G9a%iW%WhH)s*e!4IW"Zp"_=b5s/W>4rBV$4#-S;!sIN
%+1B9n(#]!*AV0XBjR/4#ZV)p.Gct-gGr?nYR?<u[Oq>oF;7"`_>m9>D5IjNiU@D:qV;iMsHK#@P^`TC\]M)GeJYOYsFULr\mJ8$h
%PNKs8c#N[8F]D0fZ>UG\-i).84ec+`KRG/>'#Dgl*\M8'6H;D?,dJa$*E-/^M<"tO27Om5i0V+G7hJ?$DuOShf;D3o(&UeFR8)@K
%YGPK1"C>fuY(f=-23PbG.I:HQ_uf49*?L&Q>dZakmWN:f@NB-FDQ&U')ppgJ*C6#S@RYue2+r9ad%rLr(cTbSB8s3.eC>d=Y6[/j
%WI@4cNah+!QdLlJ/n,1V>4ofJBs;$Mr/eum3J-*T(e"]U8'iR@YZ70U:H&OK7kH<\;_puC/s.&Q<KTTu[72IBoptcpS?Ol\77@p-
%.N!f3OHQtPp`nXTZ1El\pnO/+Qq&TTLoSNt/1j;?oBmLQTh0L:#`+^/7dFXgb;")b%n4R`bZ2/X8=s=d/Z,_aDUch/7f<T7,E[;+
%d%sc=bWm[N+a!$m1p[0'nT3O<JPA72XC1Eg5`?COEVs'6+aGWX[A#F^pj<g.l-O(QDUfDWT=^?qi>"Y4lkmZC]\1eQ>32f/NR^,9
%e'/L&&RgUPOogECW5I"u/"n[)=n/2<g@nE/:cT=W=V;(gbTd[mppn1E]D&<elC`UJl[I?`6DCT2RoT.'OG2`/pebKYkUnkXU?@RB
%hgr]&S60B!8@&WTP*cNRdL<CPGHK2t<O[mr@Bl8cImio=n2U8]UsH.iHULBBqU-946/(:qgBiCgE(3'DbMehul57I*i'c:Yf&t_d
%3\GQ;Kq9Z/eR]kDXN!o^e'2n1C,]pr`"7t7/Cd%$PM1hF!KIhC:']4dPX?-J".+0*gj82VmnQ^Nc[;pW=uTs.N!&=Vn=krQn"ViS
%dU'S&,'L+<RG^\[ls'TOU6D7e)Abc6=u8O?JDn'o%O5aqMbsQ>\g$=^E^*I`E8XuZ@l0%qiQ8Ae/lXd+6tos_/Y$6H9#,T3a>mmb
%3@,6b:m>2l1i8_)JCfe,DA;U_q.@L#Ngi\I8":4aQFOKkXMcRH&sXErpQ`p5fk2<$SQsYiBlF>]M$"DK*4d;f@@Haf_88Tb8$ksT
%K;e\j18.4E9&t=+h1*Q$IairfB$.]6P6LUsWc>t(`P)R+_R:8a.*=+8=f'`+Ke$Ub^1Hh,&C>H>>a&80&u!5<^6,@I@cgjScl1P&
%Sq.4\9)q>#cs5ai3*D6TFo4O/9d5l/NAh$c5lljF!^kO9F-ZTZ=Fr>=1&LjC)'iIXJ"nk`Ve((s+Nt5*`>s/h'8oroa,-1/M2KK!
%20&8J1&Nc,lBWAE]b!W*c*47S]gCFr<Ye_IK2fXqL>/M?_H:D3Y,,Ui7gJL8Pk^-fr@%6P,r#JYbHb;'f`#Pj"Ol*<1<37A1q1ES
%*ZQunHs)W.]&Ma)YBpg/^Md&DY;j2h-t3M.#Y3*--NUJ?X80RTF#U@=6SjaiH,Fk\Z%QDQ))?[UY=,PeZrLK.(q^K_$%h3qRD^4F
%[no#sC5k)c7&"rQp?(,9C;H3D/9K6$]5t!pIC_:b?b<'/_fA*qFRh7J"t^$VZWdL#jElc7P7>^"S2D-C8Nr&rF"7bkd/6bb&gZ&s
%ZCnr$D*Mbq%9G`1he"ls>2W#cN1,QUY(l$`q"_?er<=`4;KC++&5")P"/nlg".dbC9ED7O!s&1?la(`kN%oo_\YK.l.GNUrKTlS?
%Og3oa`\OtY1Cm(?A%^&5aXjmW@^rLqXJIl^M+(d5YU_U+O[.)_kpI\ahKnD1e^_X"2d2h*QX[LEl:i&`7N&aUGu,XSQ`[aE2!i\/
%"hSc3Xld=,0ofV#6!oGi.pq!i#Gnp3$ZhKX@dZsgItDTcnRn$X8(:tK'XH(CF$stPNJT:IJZ>lSI?*=>'(3-*^@Y\qMPd54jS:t^
%kY,KO:60*oSU=mDBtgM-,lj25/RpFD8[bWGkoV1-\Le$S4F(PQCOH]')O:>s$<&\B=VP$8)`1-Z(Xi!seF1h=dfYF12SW[UpVk"0
%A$N43+"e@&-.#VT=iPU>EMj:3.70o=*7&u`b4@BkgpU>e;OeDGGZ`rfU8:1\:=n<RGES]8<s/6*_2!YprLLCAPR@a3[R2BlV/fD:
%O4259#!IWa8r+FF5I.YX`O^\8m!^TSM(a;1O'5?6pnlpQGeSWiJfXf?e7EHU%:q&uqD=%19eT&bdAY>M&%fbAER*#mI$hIE$$nu@
%<9,@LYj5=AJ0LY?XKmS$(>MOBe>joG&f+:P6?Vnn#*i^`BO<;/5Ve.;`j;'``0N5`1D/oHio4AOArAW$fK7S<\tTa]Y2hOSDLAl"
%?!0Ue<]BIofh>L_C+`/P[VJ`GENZpS`h%&Xif@5Ag@$+ns,RUR[f<o,6X.4)A@th`OZ8k-qsn/Q2H$f`D))=9-<E%6gFedMGWj5u
%"Lu5+D*Mc<m3R02jMY[^.lJ1*H^hV0Y<E,Ead7r'=:fATabMb$Jf<(G>o0SM4%eRPZp%^n'Brn=lgu_s2C;gtEoQNPHQ.@4*X!:K
%b][fT&$p#\@Fc0B2JZGd44_bf[)%NA5#*\2-H`\o%_*Yf*lWmn>.(Lepj,0H%a!Yp''2G->a!)^p`s9<UaFN-2b*=Qf2Xm@WHV;6
%1$5L\-l)!,"hrWE<#/(VM[DkSX>O$Z[2CrI)]O3PEd'R$U&/Ao^A)h8Wg[Edd/#i'lF#:h<AnlgCURFn]?g)(Btou>)h'BL8QDiM
%nH95_<mRA7bOVf9-=D\A-j`-N.$3C8,!6X]7c)IG?S9oMCqER/[euqcW.M&rj:efrZk>@'5i:8gCEZJ$pq!RiJT-Djk<2l3<NB.N
%[\'@$>;/G!pld>lVYH'd5ABDVqGUl_\JiDip8OoTohLEh9&/'hlM7/n\5,fp[/[!d..aWs4m7mPYknXQ";'Z8`N?l8F['VHAU`W#
%ENE]\8AKF"(]I'1IhH[0,&d@G:U9tA&95-3XZb=^/"rI^J@PA]Y?IRC$>]2:UtC'*@K*es^*ee6X7bMR1tf[iKdN;5^M4M"h/pk'
%;2]/1Y&qT,[e8gham.P26dPF%YRQ>5if2N%bGf+>VBXVo'KaFY3;V0OaL;)J&\j3r4P_!p*sG-Fjo7Qb3=tlu8)cW2f#d6p3An5H
%c7SmdF)"B^SQgKEC&Vgcmo4]02/i@hbGq<4pmn)Ub_<&;I\K)1=(7AYo^kQ#RS@rUef`MOA)^UYM\A$"U?8N-B3J`D9tP&6P#US-
%h*\r!V)7"UZ9l_A9cGk^ifho=&XkVVC13?4<H:;s5f>(O;A"\u=M*ZC'*gE7+hR&@/Q<!eF)rWq_'1b1Cu:s.$rb`1Z3I!Uh@6&o
%%c`U1Y`(t5J>mHu6d=%OZ7Ua4Q_P$FBOsUg]Cq"O.r0EJdoL)nIgAX#m](=(7BcSc9<51Cq+bVEj:Wl]g7V28Y4Xao.p5ioK\E\o
%0t*MHh_(.*;aUl=lA8T%cdi)>SHOP;/&`*UJN90"a$pQRC,DVL'p>Bf<I'E;K^hl7P[EOINJ)En00&n[Q(s:>i/-DYC$gdFJgXm6
%5$NS9U>N!8g*(OC?R7:EXlB>!\5bT-(,Ka_(r@AE?sW\r2b/DmIG*"3%92_;3j;)WFCH7FMqm@6WXjkpV&,DMnf87C07)Z>Wr(E[
%HMC5F/NX,VSQbPL`R6eAI&_7Of>?CQOQR@7kO>/Z"crl'PNV/Aen<0Wp8XjE;TJ1HP/NiiqIn<6E-PFD7mm@E-^pI3HPn;UcP'ju
%HEiYF:@1?=<DUSWW!)AO6clfi95H+i54Mo/:W0U)IJ::bWS@[/Wk(J5hs":cVNm8<e'12Vg*:Ar]Tm^;Ti7ES,fsgjH&?SoUA(BI
%=.S^oJu@O/8I-NF4In"iHRk2646k[PaU<UJdd"a0q-Jk`ll!nEafADr?Xkj$:FWlaOZ9goeJ/p+*58X!V<rS/H(='NFfQ9ENNuK_
%$&/DaG9mW<>o^qiGGV\JAtYN5gtn;k6L`OEj:V*g2SETVKn\>578?h";;-XC.D9o]N9h*4ii5ua/,"#&!D@HXcOQ6JW)u5W'mj%$
%Z*H@<rH**#IsbpK3\g)4D=\ke="<RfHch]%?maTJ*+;%9VUOW=:=;L>e4aRr^Yn%:]^SE7!uKs$haqe6ArI?nTE]_K9diY28K4?V
%0Y,p8/3/M'Ab8h73*K?K<M-@3s0hINddV$bl3Vb;hiKEUALpDApL1`VQJeO3(WE5$=FrU("MG)[)-_]^FMQQE2='GIC?Pi!(,hf_
%3J/lg28l\&[C!d`Ho1Jif*>N3H>E)@Lm#po>bt9uo"oY+)e8ZN32ZCgH_*t`K<6V=Pu-m<V81;d.9WT\[EN39BU@<#14"Qn-p(f"
%$V9.CQd,AYfDR*C;_Fl6^'Ttee#R6;0@#4D`HAuF#kXYEa#pX>=CW5ipT_7V-k_P9O2CSU<geTjU)B$3?]6qM&L]g2!n_J0fErkm
%&c@?YXgCu-f+U@uG?q?4@3\U4Shl9[%2j`1,WA`%ASpk7-\*f6(/+>#<D+(E7^rmM(op9"V.@OA,VrZW$l$-A&<&kB?4Z)J0!%,$
%WX3DGZRW&X0WC@rSpYZsn6uO'/u3f`<o@C%g'ABD;D=(,R"JcF\f\>a8uZ=_I?TBX8\K#2/leoUeJ&Ir%R^`g@u[IH$Xj^qLmZ^l
%">]Zb-PPEIMppUqp"@7sU:_3JKCk6W5b2?!0W7L,"Xm\)__?+!7Bcaq:)"+HnL@p(.Es+T7`CV1!\A,lOQh!"0o*"+/@C;t##DmL
%e_3fZ0hTDk]7;Iu$9ns;(aEJt0XU#/PiI<rU\J=/XBQj!3!a=o"_NH%+ReQH&1$klacupZ4#X>`-^X8?r"B,?+@a+AE:D%XpS6;>
%X2AcL2XBYW#F9$=KFLi<i2U=Rkpj&_9@g5(dn+Wr3C%X8o7ND3R6=tcb80G5=,kN_:*L+G\cH%n=bR>%M5</"Ei<_Tenk`UQM&Vs
%V%UKGF%_@9%e6Z:%>h1'HAMp>'c&:+'[l88_CZtm2d3UcK<.D&S8I4U9`Z!6%.W'I&]cGjentc*4l%*s+&aAX+SJ5Rc/]Cq@@R%c
%mQtGMI)U#X5,,RoiN>^MaDF#K.uK.&)Z/Kg[GC6rO8+FtqGE/cr(c(_c(b&FH,r:U+?e%=4gl3NJu6BtRLo.Ki5")*[,o13&Kc_S
%IiKZb5V/r$<`YK!.\t!5@CPfHYZ+.<5!cA_Q3ns]1XoEc.h;>;9(o60!LTZL;nL#s2+^4GO_g0OR?#.1ZIRL_:[ZuL<h9Rg`O:GS
%YJ_GL;UKS+9%[uS*g9PWG:i/nK%_/RppEaEchaJ^*+2Xg'Pb,j=&p&7$F1#h>,e6Rl76j";JW\/[%]mijtF5'$aNAhrdHoB?gtWK
%[Arr*$\'B7n<;#I#JJ!LFifTW4U<Moja.jlTF!+!:kD-j9jAB/TfuZ!buiI7X\@G2Z`;T"K4kdM$@,k(Ft7'LSKnsHm`"=W3@_ZI
%2Y.)8Rj`>Tm@KQudcfo2;'DY/"eY3jUNd1V2a?iDPp_Ha6=upVh*qY.W5pQ;m7LdSi2H,hT7"<'KD;jj^k;>hMPX%uLL<spj$Vd%
%ZsHr)BeHI275tuiWQ(-rC](+FjWb"#`M;PNmW)?Vq:gABWbO#0Y2<biI@@1qmsasHqu$>ZZ2MZ!e6i7K++F+bRt(Cm+!2T"iKq=V
%qqqE>9hZ&sc]:L29&aOq_bOCTR6U]@4Po_n:VZ^ts6KEorQBuZ5Q&V6p8brVrk#r@X7<HTM]'FI=Vlg2r0R0<n-f6cX+0ru?i2^0
%r$N#7Hi'jnjkp'Tq!3Eg[XWR)Q\W>(poj^7H2-dQ`ddn>5PkiRjFoBdn8G.nrq0!$A(LlVZ7QhP(em*^O6o6?!6&#.du1UMFBY4f
%*0WpRg$u<"0Rm$q79bN82W]_CK/2b</*C90:#(#>[H#+s#EHi1p[mS=Q?\"NP*bM(09&2b1(ha,2.^//5Zug2?A^N#Fa0Dq:_0ST
%)M$!j4irYA9o"Y35q<ORkRa3OWsR#7?0]0gpU*1q4b(F#rU`(!iZoc\;.i!gmf)OA<fpZQ#<N-`$JYUsEMMrrlr<m5S2$M#=k"3g
%'eLICOoUS\3hLS0RD5a^3?-X/gG%8TcROjp+&5$]RpP#T5Mg:dT)(,_GGDM%cZC3l@$P%QprLTp5>C;oT?b=p0jbq?l.?;:SpkC-
%b_0i7Q5[E%_!@d*"X/31d:X+K/*.j@WH5T[X(1O8Sp"h:5Kg0q<g[6KJb!c*)SQoSjJQ@U:#(&?^#Qt&-]Y*1p\'*kI.$YaT>OD^
%WOCd0kq7Zcs2WCII1<&B2Ua]L.*^pJlQ1(0U)4]C#n.0@T;r[/Mu<Hc@V1b4'._\r63M5f6X1[VBpuf[]pDbbf1g/]n[L;(GB-!I
%hjmIpVBV';4>+9gj*9@%J%qTn9gW&^"1_@4YhmKepciO`lg&alPSAhQ>Y-dG05'LR?k^I<C`?@UE%(I:\l"lFA]]go/<`b1/EGC5
%eHAoFEH1!I\qm49+[!96Ccn]R!Ad+&Q7l+uXeJcs]c%f$Ui<cM#%*^Y1=YlOMFb&9;Y,0jH6_Xd*\kQ<lqU/\m3Y1M\4eimH`mb#
%fjh"TFYBQ`<oBo;Oi2U]#>T/A?/]<s%8J/3>RFB40%O;3oN>TQg%N]>=-1$S36]Nn1g[oUANrfAD]'YZ@p&#Fo\/M5^al(c@^B%a
%Jf&gP`jE79TIe;R0i6tB2'YY=[WU+%>04KodoGX_k'W."5$4>.7d=Y2@50l0<`N3%2r]9Q`,KKl2''=j,s1o4C*4m$mGugFGjK*@
%mlr#7#7Z_0A<R;dk_8_XaAt>^%oN)>b.R0.pTQ99icR!4=mL['8F%J37RCR@lFo5,Ip*]HAmpMLWTc\7h.9PR>ge`r#ED5p[ZKrP
%$FDHPCJuVq2Ws:]U6Ga-j6MR?#I-fg@1-5R/<6U779/MQ;bb,P9Q%uABh\b`LUjt:8S"&pq0J)a7@Fs[hN2D6;UL][->+Ok0Q;p;
%?p$mC.GV0Y&\q<`f)1NaILg3=`S,ii;er/Kg8Kte()$007htGVXc78+2Tcq7Gp1&)22s:hG%&-O)/]^.Zf.ZLp`Mi!kghGr[RItH
%+_H(F<08`"R$Eb=iP6&XA%E;Q>%:]p2\osDUqY*_P-\K'n=^Z`]@l_\]jM7%Aogi)??;_)7Ts>\EP/,:'ILn<mc2CKGY>?]ZLWr9
%YC+mVmpL.nNVhW>K.9TJC.6[<mV4Bd`U(:*Wd\+kT4(TJ-fBd\2pulUB/;J8`qEN&p0G"H[G%:M:J0'$Q3GSO7_WkM0u6;V+WV=Q
%l,]Z'VFX:@egRNj>QTE3_^l]:(,:khqam7-Rn+%!XP5,"9XonX%X:NuZKfDFF*gj]2detP%1&f5inR"nB,10XF_C0N1`gS][`=bQ
%AS!Pdh@+l=ZsPADa$4-7*B)HN.\b2I-fRe0'2\]:htEg;2og-a++km8d7[tZNbZ"%GVutdg]Mo5Yb[!]Z^u*b;N^ZD1(u$He(X+5
%XJ$@&9@QKcHK#-E18FpIh#*9:X46u]nY(g0LtnQ2(ggaGb+q9]9**Ek+:'lZ,f.9?A72^[gss,"X7]re!#;Uu<`S64p.MtjW!ZpY
%B;o0ZpUaNIA!#PoieJ`g8,4?K$B!p@:M]![XUQV:-KEfS1)Ver_a>o/!#Y*>F<HbSLB@;P$n5[CC8r%m$H'VLl"AWM17MAMH-oSD
%m!NcYNO;:,rhJMT]D_4RDoX'&ee_5#<3A5<fUBtFY9@Ma/m>^6*8)tl)JtYMY.9QM%./gBPdHfL70"@?md0\P0Q(#me"G.B-bVPP
%0cA?f:FkHEXc+INWau4>k'R:tc7ssI.R4S??hK7R_8JiWTL!(m[9tC6GdZ0Qg@rY`Tu2T&mdM1MK,H280*@OFXuf90NWM25Z+=8S
%8n/c)((IIeq!DH)WoAmhB'A%@-A@Q+Ma5,5D=Y%%BW6khC5J*bd`sA:q!6dc%nkrK-U&Pj*IJJ8.cVLKh!h5<nVqR3ac;"2mJE?+
%$?Dn5l3*6MBb/^.6X>3t8',YLOF=RM(m/U!;7DPr=ihu>IX[Yf<&6Xd;n('<`aia#3;hlH%=+sr4oOS\;6l[XF7oIDDKar_el=Zt
%[O+b[YfB:hNTgX_&*5+tcf$1,L!<'[9%([K;3#OZi4)e$J@:?ii',#mTD;q<-r<.pipUm<P@/0^a,BF_:t4+M.\=iJfbRgUo<"fK
%TngNn0n?#jYR(<.H_.@<A]$0"[s!(fS+_%%>ts7PQ!>;ho'(.iZ]s:sn#l'-K_rUoR^m.@T"6WuGGDq1e,3PgV`RoL%lNZKoDbT'
%YEc%]p-(&V`9V4s4TlhqR,c>u8KWO$cIf)8oP1(YI;'<&Y5M2(=!-%VEY(+;T/Pi%Rm\X%T<3[X4"`(B3K<sDGsmV;<R*fjS%/4`
%I`I//?KcA>2`giNF7KQjmXb_h<Zh`5O6o,)?p@Bb5<\h)(/^rZXh):ipA1Y/fu<&$iMKloBgK@nW<DaXE!JlHP;%oaBKoj['AFNO
%N2Krbk-$7MEO:n2aMS3F4Un&@GmXMP-sbA6pupu@NXIM23$*;"g[AhA-hY$;ib\D[!kA.bq`f2rCT`J4R*a'g"rCUc;NM8IXD[R)
%Z5jZNBV_#qC*$7-3S5R=0h3uRln*O:Q/.XK\.B>1_P:+>*9N)tV3j>k?Y"bH84uP<R_#Kj@9lF`EPU9]lW=H)Ue!=JnQh9#]pQjV
%dP^e0.ctWK>YuIK4>Q@$NW.eh*=i,?nXY:mr6!D%V6aR6AA[eRrSbf]&3mo%LspTaHCR,&oj5i$/)L"&jjghgr@SnB(e5V3-[iU,
%=+k4nN0ol<4@+jf@I(nkqTXsCD#n5l]k.W+R`e`2R&rmmeRu!0=&p7D,1&06$5Str:aoQ7MkcuJ!!L-)V*%bCY7TbP.G[jD.V34n
%qNNEcV7s;sXke#`9VCs1WYHo3-Q.*h$ai6<o_,n!*^imJB.3HCI4Vd_c(%.\+ionirj4l'<Q&R<lXR)@e&@0AJrnC2K%>gLka8OR
%O&aT0gmH6k.n!(3^=mhOi`IZZ[Ttug"uAZj%n,H$Ol're`PJt3H,ONgkrlGW8l0Eq&B/Z/P($:7WY4TMEKqCoFuqrQfNR(ACf1&O
%6WP>:gos=bR>6S=lUFsjMo>]0p2MG;*oCVgaJ0R!LX7?@!Ie2lhlN'?gW$\37.K5eeRH'Z\9/IZib\M*R'Ueb3uD4)?HM9@U4$1>
%I%`uK!Cr4Y_5bT:osit!Ll7k$[@0C'/<q.Lkpcc$4^@ZN^`j`4Fk$4m9ke3b_K-L2,=dob@rC&-glU&Q0-#&&2.VrTj*.^(qgGQ-
%5@[uYFU^in%V,j;Qho2$nL`"d5\N7eX0fChNVU-K(_B_^/aUM@-jR^d&#l!/6?'V(r^A\kT!Ng'C2tUsK.9CR9t)NR[l+WFg=@#s
%RH47a4?p.fD6m\32UWN:U""L2qS<*-6@AhU-0K5oP$^MR_+qG#3,^H1,ZFS"L`UGUpWgjpGLJ-UgR;M5E6NN.:3jKqB^-Jk<2XlH
%c/iqq`aR$S#3ZGiXRC0om,+/BmmkcOORh`7GI]gK2+#_7++*@CQIS*9b\&*;;'=$!S`LfM)6-#pNMpS(7FeP#3gDh@7XC"-2>en$
%//MLta+gihTYX'aUBP>=?]L"/`bP4E(<CSH*t_U)P%KeZF+SEBksb.__caH.qMSM1Z?*UOQg=?Cf'H!R@R2QRX58:9X5i@$nTaik
%UR0_AV38QK-hXCVnVn:hdme^WV+Y*,L9<';=hr">8*(,8&oBH7mpa1%VQ'ktk@<0fViF?[YVs"/=9Rq>C.!CUSlRYs1gQ&t:<ss.
%g(uEl!faU&j:YB[^:J.P+sL@'B8PZe_CZI2H<C96;SooM10--RTN!W\Z?s`B:u-?Og[BQ-A=nAb"Y>2bWRUcYEI=P#6'Z(;dVj>3
%kgeWu_t\#A0IZf;D6T[oVU^hkR),qfXuO!s9_%YD]8d_KcPDT`-;h`t+dcSUTNQ`K%Yc(!6J!$We<gJKF*I?S\k\=t<Rh@tToNOJ
%Xo^oKk-Bfo;Wp0k@7>$HQP2KAaMIYeU7AsFh>\QJ%o,B8?c0O^9DI!,pbp=Ua7;>Mpmib^e!]C`Y9/5bLO]1!huE*TT1S_Jf=sMP
%rt;c<?i85'kBt.QYDPDtJXXgZX!;MiM3TjVS<PYPIOR9Fba/CUiAd4uV4"8qX38>s@,aRf[oMWuNGb))3,TYIQ`Wk<80kgD<h#eL
%T:k+Qli@G*8f`=:ND5)T\V^Dblqkc*/j]Mf]&Jm)[Wb6c8>-Jq[Eon_ioI\[:S5*@$qGSfl-$:J[/-,o?]!!BQ-`Bl6:5OOSK*)j
%6#3F?+&!NR=Fpis88<u_PV-A3?cp2XWd>iFh`UA(m(flB"Fc+lI3/riYC,I#KsBU#TB+>%G1A?bRPCNJm#g=@.]`9OCmNbk/!o-:
%3ffi2Vde!^1Cb9!0HBtk'2^o]W*t?'3CM'8@Ge"s+-p)2i_IGZc1e5IC/:lH;hLrt$R^/p0G.BC>G<,e7c;.'*#SUYcLN%SApmO%
%aqd%b=dhr39"3Z#pG8^rRcBpEGL[0\TuWS"\L[kT7f4r(!"]8Fr"ANm6rp*r];,l8G3rd;Y?9c)Gk4qth,cP]HW=BA-*oM$/T5h^
%(O>c'TE!3obO#8Y=8<QeS]"(-RF*T+pM(#m<HT#aAErB6P8iDDHr6/S1Z=-8%nPI`7\u9,Yrt/n"-.Pk*:XXEI6[fOGtSFHe#o`>
%:h$6BR)e4p$OQkZK`l#=mjHeaA'/^i/`Rr\;#IoW&>XH"i87QWQ$72p@h>YM'pb'LY(#NWcS<EG0p?fkN)hkCOh?J\'C&ndh>a^8
%FsSA'71Br-K]8*N(tin4rD5kH`:mTo3q)-6W.\82\7u-60^n\@J,4k;^[LnPk<JW&5(d^GZop7qKKsoBAO;Nq!Yi:ZMIo^-#]*rJ
%_$/RA`_03f:g2O"W,%N\K_1e9QpR<9RsUpEM1nKcoY(ZJX0BIR2[,M<k]:%AE)'WH@,,^4Wj$$7Mdie3[i5jd<WWp(4On&S3dhMR
%AP0:HFS.HQI/,R.9_.Di=F#:4Xe`4Za8)*f?7]U"RIP-/T"_Hi*j:M4,*:PkAH"Q4gO6p@?iSj;bM<-9GPNNAg7`2@d8>K[E+^d2
%1l0N[\;U:,E"0G<JP_1O6_'B^Ul(m./]+V&!"^JWVgns2qW:2<[!@M6NW2Wp^m64A_R-cD,;rS'#/9uIOn>F@YYYnYiN$%Ge:GJV
%j0LTl'<=a*>'@a+mnGi/HXq0RG5!ejJ"=XFf#uUKMW8*^Tng<:#$uI?%WeI1Ce`Ui9r>jJJJLk\]]C705/+f-ESdg6;et67mNn4k
%m[ZT:Q+rZRs/AfbWLt'<l\H[GV9YCq5g3b=jE/W@'nH`:8@o]hMm4We&;b9s#;08T-DgCR,7G.u>IIOA?uT%N&K/$:qE$PdH]jp&
%*W7J!nj83T7c^E_fG/TO;a-mO];&T[K)0=k@d_.>e++Q6Hu*F$]*X@ocKSH@dGN9?qsD'g\`5!Sn]FuYj'h`,[N:1J0&p@NP6F+W
%f&;fog#:tqVU>5U:+,ZCIJ`(%q]Fu'paY!+<*d'$GKRL@a3ee=G5X48rOo:_:OSU+a0fdq>eJ4?$@6P"Ge`kMc;Cd[qN&Ddb]oJW
%r;9+;5G-TQM,b=:4(qOBK'(K`c"VDRe<bBTTuJ&M:`b)YRkG,-M(C(EP/V%lX24S=Z9a,m:mj<XFM$U]'W)a43L[g0GXS:$N`1f]
%#i0!+nnDKW,iVQoBn6[l9c_QObsD_75E6jFpQ!!'\"ZapCA*Ot[,a1!1F-C57+_+SM'2#Gfr$Di/GNJ*RgUX+8CG>s/\3f1?QKqg
%>:]tOFg*`l.l8#4P*0I`hA4&-3a(,SV/%Z1BLZo?pL_TgNRh^&X8j?E_HEWG6+&m<XZ.h):IDQUpD/gl/eg5FO-;c!*nN(WZmA@m
%7(?3:d.,CYA_j]1s)cOaH*D'T.?G,ip2ntqM^;QJX,Z"=@pI)%P_h'CQtAb2fsjHPnjmkC?*0A]RVn<-*hQ!Gc@#+9'8r>ZDs*On
%"E73fF\aVeMO6WLp4Z'AEhl)rD%%/hp6N=?G$1q'msLlWPo4b.MO@'Q^_(0[nG,!io96W5F3'h.L%kjb.^>_qCMA-V6#7%9X^auj
%r)*/Vb*H41FDb+LJ;E^C>UcZOopDusNFFK@]:1eV(8ItDht%.3M4TM*iu8/[;'-:!l@BBG&8VRP&O:8M'e3?9^S+^1A\M:sp)FkM
%W"so=-:NrM'/lTnk\1&[jk_c+/Qu4L:K0jfBb9ltd%CqUjD>2iV/.kUiYE_Yd=eVM[A[1N\![1NA0K58P:mg/\m!=Fe5R0[Pf^IS
%@$o<d>Lie;D]OIraFssZCCcp?pF['a88a[n#M[&H(7I`m?rbF$=GYcbbSu-2`%_6rbqQ0;HJ2NK!WCRs';L+4YbnF'HnXjZ.E/52
%#gZVnJ\IC9),;XS:J69,/Nosl>Da&Oj2=qESGgRhAbZrP8nW'8S&.RT(pJ5.4`Jjelli39@r%5r<O+b5Q&S;-WN\$jFcNS"DBH";
%H<LgX;%lZ$b1P&he',_CWK%[XMJo4pE,V%i+(&KY\e=ek"YO(]XCZr#PW;V](Q&bXPsl?ld,aTnhBDl$VDtt!lkXrq\B_b8<G_#<
%$BRMpDf(tV)$gAGE:\YSfj!_Ag)<>^SH[0j3Gedo;te`eOuU4q)CJ5]I[Xkeq2d0V*>oTODlq`]+A9T+dTnq\Wl;)lRI[o.0q@:@
%[e[O=R8_G7H(V^OXBr;,P$:uUY$!kJ+Q[TSKQSj61!jo:PdJ^.fmTM1]ZMK8AL<Po,ut?,81Xa_To'A7DM:.f_!hZ)*5]aeVS+<J
%8+=];[Qkq%<I;V,8>4(uTAR>k$"67.Fn\i_F$b$6PDd4$ed5$@HjVsNSjeFa(L*U"'YF/43Q+B?]us4s/g4>Jj!ic^Z3aLC_36Vl
%@msXLm',363:1Kt=R<K_FI'CIegT#nH6$3,9VfagZ$/sCWaleN4)Cp'RrMleC8gY1/]CJt]9Gp_SuG^u?VfP1G[pBi3&-l=mVGtI
%ETmJU4o?3Z"d=@dC6EB60Xu,j>T[_L%QN-@El#9k]rG0"W,8T&<8&$MfTo?jPHGn2;*)G(qJ,`UM-&M%Y!P^?8;Yi\FAT=A&\6N,
%S)sd;3Q7H&ZjO$6?laEVc\F>>(^.l>7%4R5O<(8Wm`WGT>,gCf6__$+XqXBgfU3R;0pXqZr?>\neH5/rdgHL?I[?&J/"QhMqur9i
%cS_1)#HI4Jk=/!1)C&+;ER>/k&5$PaWED,2q#QGF-fR%Bs&Pe!>Io\D"P'U^B7WmUA\-9Npua)E8Xu!H<?>uaW32Jt+=3P:*'AT*
%ZE[4VHoOofeJ-c2W,C0t0c0jfKe^M]?^2Ga!sL?q&:RLLGAI]"(j>F=4/cSrEC6r1"4LPQZ?SHF.QKtU67fekL?-XKlNfUSK=<b"
%qrkd=!?3bnbpn9HW&:[]U%O((`YKnTiWH6k9(][Uj3'/:VM0WK$92#WCn3O$JJ$Z1Nq++l.,(!>f7B?:)FG",'Yh^qU_SSNN=oLK
%=om.)A+u;#fuDU63<VT-!SJ0$aZGNj0Q,OGZKO?)))628WUj-oQ"@6F0[HaMg'`1p-@jr_&S/%BX&/[m;m^Eda-`_HSMfpq[@f[I
%'O;`6/6&YC&2:+f19Z.sR;Cnp1TM2OMh(r\OPXq[m$HqBWpWi6:mbD^r3?lJC5)>AeQN,B8%H7aMU5n^YYta+FR/pYLb<DH[*Kf;
%YA+u27uf#<o.;C2S%U&8J-s2['t9ol(eC[^%oHHJ?KI('>>k7TZ74!^V1gA;P,G5n-PfqBgDm=q,&fuUR4,,^#>tpb;`V`?&\-SG
%db>O%7[o'Q?Kp$A[-so#i+7l0##gI'HSUDp5rl6"3dCETWb-JJ01RVIOY0QG=D,.DHtlM_M)nA\Vms@t+eV7+@SQPrQ1:-oiA-j-
%YsfP:G$,D?g+"bGm*0<;<FFOu@CD1J>]jH.rfq,iaXY*+-KYK7:S"!3f0=b)4G*`C#K7pXi<hES>#*IE_Q\QKb(q8baM#V8hk:`o
%L_o<<P'LdcH]"=H"!C.CMQQ]agFCGS3!O&0eoarKr7!PM>+`/2Ui&u%Js2J7a,QQP4#Ts`Hm[UUfS9XoQBih'Y%8),Um)UaULX2<
%/-iu;ZWPDkGo<W^pcH)qIg&=Lj/7jt0\hkBY4&BfflQ*+8;sOpouY-3<TUDq"VI)&R=L8a6I9k+3Uh4cB'OM.bk<['g*3WfJcYtf
%JS2YHQ&=Tf;O'u.%Ng(l>PI*lI_$kcn[NcL!p`;4CZ-NUDb!W<fif*%N!8XpU7&CSR%bi<pPl,efN-M.MRi.?JW!g,J$;@qlX5?C
%!;qkP"@onj/4L+-AMlpFf.b##hQi@WC?VT[aqO<eaLB7N.C_G9<^JO7Ji4#BBUk+%T2rndV.^S9Bm4oQp2tHkk4RC$UsG]Y0e$(a
%#(WI$d[ld:ahgRT]rJ1r6`+L'T"gUtB,/E$j`K:_'^_&04$^Z(a4@Do`\4\9jg=p7&t$94rh`?+Q^CY`k[lX+,&C/j`>AW*>Dfk5
%SK":GY9\,^n:NP7;Mc?)Rfq^F=m[Y6c6c&a@D"?bN[V`/"<ac#p=5aDeX])J9"8]iPQJ1qp4TX-5],24[M!`92"%YcoZd+!]h43M
%UiO^2@%)CGic?KrWGgb)'a^A5Bms:26-Uiia,;WMT!fIMpkt*i^;XiOlP">S;:cB$fOHt&0(R$CC,`iJpp%NPqV6f?mR9Cf6a\0I
%;%s(Z_aBc.Ok,qVeQI3\>7_Qbo=a0T&9<m!DORiR^;UGEoJ_f(i$G8u\!81I&G`e%K5oP,2]Ch5#%]ML,LhD&TRG?'Ub]X&dFr&d
%/qbjt%acRgY3!`XWQRtm=q5,KM*sY-BJ#TSiWW`!gq4P`U"NFg51SP:Cl$riA`0f!j+J9`h,j'aW``^K2r9(^FU<V*-EmiSeQV$m
%Jk4Ig)pc!eEddB20:jSB_]#7;g8eT*:[Uo^f)Q4UCC3g1cl(l#q8'Nik=0Ku)YP9hS?0tC%%14<R)c?+aB?4C[)SYB>=E*?$bF0[
%(,L7V;X>=^c/l;&F"AB7k9TYB[%u\+OU]A+-[+ec,BAq,h-qjaZ7`R3Wg?58e!.h599!:!N^qNSOB#Gaf;f6=!V5`h>3p=LnPYj(
%W7`C(i]&k^pe/.1GM9B?HpGKp1KCY#Hhb$oJVZ6U1Nf$"8S<\&Vn`ut\^,NCd^?3`ITOBLW:ZHhPY\\:4Lo_:d%Zr/;FK;H>b#E-
%kUBK5F-rt<es=U'XhV!^_`u:]cmRdl=:(\_"!%Vbc5O"3CGPh<lN97P'WI3%*qObJ%p0$jf]L2OY1fH?\7fM.daIEsEPhlY.)`Ej
%51C@56RKcklK1#c3Eeu?3<-%*<cHR0.*2GN@me>Und801I';$D;G?.3q:89SA5sstO,?&NR&Xc.FsS^:Bjn,ji4W*4$9:FQ%GrqC
%&3N=R?])IW_lT`i(7A<_U!jF]'0H$o&e=CZPWFf$*_.p3FtF]tXf-6tUJa5n+(%L$i_Q^+9Fe8EDOZh!ZZ/r_eV9JJAJ3ZuaPeO/
%Y_:G&T-l<SH:`+(Gn,c%,fajRkXSfh=f4Df_>e351oj3e`]7Y>1toAiD!A4nRd_pL/*c\(jK&n>EVP(lQmId;XgG<,[4a!*]9cY+
%\O=)r"$_f5&U&;".j=o3^;*7Y=rEpI'^45JfrtSaPO@NWoC?0!^Pf?U<dF!</#6QNI'PM!/adOt?B^.(`i+G3c(tKg[=r>02[:S0
%JL,Ahh&!8SO(AA4p?5+bnp2thA;KZGI0,?b]\D5q3RIo,kFs5rhASJhmB/7H2RD^*eBXRUjt8u%jT%CmlFiC*^mGl/[n')F8X@r#
%3=n.P_Em"9S"PWcAbL:S.,9Tp"6L;./DJ\5X"D$qc;RWC+F+n[IJWBKE+DIUkuV=\/!d$AnrpnIBpCi76*cV6^^:]MRnB_>VTEj0
%$gj<i_;[pD-:;HSeV/8iG_!NT][>l<]_/RL(P^A<U's%mK]j\4;g7b1-\jI`W)j\U`8R`i&[Kh[$Lar,IS="G-E)k'J(1XNfH/bD
%BQ(&?]Jt^Q`L[e)'FQ1Bi)T"Er:I/;'AZR]Q)%ZB"9>4HQ$)2q7DOSuZO3*i(j/E;C=qgU"/neeWDB*]j)j#2>.3eN5:/mEe&J!!
%pBpF&I#<2I&cf%+'bo=Uk])lU-BXNg&gq$SDbG7O,SmKPaGpG10*)9b>S3M%!lV@r>Oi;p;II%<As[1`ZtJ&>p>&Hb$$:Qe&<j&&
%.,'iE4[u"L6#Hk<n><4<`bdMbNeQd5-jYF5L9[>!Yl"\(XSjj:Wg%0nE%m]D0JF$F)O$s5*[BR-/Kd0Y9`Baa$3pWr<kE3I-V?,0
%acg;_p85@,,USj`Mej32eRP],]fCud4D=9-JpAhs<.]jbVMGe?$Scq,fNkJVS8bEq3Mj9c<bZmp75mgALp2;bV%WKh(3hOEFgXbk
%k"d9r+dj_^\gY'1]8,ZC[[>*.MmV]bf?'':bHb`NN>&i^:bNq/9FFH(C[(6Cfs25H9(-ePm])YYD>D80Y.U@90H>MtZ/PgH5Y+Zu
%a"HF"g-D1hM@X</^j4Tep5lL1E@9n':C2W?oU#[D]7LmL=RUhfQ[(t!crcTS/3B\/33(";W`imY.^(.mib^ej$*S3.J;J-uqEp.K
%O?q<?f)&E-ATuO%9njYBG[?H5\D&cTCmA88c6ssYL[;Jh8'dgsCq_;oa1>HCfr;tL60.gkbLmtpE3Jckn1P%u:6V#c3p>B"LNjnC
%K:Gg>UU8+;)/DC5=J`q'>r?D]\!7_#q3[r*c4lg1+rbo(_&:'g&8>4`Q9uN;5mJ2J4nA';"kbm-/0b0$TKoPk7r=_gFGikSYa`g,
%Efc:'H"q\^GU0-9R2VQ6)/KqfXRj>@n'cq@AYj?hRq7bi'7gXIrtK/k5cqP@$riOo'q,NI4DB(&5IJ:YPIs@D:TId;APX0.8$]"S
%O9D$gKCeA_=g0[n;D10K;4?7r&r"h!J;L(C!/K,X&TTmp\0GRCg1FK7>0nO.j:21-J;8j-[Bpn\%]ZZWJhcu1c$%%L&5+TT]+X8G
%;F3Wkl*BiDGY"<mN!0d(.J7Q7gPflaTXN5`g?Wj&)BLI+(W9O;F%%Udf"$o&]a6AZT\Qgm6lo>0`;7"'b&P45%o[t/QW#sZO=*k!
%1)tu+iFuT_Xuh"LMH-Co[-u$Sce%1Z+\U#Z37p.@%rZ7mL*6\8(bFK^!c)75J_W4,]D"/B6'`KGZZrEA!8H.**J;;k;P8o/9OHqr
%3JA\Z)r)Q(@O<n+MX3u"TD#9rU:N1XEYq%,Wne4_b;t]M0mj<]j3NbS)#IQ8#$DN\COum1UI>aA_3@]1`Ae98I8rfh_AcK*R7t@n
%'P%`!7RU"I4/Fea2G2"PA=/ITQ7ADR98@ms$K3'd`)QtPDadmJP1J8NPZ+6Y_^e9_e*M..gA80`L7@Bg",Mb1^WEf1jN;"b,]B8q
%Pe)#jHo\95W*!ROJ/'P2<T@W6(1\C'V&h!&Bd4Smm*<_BC^Wqcoeue0rlj!1lGeu+)b0Bie?C"9m=6%=c))=T"^KDh<%BCAbMo2d
%"qN0:T!ghH]Y0f27(2A1SiAO"/)&;=0)1#C#UmoMMb:%U3kA/K5>&aECSYm*M9Cjb-9-a-M*'J9kp'KMi@]..+4-N'$GKd>p)`D"
%L<C/Q"j;eh?:ZM,*F3.]di"k;/1HQ!D\S(V2b\cK+>JI(HGm$k"MPG/Wjpr><X$5i0f#ks,L+k83C=6Y$OBBX/I#[/+T9,Ai#I#r
%PTgUm-:PDP;ruG2qnX@B)HfIuXuh!FW2uk\N))ba16GoA?4gDBh4G.7`93-$P_Iq%OEKF0.&571'F/Ir/`=2V_&?e:;NJbQ6FKr?
%b?+5EXAj-3q*9asi;$CU\Ef_"o`H_,;Z*HpQh0N'HOcE.(`TJ22MKZ]q?c2(h:K847P`&cCHn7ZJ6rc?:_-cm9i#+?MUGUiBS$e^
%e](b1=e0"%nOF>CLZZ/R[]fsgJs)'d4JAFKLN(#D@_-*OOtW%t-'+7\m@t]6Lu6`SA!<<sY^X&b]gT%D:oldg!g^8NhXA%%a/K?G
%_C170nk?6Y'P;Lgr$%f*3j_R6^keK!/stQNHOnIhRW2N>0/B9=U'W0^gZpNrqQZtSMl%fp"0bUfg!(O1MT9Qg3h(3Cr[Q#CEaX)W
%gcNHX#q/d!B)-R,NErMJ>]o]lo+98XT@#/_^7bC#k!BWHY(6$*SW%MFH)hVJYXd0Jm0>75VOJ":%1B_h:t::H)fmeWLN.;jV:K)]
%-V:H.<=Bt59S1P+^lo$p;`"q6^!>RqY!VTi_DTd5@G;PZ[Fa75\2/J=VI2GpQNLU)Y>LICXkq&:$TD/1Cr2VDf<\ViXeu9C.sS=9
%i?#q'<L'Q;jlmVl*hejiOeO0(JR%$c,500D":u`LOQJ7%7mO]gc)l?*8)EtB1ahq%?[*BNq)UfIn>5LpiNG=iQeApqE$0_Xi?ieq
%K'tSB$K,e<q^:nW2pa($f=dp"%-/1P+UG8?"fSnuPeGa-+]9I\!(*A:a/q-,TaRhR<NG'<4AG#W28q8R7!lRb?;(34EU6Q)A)f:E
%Eck-kUYeoiDKPQ3]At$=!:iC.,`H^O,D6'Gb#/r`G)mt%*_iS<U.HF*P;/TU[10;T`\'SKhOp78W>WUaD$&PX.Yk!l\5>(O;:<?e
%e`.?HeZ7W&)0TA^Ba_/)?LW4!7X3:idh3HHn8P/;pR7+7Xt*\k*/IHC&N_X0RRLWpkJ*Kc.P_d4TmF4bq`]??5X8UF.1QHb3C^Lm
%`t'&jDA?.oZ("h%021mT"gj8]VU4Q?fjObp2iC12'b`?sRW;dpf6W?d8PKD9?1mp*'@KO*9WO90YrT6cUXk:-4)Qdo'!GW%fX`-*
%:"fgeRA@6-@]nQ3(dh6r9HH[9A#$$22KsiB=uTVDD$fSP[nAUjop\E\b=?]r6'Xai)/7pJcNlkPD=Md]Z+o_k]r#8hrXH/:ojfe-
%_7YA]$Fh:2oo39*_RXo`%pp);_7CUg9kbp%-t&uK#hM/>Tt\h)7/6sog:SL4PKdlH=UHW9frZ-NR03GS0.B,H-LJ0[\d4>ah`tdU
%I9<uS,!eQpY-/pkC85rgFFM)AM/hokHRJm/FPB.p>lbp:clKa:[8eYrb[JqU`*8U/6-e0QbFr@>r;42rY*#SFSRq(E"KnP#LC[2(
%\PE?EheW`jD%L*u-*WjUUB7\N@t;u/I0_uWUjC+ChWX<SI%/AO;k\5m`=3kkQ5m"NW=m"[=Q=Z!OY5*=f4\'FkfM%jMi0i@KGRXS
%?u@&AAg5@[FENRSc;&//5oNac3BK;ID"4[l2$#<`#Pu:Q^4rS5%H%ru>gCYi*b.KrbCgkIK^cRfpN1AY\lp5C<S-t[\#6\J_745T
%Iu0/a#GCtdI@")nPW,fAE,oDn.g%8"^6i=q)(_?-Y1/G1RL19K=rHbDFf"ET,EPEa9;P-(DUumD%3KncSpJ_?d=G\)YnPNmgnGJ)
%$/Oh4I:hR2K+!r1J.dEmW`5VF+A$-sfdBTm1.U7mA\ae!)KPlrC$f%L4;$+UY-.#_Ci,0BSR'[M3Na9l?HaH5R$[n::"a)@:>Vm2
%]kdipd_aatOXMuZQd`,EXBo+A75mQrf0-f[fOoD3?!S)Cj>A,!e\U&_Mb.em%KS3H"e@iYda_3,90l!d`=u*N*VU/2Mk[uoIP=)$
%m8::A/FLq/$+(s,q5i#E&nl2)B9l%&_W47OCS=/k/QiDb*CuI*CeI%mk_=ZZfDWBY*-1d[X-g=NC:!ERkG*([/i#-A<E`.ToC:[h
%OO,99,C2-f\-3;*iV$f];0o0+Up`%QF$7<H%$,SFg<C>+!+t-K@D_B3QpsAQ=#!*3P\N7e\]f`+(_2EQ-&Al>353en%uc[\&;F0k
%'?8h.,MeYbW$91&MXR#&>6Rh`ik*ltOT\aO*Ws#B0nP=]U+e53-1Et<ItrbEKK4oGDDS.WO^!kSIG>I\h.PQ<,#l44On)\ceS0",
%T_Ba=d,?J6;._g8b_ggpUV$8gSgd:Ur(:Q'<.,Od$bcG?p^\N[i>h*+"sMq"IZBqSYY^HtaK?95U8V.c_PTN53f9dL@W0P/mmdXL
%_/>`3Rm[UPfk9>OC'E:?.8/MkiBW,Lr,-0bXI@.L=BF+LW?/mJYA^R6He7.:DOIT]@`"*UhhJD;gT3Nkk)QWilsuT!X%MOjf>2/`
%g0AbP0UndBO@#ZiFfUB]WSTIu69-Oql_T1LVJIcq'oQ_q[%\HY&Itai(Z$^JYk].12Go%@c-Oopf]e(S1n>mjiTX?TmkPt6=0X!Z
%D3t&(T6JXmm,mi"+Hg(EZOI%u:'OX[/+aj)Q/`R@Cq=D[ac';!"hVs?RkpK!=7TTq5eSh*ic/DRV%=YFaW6/"A-!C46o:cu#A3SR
%.TH-&=5I!pEj(4;8tT"(T.WOU%l\f]a4XSC_'?1q`*77\3=+&4qPZt^b+sQMhV.CdE;M^2Y81'Vd],V?&"=aQV#+C^7rSq_S>M4)
%TJXsShEC"-G7[O/L.2Y.\.#\P+>\17FZ%uZCnj5K,/nQ;@LN#D'#_:[fA4-`KG5E8cfmf.U'g;!\a%\EfV8l7EmW>&<A"*Z7+M1q
%?GVq&nH$5K&42kC3M4GjD5f>qF3Pa[_mjoM0<i(:N#rB%;]I!8G4UjDVV#omo=T*J@a`FI'eh5,8uf^n2nJm+-[<eScY'j)$n]FM
%%MJ9='o8N+_&OMt3A>khlij(]DfUn&;T<TP+\#^!"/Et,N3a"\(=cAu&:9>3cE37BOseNX(8?7r_$\RT8*WgSf/hjV8?_X-,%p':
%KHmBd841iF&F-sVh7H?WeaUNi+dS[#2u:nfTb]$6TW&%OC6H&YE);KM#TZ^eZpZ$;S`[EcHJ(qb3jD.Td?CGpSRMej\#t=H62X!a
%!_impBIZWrDOpbN5IqeZWV89>8Y6a0-oZCg8?Su,mcb`N90hm)gi*g&+08np'ACTcM3C<UfX?-CQM>i:mFfZf7PtBj-1X-!^Zn@@
%k.!U=!OB[l6-tF#-r+.bD(Tf>?/nGD.DD$rf[Y!c("2B,>N;ZH]F?qXI5?26?;u?+X7"hU/qP;'9$i;!\+An9C+^YM3NC<&/l2(T
%bZKN`WKOa?k'5mLn$T6i3/j<kjhM)r\Dl<NMlAI,.i#/N^@unkg%K\7N#4C*/9HpcAjbFa8QW?TosDrc(;6A!G_uuXT-kus^<tj8
%9h>nQWI(83VU4Q]>")3TQ*R?q$7)1QL8qeke?n9r!lVqGjEm6<di"6/Q):55ln<A(W'#[M_NodV.+i;<8DE<b=3O%`m?@B=V1UUm
%_O$lhD,tpj;:YJk.JoAHk=c_!%'LW+]uQ@Zku"!@$Qdfu>=6(n)8keR,tTl'2`7V$ee\/9N)%f)pCqCAlrGqP)eo&&=ZV(tT4?k7
%A^(Q_&Ujq`Q7M(j8DEuTCaV'!PABp=WX:b(/^&I1@k+0E1U4j[$?5CDZQF@:Wt<"bBr4;JWuFRdo%]GE\mgZl&kc!!(a,j/_X7R(
%gZ/fK-A5\?/ZR^&Z<n8G=U3FM\^6XQNj:q*M@Z-K;"do.V[,#7RGPrV:m;+m9XIVVFcZecO+.\(NYhE:)5XLf4h]%WUaKA+^`/u4
%=4^l\$Jp\+FeYA>ACt`3]qh%+a-ME6)64]YeQRPQ9Am*"er/Tt.@]NBe"d9)]>HS=2,?kq6nl4n:Fe>0R?)0Br+p@-:#DKZH8:?/
%E"CQGqGD3_1ZN]oB=FmEY'PH8N=n/Ac.%X2%FZ4_R3n1EE1k.^gOf=@UW[Eb#n$"/Gp:V3[KX'jAr=b*_#>lKVi1A$_*Gt2]8-+I
%;t/&^(-I9IekAaR-OcsrVBUSan4BCp:F!uefYZ]H\jL_1\qeJ=W$q,G[s+7#"ERh+2+(ZQk(H[hXFh<kCLGU2_Wk!jeWSr#k!Y]h
%R%hC_YnNMr[#QaADqS6rT]D*OS(jae(f0;M':FiNEOIoZg@B=oYnY$S.Di-X9i8aUU9r3^VUuW*Tl,4!6!1!'ID+ZWKQ"&Y#U:hO
%p$+/tWa([7D;VbS-rFNu`291Q2`#mMLPZDEdD`(WiSdrIs6.-/-`M0'+M))Xoc>f;-Z^U;3N6+(=5E/a8L5r:03,)sWMa[7452m\
%=Q0*U>rWsQ+D.2a?+nE\XRRumT$:(]<S?)r-F?M7X^JGW#,Q\m(AP(:";$j2H?)m]<`<u0!OOMLCV"B^DN!0tQI^YIF$c6_Z5VeF
%6-(MIp$UaD\)t,u5s3*fa/XIsdPN9l[FD$J%SVUR64[.GrO;sAb[V&2,4L_h2(!:EM8Z,2S0^'.QZ!LsKg`#dd[d<tMY[B(1jpFL
%N7dWrQ6D7q9llgjl5;0^V&[cciYcTa/_Fi#Tc>-*Q>HhsEOI,mCO_r"687l-bgG/ITlZ@hWWLOhaoP\Umd=BC->GIpQYS8i^7)i+
%YlIcL-mq8m7NY_3]^",uiciKf&b<S(?W$l!PqPt!+DKpu3Iq@GTUp8f&rP/b:St2WWQ'WAie0]i7.raFc/E$*&/$1&o?46r#;&pj
%#:uM"CBPZeekNC?[]ao1-)k2cqZS]TTs.le.h&[1\u^lU:ZrcOThL9`K3V&C7<aW?9VY7XU(k#>C1?b@X]p!3=Ol?4GU!;Ll[`%a
%UJm1>$.r-DQ=Zdu&g'/Z6#2jB)*5s4USo!AOcsPW'TjhA>!XeElF>6t]?J9bK=kMqa3Co]W\^f8iB\doI1I"4_(?#X78]U@XXQP<
%%7ko9"n,VaA1cO'$I'>bAVi1E<TJTMLVjO*]1"b<%W$/J/?_edDF(uGWJ,Bt'I\0\b'>u^oddLeVh$^5$Z'XI8k.V"lQ)lJE1OA\
%R\_uai$<@iEAInY1FhKDd`,nu60l\7'[E;lI`6!]G^UHuX)_8&+nF7H_.5"6TB+opVoHl#S#!ouo%FQl.6U'oHh20E^9!4^CR3%N
%'.d!eh#S"Bah]]OEBrch]^P)j-6`K,U-k&00Iir+K*/qIq?5u<e7`5hpHf-mN2u)U$daS5/Rfi-prI6Nr^`<M[PLK%&5]#\9F'm[
%J%A_"P]<m@][eJfFh-ec>a;6;)Pn6B4j%OdY@1*1(+PHgFcW+C`,h][+*VBs`0N4dF!)BQ&Aoc#_G.EP\kbHo6;!pi7OP.FF1,u.
%PDa]lcR!U"0kW$WUXj2g2K'Bi\t6SU>^ra[[j?p?Q)EeSC,7`@^hS0B(E)@OR,=)8JZU7ET#S/7b6R/QY6KF1kjNr^k7Zl2ap5/:
%@i31J+,IG_9I>sZEf7U:2FH4UBfBogL8#UNR?n1>J>M)1$#lrF)]hqSKt^h'"uK35Y&U@sIsIF'(Xh_>"$`g'`,NL0HQia^r6Jo@
%#]@'6KBf[YFS;:fjapf<E.=1U>pc?lgL?Jj-L'7&5YJPY`&*BG381*D5:WN>U1JD2Rh"*(KGA#p!+/Uq*0g#UnOug\/mM$(COllY
%Y=5D8R>qW)W(5P[C3hWcT3S2G%*Mn.`gn`<a&5J:R8_^c]usr>W(+bA!Z3Qpq.[mmeuT(?ZW5Jgm(P/8cUr,m3$c6mC!!&^11HCb
%G?+LVD5CeM4TP:FZ+Lp<`;r0%0La;Ml!5%:<LpIu"VMU)?.^<*>tb/AD$QbbR4q$Tf3BO_G2>Jd$a"TI[s+@%n@P(Z+71PD`iGHJ
%RY"l"&fMrTf],#d-FA;?(bb8apsT)nqrGNbi`mq(9l:S6$^LQ8KO$odiQ4b7]u_8WJ[0Kq(>Ih-2#$fK;&T8m8l0,jZn%W0n`kd+
%@^'^G0YH98p-/(f/--VG,$J:>djuc34V2Eug>B=V,$u+hPp41$D+L['3$r.#q+I3t3_c>qVOKo9M`B<d>a=I@V\sE)M+to*U*#kc
%e)\r\3kd"ZgFuqMRB4elPpQ^$I6R%+;L7*L%m7Fe5uB7>)J?#3jq?VTPm<-[Pf73;E\8X4]%!\JV'1dSOgAmte3/X4`AFkMUetrV
%(LMb.o,b$l;3%ViNdhd7YsJ5#i]:(^hAU&+g7mkH(+&eD>jOl`/kA;CcVspG/N1Q(p%:L)Zhdd)TikZ93>`pG8q8HSj:A@59/UH'
%'F@V0RPTr%I9DU+[C$XLEkKB&&WAWXJ`t+2csr\jG.*mMY"#**Hl1rne1pK`.!$:8TrXf7\2VSpWt5kEB,=PY2Y5rW8Sc&IG?qoF
%2Rsc`,O04_YJl>3ZU^.Zk1,UG@':A1Y=N<Xbid5'@Ec^0r,Dj^?qf(A=@M&TKgnL3dUneU:7+0\XsJr\Kf'H0MMoc915!BNoQCc9
%OrQ>b-HIl^51Os;m";2JVZ+42&)>pbhTLT-bZ-6Pn1@n8D:5Xk9>Z'fj5?HH]Xt*)5$<a=Q=C2_2\lEI--;)-:PrPMMMc[(dFt%i
%("=JI`5adH6qssP5<M\;F7K2ZU4[#`F&X6JT`)i]>fBJ@)V-/TS+fC=)N.2S]!(k9+B+jm"H&\g5`VD2]!biha<Hc3;%>65EDbCi
%MK8LAVtC.$;AFqGiq=\;XS&eL-KgLkZ^Y9pRgV+aNO=\\P5%p]bR)c8f4Q`HjN,Zsp&Z?m+SqOQo!]o5OJ'.Z@S+d5dMNU0l?.%6
%ZSOqZ[K`:RP#%8iZ'[(OoC4<V[u0Pd1"EG/-B!V;#'$)b4ZqDBW_'sn5=#sAr-HgP%],R7&,'Qr=T%l%4pmB?[DmHJ'qbc/!C*Ri
%J>jZ+^^;cA"V$PW)NYaq1u1<IN57^:]=raLTq,r.d0fiY;I1AIa_#BBE:r47&`'H9ZnBKFAiO2[V?"ZURrgW#s*>6Y#Z7L<U(Zt$
%RZ0bPTWIO@8G::'1HO8'>irK2==243E3tG4:iXP<*uOV1_Hgm4o'3D0^0g=6UD$g#2gThCYU&o#3XUb]W(qn@3gWNc;Tot/;W@%_
%-%_[^YdmDa\J-DaT6u(k#mt*UV-tK:eUU457l4.DeS=h(jcIZ>FACQtE=?OR1g];q+=[b(96@>nn"9dL1VR1I-;r_-1cg&`Jtd"]
%j^2><p7>^`)JC5FMI'r05U7"s-nhnu2"S#dnn&YeEE?5d3F^D3L^s]&!_%#g.R=&H'>3aq<7=%4>BraG],XVVX?j&'95K^S,W-&u
%i52?-Bm6MI*.Ii?\KKF0;_[qR(!,j1D16!23o9N#DM]:.f_(NMd!POGZi,fo<Wf=n[P^_9Cf+-"XPRZ8S^*F3Fcb#b/aBA_bEnt"
%F<]I#r<^#:Q%0la*nV0GqKLo,bb>TfnZIWk`YK`c\9G\u_j+.VgNdhmNqDLg'MufFb[euQrn_W5U778*<CgOD'N+\m1bFT-cYmN?
%&BMYO(\=%i.".T`fd7_ERXF)@?CUac4J0_&%7.ue^%U(aEh+`i.8&b\X,<qWe)]$on@D>#r#BdF&Ls)4fGsKZNmRZq&e=7P='`Mc
%ClHUdR.MX&.-\,Xo^o,d('tBU%je'PM-6kaEP9_h_Vj_(*$.Lfek,=>$Y]WMD.sXE^F5gHYM-Wj3$MWV5'^T";^d7A?erqT%lJC"
%^KQ!n=d3<tesj``IUqGrjbFe'rOCl+@n#lUl#4qbf*Ri.0qBR?K>A`H]BD%gXNEtH&Fek2#r_8&6#k;3':'bT?R/sY^in.Nm??WD
%dluPm/fZOF>H+&@<cdL`?,V@EM;T'nGG]kMHq2GF/m9,*?&3iLkX&[ghWXBUYWnYb3YBWL)i+kURR%qMdFtu(<slBV`FH1#\d]Is
%2iI"[H-a`M2.E",lHEjk$lBAATFZ>9`CmV18DLd[:'gk!S.1^F1Te\hT7Jp5O.)=>VI!!ae'u5GpNPMUl+*26qaPMm\5P^XW-Wq>
%=NMKi7TK+%k(Em*9$p[X_<Kf-YR-rb*YY[K(e^%I<\R\Y(53RaS>1]!$gY4&!Ce<,Wt]$uRoTt(OiV)#e"t@Ycld%dX-.73QO(:(
%>>%B>D.s;J<<Jn&b&[ZahY$S+cq'o,-+<G'#P+;"f=ci,O_9p[&eEOoW.IJgcViPd'L`JZb%l#]Q9[Umlh9+#hk7=PKtjr"`Y,ZV
%EGmg5>aP[]>pn$ZA.LTA$:n7<Rm`jXe.hS&enF&:gd7RadK%f?c$-k7-T4kbZ0ZCpehD`b^i*CQJm*Q@8jWZWr#j<#"J$&Eir!$M
%<MSKbkEq9]jJXM1"eqD\5kh9N<cQ,:ZE&TAWpa36?P6hTjiuhed'+Tq=0("*Sn:K=BW?koQmO>9Mlh(3_=)U(]uu))XJbHZhP,tG
%X'<V8l^MNg[]?Bo=A)QA<)`0-Hu_JGF^b"FU@bIXVX$bb#Y.PX?"f3tj(RIRA#sf]HZ2?0e&Vf':m1,WqB4MqCiSE7@tRWT9hgX2
%Wt3H.r3!@JGCIHNZV=@dou4+Ph,S<lA[>!CUeaH@>\0l+BSo51o(DZ(<+qu1f$+^Jc)'\M,n>5;)m$;!/mC@$,Jpu8RYD'?63URU
%b$K8kXu+8u]DL=Fn(+Mf%)%6-S:DldF7d?"(0B>*a7QI]F'-=HbRUROED4t<#LtE*L-#jK#+7%?<6ER7Z'D9=>]R&JBYO]9.AA4@
%Uep\]ePq0&T6TErOQ8`,)fVKqNC>:mRUnVl;T0qdI98_gF)^%cXBFTV0U?AYO\3hAQ'>Qsp3sWMZ?0,cV7s0(7H.E]/S)(dX#WGW
%*%(a6;lX5u)=J(,_nI2H,rnb$W,$7m`NAG<CnO$"\dB``XiS#fK4>C'jajQ%8HfirDp_tgUQV6J%2.?]&-p?)J'q.CaBi@p>ThT_
%K$h/PR.OA+h<=<5js.=;K@).#dT&tb:pm0:Z>u2N6LKWr)WG"!=iIBa;]FL#CS-"QJk\hhEgcc'bAO8fJ-MmBAGl_%:g,2q+gu^_
%Y(\\OU813ns6;5r&7ImP#GY*)bI#&d8O_2*'.LkrDY3X_1K'BT$>T,#@XCuSX(f_&D4kYjhj/"*Gc_o9/=<oDh,HCJ/2C`:>>0tZ
%3#TLDeIqam"U#:I,QrGTo7[#uJI4&IYQ>Br9C'ab+ZrF1"!#jq(1)e@DObc`)$Bk7q(Ybs3BGR07Gd7q?03A.*c#.1:IR,"<5^4k
%-pfq,S^_Hr+TZqU*p^P[_TG9cdr`5o4+Q^tVW/D;M7&YER_d0#k_m7Wm7W*hUlSA!k*RBbTapYr@FZJs[tgo.3iFP8j,":;GgmAd
%B8+,[*W>T-pA"ObqXqW%`?5-EYC?NB:VZqM5Q'Z)s8)6ReForXIK$jnq5]:#p[IdhqN&DdFo(c<55b;5TE!nhf&bNDlLA6\o&9W2
%\pr$j:(MaOj_4G.hpc$5ocJY[r0r37h&d^\UZ%QSqto:N5tsT@MtOpd)dd7UZg7Y_^WJd4s81.Aiog@;+91;,?[qgjhu'\8rT1rg
%+$S^:cStd42dIJR_*<DA0>,7Wr[33q-iUBj/,\[>q7$AXrq[_3m9^pcjl(,"rp,&<*e+!mnK7dhO,(MG&r0r&fC=B`g&kQhLs6RV
%JcXgfc)Sq2!>?].M>Fm_9R:?fPn2n<0u0A*L+;8bOJ3F7(scE<_!EA+l(B@2<<jhE%5LrM[Y1aL0!l]V*W3BqQDu1g-7*#cWjVEK
%8JifVc5YR[p\s`u1J7Z(0E5C6o&kMsLHk_!oln0!q"m;Tk-r,*h&lX\@9`a%6"r90R6h?]#;J[dZDW/!I6HTYa!5!FaBGhZO7Q^`
%,3iMGV3t])C.=8RIefn=`Qoh11X*bOI/(2NcThBupODu8LS+V;QbRcjq<-B0nrNhC)m4TN.>iDeKEql%Gr\DA`%\$iUXG<B$KBT'
%*E<h^CCHsX*sS(]>;_Kn>>e06BRt`//BJVT14(&gQAfhUidbE0Jm#pYlFIZd:rIlf]PT,<,)iN/5gc'JZ)d=Ap)Y^5;EiujGL_f,
%lb7i/#<dQ4"V9a66Zk.2i^\CAYM"SpLG<[769+,Q44/NtKCHW>EtaFH5BHiBB@supB=/`6cu:UVdg4gO8E#UUaYXi)74WGCqTYYe
%ZHBd".gsY";(lN<*+PQH1R.jfpj?s1_&W9ZEV5nlM[</MDJ(k;GS#d"%?"6__L5lo+6PU$J-O.C.DOKa,1=C\o:6Gao\6\?>695N
%<7*Z71FC%t\Xu7&2Qo9>Jn>BL9(/4=_JFUKe(@p07O+R=_Ae!!nT9-'JKT9fR&g@;H(V`1F/F/YDCgt_;.u#^@5"TqA<I]=M./-F
%#Yh6`!_>S72#A+_(%ph2IL$[LU"HmaA%;<7XCtV*>2nS]NGaCQT/cH6\P[=2[-M$i>Wea>3K=N]7HL<X3S[^MnbUD65)T#,^I]S%
%hV)WTq5jFpI-HsaH?(7J,>ad8ML#1UK]%@<#ec2hCjA$jPM,`n6]"MmQ+,ZHG2qi\A+#j+*F1nE:Kdkj4_lpC^.%]VkT)?n1!@gW
%^qNDjoWhf3.!iY8b`D8aAcXf"]:[t3eQ\$rDg4)[hiPpTi2uSi/i_5Ce*.h2\1;6AI)BNm(6<B)KLCt,kARkH@AP%&&5]$?mDkS+
%^(XQ+r!cM]PHrW+O)Qp^5$-GQe]E<@nT&sh-1k*m27<LTbf5=L-(<ih%?od?AUF"XC$_kLRGT\)gUj#jiMGZ.%53^=rUSGTq^'SG
%Mj;>r?d^-OqJ!^?Xf)G9m[(;J'QEK,FND8VbC3$l>AT#I/e^)+WF'hHb@mGibKIDeG.(?0Bk'9>ea:B*`cun2GE&1@a)6/rV.6ts
%B&%[@A7GBXR(K2n<dI!tQ:h[^lF^>9-0W"/]B-;$Nns9SEnW+K:<I3P-i`>tHrT9lVN0L#d+N1k<d&ej0=2"+dJ:jg6)H6_6DY+0
%2%WV_i5r0f&.N%S'4K,hqur[]EXSD<U^e>"@((#]"hpo3Nlt7,_A_2T,WRab"EB@N(QkD.oo3/u_dGU"J2Gk<o33n)NO+H.A.3,Z
%1^5lsT\aM_LeU`0s6N2YfBJJ-<poW(ZF[9.+#Gg+eV8=PhEospdOHn0WYr>hU&ned5ba:gWkc<S-&/H+(4Ne&/bnC$7-"]cXC69j
%_;q=XA.SB)N+&SZ<[B*_@4>cI+$-eTebeUFfiG^2>4eWK!?Q$!N%.'UENZ?,VVW">-q.`)cJo.04D:^LR*&F)U[+a&^9!1T0:,Of
%V(bp9.f+rm2=RY<#^)n_d3<fneF)nL5ha%)E,(6Oqf6IAHcE6"J+_qg'%8?$FL/U9/re1p%),NCrJd4fnA,oT$IH9OE\k5grTLJ'
%_cH+Y'jQ*p3p=m&BY01.OMHeR8d[kEK^%rn17P["(N]4]<JXi'^b+j?juU9+AT^n(&CbEp(981RTd/^ZpnisWO1[6h:dufXFfRgS
%fAlPpB)>[eW2*q","^=7n:P>YN[a+G\6KkM'MVU"H*^B*+k[^bk(Zfu3H287l/i!JkF1@f;;a=a&a0o9:Q&di>YI3PVPlYS[WNIO
%5PNMJ4'K/!VcXk(bD7QM$H*X2)>55ABiU=kE?kM64RA<6;3A5=+K=5Zo']Jag:X)=[V@^cgj?h2.@=bDq6e_1N?(?1qQUY=WR5p0
%rFVcP8duhgaOXkbc<Ca-DqfQ<fd9]"89DQ>-3EjG%i5ZJ`?2s03+N`oE23s[H^*$c/miQ*m[0@4B;O=4K^5+G/Uiad[n;>Q;&"X6
%1KY9CU?b+$VMC"(CA]EcLu;4<$ladbE9Ih-Q5AZ@I7/RaXRk8m&gGEucQOA6-lTm@`ONGCI^[1&7:UP=nCb/'pAOBu\31a9]D/6X
%)bdA'oU[fNUtR;o00E#-/0k9Q)Ciqm=Ba8a@2ja>#P1!GdNX#l`Y)<FTs-sqQKF/9?b:Pr$X57kHhtP/2_*u+U?aNmO%/Y\2k00#
%`ZS./o0Za;7"DWIY>mJ6Hos",>uHe<>1P7dcXcejIGE&<QjdSbNgHJW13jnVg>a*X'P:Dsep'5Z?=K_:b?sFDfblk7M-<S:OlnFQ
%[-r=UM4K]eb8/V<NfcsZhZJ-&RgDi0!q9pKE1&sBm-G&8p!NnRD!dVJS!NSZ$>ism8Tr!>f"uOcQPOJ`'"^-io38^1R6!KCY:B%0
%m)8MJ'9.[5/\7"U?;IKBi6@[mNlnBS'*YM)(U:pJ6N#MIm)84r;(`S^(R&VTe*tj"E(A`/1bK;$`SNRq9TrE0KYtWjVg9gZM7KQ>
%1a2H+3?Pu*[M<q'M.rZL=MfqSSM"[n+4_g+>:Yh)MeZ@K3Q>!3DTuU>5V,&7f`UEm+0MNZNDn5)HJp\r0u(:\7Y#D@-(l@NoOcIc
%i$79Y3pIIWT;&$(.uQ!c(=W`MhW1PToCd%b\7uRHe^'PJO9P&lUDg8J]__Genl/n^XjpkhJo1u15[LifIQrDuOfc=(@"$(@EG=`N
%*jUIh)Q"r9M"KKAA2$eDh&)UJbSg<7]5je/_m[VdX&r)hlP9m(`DqG"QOg=3UegJ7gG)A;0FPqA!:'kuo?6q;0aDpkkblFn0GT1P
%;`R')@*'um*jSl.80CGrHODpZBT-NJ3)M"KIp5^OfeU=EjOT?lP4R=e&koF1eMW!i/8"A@K8Yj$g9Do+Y=d4YCL^@9l-U-KOgm,:
%I#<f\TAR"UMf@$0A6bn)_hHLq8oop=atGAo90J5HD;BJ,!g$_27O*cW@eQTje7LOlde[rd$b^HJW[&B3Y,:Q%:AMoJgt(g]P2S5#
%779!gk1!:6_AN#A-4+1"Ge?`u%!#8@]_^&mEMmq3KRITDGDdV8*IJCH<i2Uq,=Z?Q/4q7BGL+HDqbc>:%:#0J+enC^lPC?hANBY/
%oWH;Y1f5=/9EAj$S+tKK`2*UVXkbd5I_3D03C^knr(G5PU;&NCO6Q8*[[@)0&UB*V16N`F.4]\.4DI[`@H(?tQW/uAqXqI]OekQB
%M`HP8!i.gU,mqt/d;:[27+o6^W@]C.73k7Jld6>(mT&5lj"g>i(71GNUFgq8L)Kk7.VMe*bgD?'YKP_^Nj#>//aF!<>J*&4\4/%g
%@q1#^e%Ds+Be%>X@OQ'*WbqfkWlRI_]X[O=/T!^ZFmS*eTRuiB_oL@@&Wn?9OtBf\K.;l^3MX7kMd;i4=!uA<`MC'B7juG^:]ju]
%^YNuGcT\[--,e[V="^Lr>sT#5]30Jkp6pK;0/GDBG4,S>>34Jl&$aK-.AuP>dk6=Z]q=:ARd@D+RPfudFCZCDS$^N%^1c8l&uMKY
%3nRgU!hKgXf^jkc@mA6L:W8Kcb>h2LDD?_Y=I3?A[cfWlN6?[ab_:I->8dh"@slHpJ-\TKYHh8fp@V-i2anW,,*t":DDji''S3@/
%m5Gu@fHD77VK#hQqTK2Q3>O!KJ>sVmQKNN=QF=>W]injQ;>-PO(#!n3:`UUY>.@F?DQt/!AYf?!/9Bfa<"+JkK3@Q.2N;4LbZJ?.
%c,$;0MX<nr.26I'C>2o/dhc*;8G<!qI!4Q?q'9u18ic:1U6dHDC$UXi8X!lEk5/4e7Mn`SK&OnrD2e<?qsq)T`?W&1`U&W.[R_IN
%fR-bs=emM)5kP/R@\49I)t@GE=JQ$#O'N1EBf\QtX50A6l2Z-hU.f>GeGMUu+Kdb/f]DjJguucLoMIb`CO`(@UFKMS'a#;L]:1QC
%OIsKC!5XnjP!S8lA[=SNI,QQZ<ss1.ZjNfu!FZCp_9U,Q@NBFD3("u<N-<aW/VX6D7*B7^(:B3Gp2Xs=]a^#=76,G"SDg[7`b%iQ
%kAqSTLPQWOk=bKF+j^q]#kMbJO_kjl!kr<LU[3LG/]O>':'/hK,na4P+4lL>=cj#jAMmh-*'*Mpn9%aB;n#ECbH0m+gRF]Ij^ph*
%re\Y)?&e^i6-WcYH_^^f'6$(:g8joq6ici<68cU<jBn3$m7Q%PKohjT[jAe#f=AXa4e@Np)+SAB>[AD>\@B"#/b)9h5.=B>"6f4L
%9qr.<2(Zkc`sP<>/M2[u4JTK61E59*OC5d!B%Ek.3%9d/-Y7_80SW&lF[qT_*`W*=+XK*6NGb?MAMh&ELr2]O(D1]Aqo.:$I%"!P
%6oBT$8qgXCD",\/X%u[h+)]>=c[./#>jmeNoT`8''kZ09<(V&f?krR:^:;1hW^S1!0E.5b=.X7!?Q^SlhWAE9``(&m%a.rg8#%T!
%096H#R+!_Vf%CM.;7tP!_R7S1Zbfeo!7!dR(>VMP73M!XZK0H"e"`dIp?!1SFLf':C)WSjbF_rjI68F/To^5AcGMNWSo7(ukN747
%r+rb'kl\X!Nc-K[lDbiG4rYN/`fkgZZJ=2OkEFi6q.A[?j>\%gPG=r[g)hXH.UR3[cR)0*EuUVr#D-h'ISX1"i.8a4B9T(o0u;s$
%9%qJ1i5"e)./V$B(q-8c%h<pg%MHYiVS1Ahm-/>)1oS6:IVWl/,>CDi%4TG:qoR\;0IlGLg"miFm)u9>dEkSOB7iRY+\Jc+$kC\p
%$G9[t4"RaQE"F.K=OU\sTTdq/aC9Lkp5/g:p')s-e^9uUN@KA-G-X&g>4gF6p;YL#[Ps5doA$=<522]E4PLgnTB2^cp'*8:ZKIFb
%;.h<9Ci>E.OflW2DlD/`"VB/>5h'[MBu8!KW&"^)fGgj)P_Cp\%7R%F$pWDa=6o:F]n';(T(?05j(LR.)b8XkDiiLQ"1D]dUJp-`
%f=1HC?d,]nYr>LbBOsE])h!\IpTqOVNSJV22oI4h1(I]:E[L-hD-RuTL'?m5'm$i':Y(7m+\r<$$OuEN1,cSY0/sgggCZlF`Wk$f
%?sm.WE)$eAHF>`QC$g=3=W;VAq.+9Z^Rm':BK=fbZRMu7D&u$!Q,21[,0%aIi/P*o%P*0LY9n?".q>&1qq9,bPH";7R@ue_12RDN
%.'?M1(GfQjE5pq422p\8bW*>Yfut!kX66s(#,RGT8T2k4X6CU9`\o%nB/=&`mnY[Bi*G91H.#8rUZJri@Y^pKi6?Obp'D-ecIPY3
%km0I3qP:hfC7aRS?T]A*QPZ."_=@)OrG_E!Ch@Ko44\enCkfVVO(.EHl.n#<q/Ua8<^b62QTqr!ICqD^U!TQ*!$&nq0+&#)*n@A1
%=*,AY7YP57J"ZPnnZA3F_*BY#P<64Z9-`1EnlF'hbu<<CqaM%16sK^6GKDtr0r`Y1Wk`p9H$T(2`[1u1CM3^i#mFA"KN"k#PZskJ
%\(-<CQkr'^hs:RU&O+JS'/SoM>.sk.fV40GQc2QebA-HH0:Gg42B>cP(QEu^TZ%-aZCNjUq+-0Qlm.akduDjTKG1\)2XCMU-RL:-
%)+6Sb3lt.4_%!q&SKj'7>b9tkoEa811omU:E&B"TPB?=I/WnP1ERfja.64RTFf'dp&MXPf<$<^!'8_mUeMjAP>R%sJ8:lfZ>u$1Z
%Q-.g`\mQA4nl4?,O37fU/F+a4\f[57BTD;r".p_#Zj.M><WiPVb+d#dKZoo;\o/YTa(7dl*l]&PI]>dbNp95k8c-Y`SBT"9F!FiY
%82)-0TA0'")NBVoWG1<==%=$+XXZaja+R<@$8ZFh7ftH(/@ho!2Mb*DLphJ`p6A9DXI"c!<L[)_7Dq\S'FYiE9EVBF1])"?Ea6JA
%(B(4*E>?/nSPhPW/1*B8)r2q0lKjC1$XYfsU:DCI84,_V9"W%VG*.Rl%oFtH'a_HidA30"1;&6&G-cTDr5UWI#d,l*S'nmPl\UD*
%mnm^Cq;AIh/_+@PS5cX[E9cPo7CqI+&fR9[@l3?+1.OOV.'1c[<h32r*)k$@br<',%(<2f421$DcA<fkUR-#T=*5aFb^2N\7[82l
%AYDR1R2]><JD7*r3:G-OBc#A6Ppc\.:$FGU?Ym0hB,'@iFBK)5+da^[AQiV2lJZN=M3C;NR6GMX02p<N\1PtAGp8dTG^Z6t[@aLm
%Fjf=QM7Hi%\P.G8k+ZF$]e@"6#9lN*aoNQ)5-jqbq(6V0iXTK[1l50bAcu&$UJX[-BdqV<ji0r'1Dts)-7&!,_ui5A"K![:78af7
%)df\G/\&A3.$P3H51aY@M[U5$"bF(h1o&WYDV#S_h(UL+8MHWQBj0.i88b=2hhrdeQ%2(<ihsd('OB7rptTd,HcVSu7LD1^[`oj]
%:0$DQ-/=Cb93*pK85H\8WN-#!K/R#S9?RX6IVC?AZp2<>>g/n8kND-gO;&S5neFjhI).>^BJSkc=`[E9VUDcBd-aQI:JgZ+&=m4f
%VoB+ESD$F5h;:+k6gft(Zn4]1S-)D0<Gg"QCdA;Sk2\tSYH!tUq6<JCFS%'F7gm^UnUd$n++:GT,pKM2o5Cs:.jEP;6aOX)guc%_
%O]EC5Qtt1Q0kCNZ&R)\jE,'&VZh'/0Oekac=:)RK>i9@jSl1bC1PB@[euF,*?F;*j:XD!DQ01;h6aIT%)(c>e=q9W+'W8(,=tH^S
%b@9Eg[A`NsJbu`[>$`c+XVGie9G)]deh2sa[T0@XTNN4D?&g#65U-H90c\-#2:h)X"_R;Fn'qs[ct:Gtl#SpRd\V(KruHjMm?eG/
%c#h3!eM!`>H;KpQgB?7^+aHF2H#JZcZUX4e&l!@n;Ar,ca=n1SV'Ujo3g#cPpgXW66j,62Do[N9@mbYD6+pu>RP>nQ\R,)fD2C*X
%<;6/o*^B%Cd[-R]EO/*)C-gX"\STj2o6`$t(nW\[RG3Z<;C;JY0"q$!C3DN3W$+..>\XO>N?ZX6\d[F!c3Nj9<S26frg>g.c+9eY
%(eA#Aef]\0prR'Zq*MKC6*IUTHIr:JU[:e`pF5)1&p39JR6b8ike8@QR?#J]*#[/Qp=80faa-M)cbsG-)<n.\#09.q=U<6W.mhU%
%q6iR4qf;#G5$o\O)f/`MKs:ru^1k5rXDL+;ds>naB-o*VfFT!D"B(P_*s"fGTKmh2,;&G:#,!7:Rg^l^VM5Wu`WTF'l#52nO[I0L
%]nc1R\ZNab@EsPrr"P.DJOt;W*WdoOFt!.Jm"\#8V^;n&1C=/j7glrS=t*XN!g9<j8d^$1R\A=ZDHfGIRNhjQ4r!rpLJ3V<$)%\*
%rojEp1nK`(]`]S(mDdUPLQnntGVY5#irG7@Z3kcB1dj690o(#aD'j]JA_\2LS0FYAS1Gas;*"?I7A?f%UDli?9$h#n((N2g1_t6M
%'<`X#qNu%ppnN;\QDOtrL>u0hAWYE/U,'IdA@+p`WPre]"^bHSGqP]UD]2XPg=Bt&B@2Ua+rAc-:7J@.)GM99_fTgq(p+Ceanp<L
%K9E-$*UZ=/2i5<EPH89CdoA9*e5S"cK2:d]7mAlNp\fkObOFn&D/"l7T40dH`_/l!dPaJ@Zrl4(L88%2OOcE;9qu*o7nB'aT:n%d
%h=CS9fU#iE%O48C0KuiGh2g1h+68-Y.fZ]iLr]^^?e!<%.YLS1H`iJHJ/(f,!!e;4D:0H@)8dXVBJ8emFd-9u%c@qG]5k43?f3Y2
%GOd&^p_M4<YBc)T*LX=@KcHk0-hh<c*q0ZjPEr[P)ZNl5q-]ESj:tk7!tL!8J_MZ&OCOV@=KkI(:pt'<<;O(@)MiL?@%5`6V;MC;
%\$$i8i'<ZL'lDF`oLRSRJHIU*8S2TDSe^SH[V9,)'(&/eS!AR5r(Khh9`l*=>d-qHPR5i'5.9_5lWWVgk:OLigN7),:(8gp+KC1[
%k#"7&=&62t@O7MBA]@cRG4sJrZ2lt/gBU:@DKqD6JAW=eV)Wji)3iIf]@$HH1"`?b301"+Sn>23?&qJn"o7bL^0]*?J_[`Bq!eAF
%IGEa%MW2,'*\Ii<IZCEs=ba`t%nBcBJj/AfBq+N%RUu-tkLp-66J+HYX32)/"60aQ&C3a0Cqo?gLfhOCn<n.N.(`WJRTD4bG<\/F
%?etE2m@7iBf27mMQ>D!V6WC^*)uqc$g@#Ho3hSN.bEa9g/7cE?p-6!h%N)'(<&p_P6/aoGRS!sAgrccJVbdACQAj7+2nFss[2I@u
%7gD"N3&QFbH_!XbLLUB*At=fY2g6"thHjKoE.gFq>$m>&aa;8'!g=ocY@_K)r*`OZ.$H\'SD:12l7<"adso6a)c=Fq>RrMf,5:+J
%K#9_"5jWYL]aKX:0Mh6\0WF\@D('g5`f9<Hj*1Y<8)uYtk'g:!b%mRNTkhLuT]u[bj#)%rE2-h`bn"!7!/>9L,m[,$Qg$1EF]^+e
%LMTKK78Fi]om1P;C`F?<j2*9EjtXj`+Qf_'g7&kbD&NmLVQ_g.r#0Cj1+,.=j<39G#OHX9gX;Ybo`382hu1or5Dc#o7k,9jP50^e
%3`Y!4]\&dpQ#$bBpGW3,<uACHIqMq>G9=1c+CsTiQWWeS/`ER:8`eGhU\6pQb@h^JSt(&Q'j+AVa$j(9;A:/gh62J!6bn>kYhU''
%n`4$[;;S,u&j1\CN;c'fSW6@bZ9V)?\T[g]LEBW^NQ?]u,m279ddT<]>EOJ*d..eL1(dN;3Z*.G@SXrK;D`pN"0rO<0Iu!.1b6::
%1FeM$,!)3tfTO?MaDSU@pbGns,Br7%NoP@.=J\@`!F@N?'$PN8@Gc]h[L]RE$XYGs[!,L&25_;kJWCt^Js=PcE87/<[8%H`BCE92
%JtK->dZ?q/\&qa*Mb[REA5rIUp:af!FdH7DL8B%bL:HoZo19V@C="1G#7iHhf?]lWNT1b>6e7[>]5Wg$N_&&!mg!Z0<rM=b6:t%"
%g5n"U`,#pZcE,Pl4+obVp!%Flc]6ll(G$Gd>_u9_V#dpF?//jaaVMIB!Y6<.6mBi\Eg?5cDCNLaq_d3r2YYk6hMZgJ.gV2$CS0No
%R52ujR`hG%5lQesh>>461'"?8&D%XT7;(V22?gGAY];];%e+[82)S.0EW'N+l1DeG+:Ea9G/`M!Gq-\&V0VqdZDEZB,NF!^jEhFE
%2opkKf&6_bW<n4tloN'-[5!i@a>>rY*<Vn\_HB6sN'=Z[EDII!@V1<R56nQppj"sgSu:PW>gE^ci;l;f_LP9QVgAQU/u+M^_5tl2
%:WPkX.7n^D'=-!$Z`H+j$X(".2X+?cNR4#.ZmT8?mYAEq]SS]U4CI,3Jo'VBJ;(]H1ENgJ(\ub(\R>P[+r15n&IUil^?Z@=Gdo<F
%+^tK07Cn6pZ%,Ut8+;O@5ker^N$/QG.ijNkA:_&f-$tCu$kNa:E;,HJJ=M^T"+&&*!'SX$?mB2j>UCl>O9J<%F\e'#kfZQYpCY$K
%E?3)`GZEY$]@f)J>JpSuYaY%+,8L9J@&Sm852@+@Ta3n_>:;ljFEjj/qsJ'68bRrD+A=YO+UahL$#BMfL+F;uKI<:^It/FJO'1\*
%PaH%lJqAT>TgCU[AcXE7WF.f"!FnUmY8rVL8I%-P'13P>463;$Xiu((@hsU94s+5L0U4PX(:/NCS(9"N8di^s=ZE(p/FZMAeK2&I
%2k!n9`%5l0ctr#&$g<[1V8k-[e%.h4bQ7u"lY.-@J3fG]k:m@7hO5K/$^`ht*B[j5M![D7=U<(T=U:[S/-+)BiZS^-KOq5A0(7gc
%\bsaJjU]hoCK-DI2SB>!)>n*:U!mhFHeUn'0W(#S6HI#OEcT;MA:`o[Nr]T#_Eu>\+O0bOcXrr;F[?joXLuOtA771C`V<jYZ2hi.
%i`X@>\Ih.MIpXVe_YN,>`r2)u*g/CU&e$e,YbY/^;.+X*a"*@K'#N97/Y?l94k!%0lj4P4<")2=dRB^k;/.,1!(9s`0!d<<[o\ZA
%28e^$?2!$<0Dd>+8s$+e7LJL/\Mu`'+>,`@$A(m+'QN-@Ot>Q0.)!rW']>4kLQKmiP]pW^4$X3JkALqt0_n,@b^pE;q1MGn9LrHC
%R3b0NG3qM:E/?91?UCp9"A4!qWT^LjkYfRkG'S[\.^L:V7%7kPIhD-?.!]l$k+p6mDIe,r@M)6PHP?Zo!*V^t1;&0gmNmQ1"cka&
%=@<EA\^C>aL8*ZL8i#<N"6].__.;.TU_J`*W9N1:ei0X'.b5Q>*coUC[aJK6=?r9?NZ7hD?)rN5-)3X+l;_o>dSPg@5iF!1]$djH
%(GiFj-uO+/.7^X2PobnkRU?36k:5mKZ&Z!Bn<bB<]r&^nj8WM@P4XLXSaVR.J8jr?:5W`:`IXr_:2;%GcckS%lFBo*]3at],[X,L
%QSl)dAXd*Fcs%g]D<Uk>]JQ'saJpZASc];aqoboV0p%;\p-?60X)&KBIgc'H$\VD#qCSSM"HS1`<?['7e(UN+Jq^#+:Pjc'pE'L%
%Q3n)R^313,XS9F6UkitTN83N_5TZW;R\G.3.M2d;JH?6EO!u($2p:rm8s:RPFHNqr)8i44LRD;9bD(^Zc4K!&<''#n^0eqW`H@^p
%9J]NEEC^>AW<>&t^+Q1A8Q`T\'$5snd!;,drB;*m,pbDl:/H8?IEQH:FYJ*S1)uT*PlO3,-WbW=H@YeFA3%N#+`?Z.gU2VORNC\?
%oPo<*q$;nWnjnIY=^=Dm%;pn#AX/OdT,Pk8HNS$c*mZ]$jWmaAQX![7lUaA:?rl=LXAN@lrtXCkM8V]%`Ye<"g(iM+OU!+"'%pAT
%@K4,5dsSluc3d$O@"(/Z=VIMNa01%Zb8kXG+"3;&8J>/XO::DAIUA!=Ip%^5/%!32b0pH(Mg18u36?tn]X9\tkaW,0>&EotJYFbu
%2&9?U%l0CMB,=QZ]NRu<J/Z;)n;/FNfSFZF<"Z#K,*>F$MKdE2P@88V;o^3O&fg/1!mKpM]HVkobJc2)^fZ9Jrj:8ue9B0`lX#I8
%8GF\p!E:j,c7B*8]7+PQ,<nF'[l>QW/`UP$\C4F?T#`H0J1qR<m?U)FYXFaeQ]TLAT8F4HjM#Wh#.1C6=(VdV=#)9pVSm>Po"Q.?
%ed!]E3Ad8G.>c)"-gbIN^0cmGReZN0GU+m$R#?S9d#1J*6I-;brHWhZo0CO;ZR0ofTg0/q/4,^9d+k0\(h_(so0J%mGk<^A#K>Oe
%))$GF2_pFY:orEQN'KR8[e_qOAOce/',P^lr^+L9=QqF;NQ*V5:\Y#tnrZ(4(6?9uTG_!$=Ac@Q+;I<)rG4b'5]=Wf,X%UHo$3@"
%7))AAGMJK"bd!BI6Ymqi?-/V^ifM_:9ENIg],0oQs19<p&/Lod`6oYC)WeKe9C>GZa4qOd8"[[)M%6?P5C/=7-,^^/&5rdt`Xs$B
%b8PbGOo(eL4]BL(/8Ko-3jW0oNda.=99\o=I"J%VYKo(oD1\UaI]@Annm]Jh@lk_gY,_'r7t4j;qqR2SL_mO(HuVDKI]E'H8\e3A
%6/>0A&A@JX?qBB^=L_]3A+i`)J8JR=Et=Ll!@1]9hP9T&(C4Sdg:]G)>nZo*-(4.0/bd+c)VsgYM!?9(-(4r6*JtSsf]r#O0RP)\
%%!]:#ANT5TYB"KSpGOI+-!5c7is]r\VKS[!PuOO[C--ehTOGW%X"AML5L;C4!C_)Apc;8pDA;sjQ8pR(YYW/a)7_CMer`plj,>]]
%iQ80EY]#'\(FI=qlqX/L_m<T22U6M&kdDdthrPgA$o8aS`R_NkVUbW;8kIFjTO/Ki5:*A1A:f?Oe\.,D*r\LdRQjSm8!DIR,<@A1
%HV6fcWNS@H=DMr_cR/)unuW5?jA%e]\nYaF=eHr?U(Z/ofgKt,/XJ-''a1+7CNpKQ*R]b`(S]!C<"3c#iXA9#Q>0V-#WnjU>ropN
%+>^]InrH_B'MB7udf2NHX\]r,7TCeQV(\]VPWZmM5V4<eSW%1V`4UES[48[i8</?b/$$V.L1%7L7Ka]-K[aK\k%7#+=?hZ7]m)&A
%_'N2%d5aCo\E&Rr@dF3ganJo/^4me$eq>L=h@,6G`TFZ]0FgEmX8Y`'2+3$ZrS&gV(#pZL&+5qa!JRZt'Oq49$m%pnYXT*(1LDXg
%)of]Fn76"CVAWi>DParKCerXN=oAgU[HFaX;T3n+\T@Rb'Eq4"j<1O@">le:M(#mdl"&lBYS#O0<FdBYFBuek1k]+',Yn2*Z%An(
%GO[JQY-8XJb8<a=Jb+;O<Br&OHBCK.S0)5aKYM=m%rn$IUC[j[R`:N^I-D"'XM,0!^18rZI5k'iCd><V:QfGLNt33&?dnTj`e2OL
%gD17MpHc^-.*D<Cs$R`2X;D)ed[PoC@_.g]r,u$8O28_PWf0=/*-)ZKJu9cM#.W#SQ?B,?eKJ6lh]hSL']rA.i*Sgi+7MZGjP_.5
%2Y[K!R!Mh1"i<qW%Xj8:J!ch:)q'd[^EqQ)*1<OGJFCO'`=qt>4FE['+:oO$47=2lH0Wj\S2Vommq%X`6\7To4\1tj44.V]h7-+H
%*>F_)OqB&$1guNR!)]G,qkoI;5pESmZF_,(@?Fq&K4rs!ibf'i@T,_<9.BB@Kqhuf:cMf"*g9'0L.Wf1<b"Tf:f&d&aUF)F-DtII
%7`BtI.2Z5RU_;Y)TY*uaDFlY1ikI;]<k>$:42"fPpchTRn%"<nSLfNNi*^%?&UB^&?FEK>,>ak6^PoFF\KTZYH^Oh6Xr/?$(9q8#
%L)lP`:"d(2i5NtVP]c/9h)ka<9`#e-HD9oSg_5M*$"pEom09_M6CMYO#Fr3rCQ6@",)dJnOIDGOBN@`?UL-@T0#D4PCdKmt&o:Ku
%)/4&`e1/M#6/UB0]h+dcLA(uNX(dXD9UP1;,U;(/]TP1"<rHD]^7-e`InCA+r's7`%T_#kg@-qb@g;$#Q%Wu%:[:AAd;*NaoU]&4
%'dZ3(s+du+AF5Ee&NK0P/utRrk-tr5V^Mb;/d#a"Q%b#/\4DdbRZ"BX>R>UpJ4r'%(;I;Q(HkoK(b=ks$*@[^(-N>\dX.)BM_DQ]
%5W:)_]WEAc9aYlBZ*t5%\&fId6c6k/!:r"pWl[P%k2#VI4TU5SDYur1lF6GC(3]p9d2Onikq_Baq?GoS,L<BX3=THdlLm.(L<6r0
%n2OIDj:ojV^7D^D<TBId-+>2tF]?@+G@lL>L242H!]jljjO9R+X>7mWngg-lZfuqs4tYHH,@Zje@V@5*9&96cq2g`l&cQnJ>B`/2
%N6R+,X>h`qDjquTWm9G0#2)h?8YIA=kYX.*I,'4FE'+u&`S!nErk.X&kD`%G:u*ZgZjCCW@`WN2iZs#H6*t&pj`Dae0[o`N71b]c
%j1<6/YQ;@OICtrSZZ=X.>Q`',U.;?mBTQVPR`jfD10(I]\H^qI>7'*cL$[TDB,>>O`Tt+L)J00b#,rpZb)pE?)Pigg.JT8TABrm,
%FnA/.?NuGlQ.;L%XV'?P@^6JY,=lu`82mpg&?GSBXmmN"U^j'^N-s3tY+e0oj?$'B4$"TNDY0kaU&uURF(lqBoE[<"BY@ScKnR0N
%k5oeGb2?0als4<.0:`ql[aGF^\glmQ.ub,J>s5,:NI'B#]a.4Thn-0U(S,7E+'?.C#F\N6p(?KQpQPk2+T+)FNKjgP21Qr2bq;.W
%B>cdUQ0ia<SZsrus"Yae3[:;,5'uOQ&W(SC;:i:odp+C2Y79c$pcd=$:+&^ON$GT-7aQs'1T5UU(*lG38):aJg?X!uF'/Nuo5X0'
%i[C]4#C9)?5tto9bHKLa)>.@Co-W06`R$`kiF%?EL@!?.Y=GrK5iGAsPbr,&59n.#N0n-*4=^_i<bqB=P/'5KSfVV:9ZkHfknMnZ
%?q`[lCpR;^TN`u%!@AF#`,+28'kmmb_Bpt.S:eg3!f?XJ]RE//9((<`6$Y'mOZ'4q#N!`NS<T#/94K5Acb%diR@tjEY+X=ue2IP,
%JS*EkRN2/^>1#*t%H3^q+3o:mVuO\l6>VT:"E$&>mjs"I.X5)3+,BeG<WNVM129^DRY0HE0%iG'7$T,li]kfb3Tg_;-k=O,U_4$t
%Oj@KfG#[Y/!eL4cT#`?`iV<Bf:Qk)fDmm(r!RF)/,IjE#[HuPW75,s4lf$o6KO:Pm='W7fr#Hq2*WI^W,ssKd5Xrb(b$hP-TQj4U
%1![Y\5hi_QYopgeXd9EBk-Y8)e>s2<(4M+OF,Gu=%@clJDJ.YGFN/qs%0(b6^l&/^Ce0AYpmbSbq]!7Wlr-etpAWS>KYEGYXH"#7
%Y2fptY&_(:^5U!Fgh(?NgA*YQauL[;'l!P!f_"Y9kan&R!SS.18ipJsq%^R^=@SXF1Uk+$X"A0+6Htr6&#$eYc1lYT?I%M1RKBH`
%i$AY'0SVB3SAQp_P/S)/X:1N7'8SOSA::,`M4,HLoO%\g3$c$uG2&Y@07+`D@^<!#H%gb_7'o7@NsmG(f#2K#jq0i-IY/d7.XcaC
%rXUi-npK%2BQsU,/).8j*q\u2Vn[uc]T0kL0VPdZq=(MLj<^]7;di)3H]]$4HgD4\^\g4Q%lB6drigT#rZ7oIIQqtMn[hP?_]\mr
%K9%`j<k\Cc'Gr):@C./2qZ@6VU2*;!`pU/PX=%KS8^QKI=?hr,2tY7qR/LqXT.!U-+_bmh"%p3c-mqD*SDXF$<>F;!nG!gUWg7fL
%^=S!G^)qb2JMU)d+[GDK<!EQ//bDiuTq^7kQI0Z)PO!kQA61B(aC4FD.4OuuOKqh'h52hh;!ck)1Q$Q-EQs;fJ^V^cY=u8nG0HTq
%,iuLD*fRCpT?gJD9[///s.%cC8DST[n)o9&lc:(1_kdrBn=!RU*!1"2^EaasN*%kfC7cO5KM/?-O[Ht3UC@'[2O*g%c.(QmJIDdo
%,W\SNfs^;',MM!_5UYqnC2SDh$0)"/O>.:Cm6M=q:G//La\D?fhZnI[[lSk,_tiGo>-I)+7LhSU91El4G*p_#;tfIS4k-3^KRk?i
%%2#n0Kb;&M+^59:=i+I)m.i"IN!M*.)$9Nk?]1lTT<f!U81I5jL$>d_$W3Q3X)eB/&YqfGJEt>Y@5kKQ^hJ!1N?t7:7>ubIlEMj5
%r3T=6qRnF,aD/Zc9V)*;=b/sRTt,q3THH>4![T_R51:tO@*[261I*j6%&o'mLM5VV4XjLG%,d&F5rt=shVj%deUM%&;%DbY_3Cdl
%?HuRqXcXp)8PmX:B1K<WT)D;q\"6!0M11?q*R#^P1F]Q(7ZU`pjY:e8d'r4=`3pF"U>!26:_%`1,)#kn)o-tN\1'g#,Rt/":WPPY
%4_KW6=/uf8<4P"S$RA,fMTA7(Zp%)0N<o>E$'A'S>BD)]4pRm4iD9T>O#AU)9&*;aJY\*EO?QeS2kltOa.&6Q&Mml`$4.K\4J4>@
%B+#rY2j]M:J-+hIkB'7V@sC%4T`]s*iH+6c;RuoId[CCkD\=q]Q?YZ>GrlT)YkFbASkR:YYaWfh`c,@FL^5D<>VYDbo_rO6N,_Y)
%+>V$"!cXPlGthpjE%i.W#aQ@0U1:>:1s\=\W.p.N9I2=%RYN/]:5ekF!W!QLOYZAl_dk#O*#LA%p?[Qj;`j'`G:kJZ==FO5m!9:4
%H*G-gW%a@h(;Kt&<=7Kc3hpdkR+h(^RYQ[+><WhLfnUHj`0?FUm/R\<Iq2ijUTc8Z_rma@MtgNDb!(!nQ5%J+-;ee4s,H_$A/A_1
%RG#\N4.V<2\P[O),D18uDTd/6.DlaKh`59JWMAt:+bL^I?BPOb1\2:-+Oq)NR!r^qSjcq]kUmJE=F^&gp\QdpSs^_S8EFiTrHk2'
%C^,`NYO.-hnNe-/j>O*?6>-jf*)aB86I/8"qDNdC&iieN#2p@H#*Oi59kf9R+g;[hQ]I7fp<<o&:!1CYnf2HXnNKP,"0.;\s#*&o
%jO*Fa7kNq.28kkUIW6+A,nKc.mH>^EQg>:ASggDtdB<'Qj?RSPb*0\KL,t1s`G.4.2^X4^1h82#c"&>=#OS6hgE:0b6uYI12j:*_
%)0#pVZRp*e,EZ:d-t&3fWVRKg>J=Tq"mG_e,Ds?4.?R4ob\9&YBGKZV9ap>[3PfX)P^nrl/k>W0V3h<"\f7rl?3]c^73%]7cgb8t
%@k$C30bn)Sctrt/X(a'hI'bHcFnu3!]>M`*T.%p9q/VT!<'!hId<>7,(bT.kp$DX-!4Bg:a+rYimB4bbd>FIT3Q<FkTBtrHa!]<?
%Xq),2H0BF<SI]AmZ#0;e_I(#\r2u[DY75g\RDNLIj[n5>li']Ej#W*$F]BM]p:Y,KIpRX(Z;Lmc7F`X8#+-en@*hiles(ru>"#FV
%."+7N@-Gr&F$F7DEE;.tGg$kBG-:A?6jKdI/INh8a>)*/1?LY:T)cF^F'9(kB<$%i.O/+MA"q]@W*(ZR4PLa"1/JX!.0d?H4T39<
%gU7>dAX0!ZF\oS;8i"?##Ye%F\&Q<^`bi-%QZVip<`qOT9qohijdo2bI2V"R]$<9hP;eM9A`SIQM;<:d1sSt=0LSng!CCe!1Z>r:
%$RQ1Y9,\h`:u-FiZbuirZ_VSSIdi[.#cDCCI/SSiMX.,5\s-nL_$AGnr&?`EHMk2p@/>2PT77@cdGg6t\14rJp'2L:&=BSGYCE>+
%$/Km$s$5T^o)!bu2VOP$a9;\$(tGS$U7(/#d\K7[#pX0]J`1MiOb`TO?m26]3)Eq?PgQi_iOHh!:ZS'm??*t3^@dQ#a3?.MTO>Nl
%W#<2=37!ea>f$1&bUd7I_<9q@2_:,Jfa459Qa+kkhR]EKq_8;kp(9bKU9LlH@EXe!_HSG@MH05.5#CV%7U_mAi\P1h#m,-%C^bQ@
%ph+:,F97o!NTla0;&g>g#'"_3G)@u/Q^L'In-dhNr4,d$$MY4"P+j)p<K+p%^ENrA6+?DY#]"[?C/NdTfAe.]rk,r?_e-EC]^oJ5
%NH^':i$Recn`eu`",-H^7/_=YDW&jq1\K$WXc>XdKarf7FiM]3*fr7PN>uj9gqfVlB7=0A7VILj?c[0_(I?Et,@$2J/i$Ak?XWYj
%oCI/;jr5T\@qVHF4BjRMBhXe1=,'9G%n/;fb8P?'UIhbP)B'>*6.'0RV?$0L-<0JO=]a<nk,0f-_T)TtUp-!-Vsp9l%g;a.fLue]
%Z?F_lJDn)EC'Lj#>FbfH3_>VF.j-7s&6l"+f[b'"(_^UVU6$[`hgL821XL#mRgcTJM9WV&V_jALcE^dj(OW;mYcGoi4_D);'n#,j
%Nc-HM(W]R;4./We>H:@F%-4I.GTB*5/j&ti3"_WK7c'$\aYj'=%tJIu(abYPE,7CKlD-r]OO?)<o]7;r5]G1b3NWD96s2Z9<>BT!
%Jf8,:M;(KVQmA=dXh$=.,>9`I3md?SH80Mn1eQ!Si?SEH'lT\RPll8+K(/AQ')[3UFsm7Yf>i.BV_Lfd4LXe]_d5Dh%k#3^B0K)m
%EnQQ&.D@X5U`mXZ+Ccli$;ETU-B,TK2,C=,N1`gK=0bG7kT3cXUlL8I+&S1AE;)8ks&n/M4lVaNJAUb_VJ*E(eu_:;B<f7T<`3],
%G]*Se>,H!U$q2=W8XZFJQDU)OV-nbH+cZrK^Cj*SlnqNP`-j4>=%bc5%`=?EAaQ7Ln]\\c<XLA(<8c#06q^R>chCq>'slUNd)Lb1
%([<gLo/_@ek`1,rLKEd`ZWlYJW'7nPl,Sl>0p@dDC+1.[jD2>/+i#60gk&7r"`R0l6iacYhZ>(&;?Wq.P<;ZWGY&3p#[CU<X69iX
%U,WM$<&,qP[m<F8JKbPGfU2!0:F7D\?TfH22HM.eM@GJC>TR=PJGh6@05!WrO%utO3?eCmT?op-iA`&]qQJcU7,pu$\KlNO"aRS"
%"//iHicj>Z"a"N6Q>S@qCo5e(OsP`[$QoUg`_Z&=3PjdVEhm-L+n$/!`9Kf\&k6>lEF3me,.T*gi*_hZ2P@Q[B@1WdH)(8r5*>AA
%M:7uiVR6KQ'>ch$n36Bi1B^C9Gl#3\Qq)i)bN9O8:;`grimS[#bIgM]\6QrHP;@FY>RRW&m*/*NVDD%"5QV7;#,Z9H45<@nU#I$M
%]OUm"n7?DF_4\=)ZDJarOXPC"Af,VI5+p>ujV):e6k)@G%8IED2m\AC7#bAB848qF*UsbBIGB$[g4#',eM;;g9#B9kS`QEO/[upP
%O5J]P,',]>M/_9;S"Rk\hNn7*f5:Ha\SkiHC1h(F<r(cqq8%[<-u$]'HI-WoL*qXIpZ8q-[r-=\mDk-irnGInJ&$:GSDQF)oD6st
%f=(5Cg47nG_^gi5\?%,*Xotaohga[t0@.QtkD$&f=)gR?ZE[uqG-><K+%Z!C[NEABQL=:I:W_g-+6!G!BX>B^6;'itZVJ)%$Gi`J
%R&['0n]9X(&^\1eh"s3,%k*:-c@5*C-0d?Q8q!@70q,g%j^]/>e$eV,Q-G5O>Oq'UAs,ZV$ietV>F8#Bos9H\96Ge0C3@;mnN#A`
%>g\(4`T?6NEY'K3Q.2j3:>qLt0Kk]n!'Iuh)(!jogFAAO+A8^JefP?`*oRZo(HChU@o?<VRY/'`a*l=<-^p9'ntj16+H@&9R;2n5
%P0:5BXAsD8R_?'.=oVHVj0Tcree8*R>=&g<2AllZ)uSM)"2"DQ59Y02GFI;_9!*X!P;*dYFhfDCrSBh;g^8PUWic!M?f^UH\g<d]
%>6i:R%#fn]KXg763ue>\f49q-\(bcE+hWbVPaM9+oa:]"lM#%k<"gBB^lJ@t7q"18_G4.gJc!43`F[KpM@b9lMub^k`1"su3jn:Y
%hL,gh%f0BM]>_4'DITF<Y^i?ZD7Cm-MpcsHdob`e',7C%_U^V/X:P]K[o-EPW7BDEQO[61_kQsu-i3<#rA[thAk;fXP=6c@R'<B.
%^]^^kE6An$&/,nsHg-"Wb%I3`oFd]K6!lSYa,o%[\dsk3"*)<D3"$iGIj)5[Bkc7hk>n;-S6TjTG)B&!KkH`"OZ%qX=FDe<'W9Ou
%M=T`oQ=+^$%HS$1)$qYroN&7Q'NMrs9@maFeDr$nTnb+7](AgSk7bG=\!6h.;5iC$VJtoimM0jG%!7huOW;dG2>?Z1JVV'FJ'^/.
%gGPqmOBb5A&:W(Z(eENmPgloA>$D$5OV->WBK-SRf(HP(gCcYHR!,0-gWgr2E(dQYo]q@j3th>m=JBjT7k0QH']R-5>E_J6lgJn_
%7M.S<)]W*uBG"%nWXnr;BJ+HGPR22H%SK#=%,"=>9;Qg&g'2ObE"M2F6_pj[E\(=ES;Gtt]"+god+3;,>!>(l;0l]V/<gTnl,_Ts
%ZjQVNT>JqZj%6M7nFKG_8EV0(pZ&J1hq.i*3=#^<3JF*glZ1IJ6h_C/.+e'!_TD<?V<P``.18E8.^RU*>9[3<:$_QeC=RqY.'.C:
%`H*<o!MTbhF9^W)[`OI>QfQq'P+h(pPom,^JJe`'@i72^NtI:olE>L.oWd;c'i*$Uau::Erut"B51u23Ai\qN^ehS0O\RgM[VZ>9
%aR*>O)FZP8'16/=/HE^mF9,?q:a1N[,,B3L(2nqi(rG"Bn%]f9-0ds76]B;%NTNO@Bu_#=e7mK5X$A<@a'LE"7N#RY+_<?^74/2U
%i=/$j*sga/"/%Q(^a61"jIhPV*!aS8e\-TJ=9Ach'Qo>(=-pgn),g`lU^\JgV&4/daciIpk_KPR.dlY97IU^D0?$-alt)GoQ`.W8
%A.t\GmjZ\[Crk?&UH=EN)fA:#c'jcMnVqoqFV?Z&p@;tA%Yhf5Sg3h:Ft.*ic`s,<$J,4p2.*]L1]IV!$MRaLiV_%uR7iGV;Mhg`
%7i9;0<`KArb"pEc(G!("X@s1380.j;%U%6-Ba/%EqKUMsr.Fc6OE[YCXb4Ni`qfO:Ug=W6$+<0:&*Uq)o<sLJRs\E(:&_icb5Ont
%:Qgn)i)h09q(K9a-N0Q\s4A:Co9W!4L2*%3(oZ#'$m[5q^WVdd!s7$^Q$#&/2XW_]BI:H'X</@>i$gYo0C)4L-k`0b"Js/7$]@GS
%p?:<kS:man`pgaO35h"CdC-VeK!u(5c_aG%jh<03*E2\!:"c`>5*TqhE^7\OLs@IJc7kc6YdW#[XK&OTJVb9Ei4ca$(qJjqW4aLd
%(2@Je8nC7*/Z[IW`+]IkSJ@(%"PlR#,UY,1D2>aeRVL#mZS'iDT2/2r(7Q`KKNmX5/ue!j#/;3eQa1ih_:^:5C'A3q$^[sg^:JbH
%_WY:[,JriRjIH=t@ZKB5?Gltabg*=n<Ho!JW5Qu40nl(4Pl`-GB<.lJAf#,pm>%g\6%=slAHsf.ZfUOW.G9i,J^st*4g!GXjN75p
%oA;q[7)N-'lZ:Y^o\9cc[+j0aFSoITY?UN@'YbIN^1B&[$$Q9a7;V32lg)9))&'`30`9'^bf-Z!?Ocr#PaHS'rC#(-^TRNU@-CN^
%j3`sfVW$B+/=3%24r5m"T%^`#M+m3^Ie?1ogq<^t-Qci=>&Jha@A!^9pFi1Dp[-o@#'AreT/SH0+K:#5(eA4icb=u3?#9s.FpB7m
%7.(u.K2LR(a"^"($VPKY;2/S!eeFT2,jb=Lo1;r(@ZN&7J71h]QlSAEPQQZp2E^RGgfO"1Y2B*k%(BRon\U"7YKqG^IVU-*XoVL6
%SaK%\>VY&nl[N0VoI%b^Ii<KEIdqD3)h6]V%-qX+n_RfAl-<!CTlUqR1u-&']DTR6OV$f[_nJd>r?p*QK82=B/.mWSs+.U%l2"%K
%aP=G3?t\0biJt2?k-pJdYjU^?81DT!?o3B0&=)G[PN1XZ7%VluqtZg/\lGo$D=t1eJbb[tHVWS5q\Z4QjQq!BYp6VtgY-RoVd$,;
%H.aUSJZfK[(&?:&P+Y3De#c3N'fBW]2:nWC:V.';&]>TnZAfG>rpmdpkHu??0.ZKg(hqI(3dse:eGIQ#F:knZM]f%'f&NrMG)=(t
%!#$'W.j"FHB$0BsLC7G)n_=5E+`\+kd\gX^,B7WPHgd6S*Zl-D`Aj#mM_#'bgB+b`De1@apU&/IEcVg]bqguKk0D;$'BHI<h/HqU
%Btoo1BR!ZZV!-e*=o1@2YHG!D!b&`E2]*#VGd`d7H1,F3dDW[qlZ.]R:7/Ln"ad-9o7VE+UI:r4Q?sSR]fm@OG39.`ja\cU(D)G[
%q9suM3qs=[9!]'#qVPO8?9%G[9\8`Ds$<)>0.T<FntVUlIi<K9q\$%9[RqASllNM1+#G$e^LlHR6\Y`$:Lca[D<ZMkPYPO2D(7(q
%\372d]4d2_7rhVN<sGlSQd-F[Jk'gAX,jcKCNgXCDKh?C.&B'F]"\\]$tELn1HJUdP.#5:=q+],4F1jF5mM9cdKE&gbKF;.FVGu"
%YjfF].FAV4'YHL%&sX^d@:`=6B4@!;$&Z)8-?b^qIQUM2Jg(UXmOrc17Z\/VHD94(Wi.1g9p7!o'1reJQtO`f2r2B-TOHa?rK:6_
%b[O+ocS)Oe:?_dg5ItjkKndiXK"WWF$=e#:o%m?bQG5#;-G%U.-YfB3qfZ$uD7jN,;`>nI5ZJ1"DAJR.#[-nHi.m%()EY.\?><Wg
%=+t/#bd>S&&"cWHFssYn)15C4>@0G4g]IVlC`AcO`gugM-TsS'kHEu,qSUP6GH!TK5^l_2XX^n20chReX@D=M?Jq3.R>,F\Uiu[E
%Yr!IS.3]H;UTpZKK!ZgjaI4(F[uOKXOl7T3?IUu3R[,^%]c>+`U6kM\h68n$Bji%9oN:]K#d:BdS<j-Fk('L+Idnh0*Af/U!JH@L
%MkW![h!Lc-a@ddID5KR[d$%4$VpON4kN,;6U.;I1rjB#*bg2nBY?Yar`0K?U5H"YQZ8O^iK.[_^fK7H&jn7<iK?!444SKlP$3@k5
%Ck@!QinN]h#U1N((3umRXGMheV2Rp^Bbg$Fi>>)8V^:8`HatsPgEhK+c6Bau_d#Qm`sR]#&F=m"MGJ^Ilq_fr\31:=5a&u)'TPnR
%Qoc(kK^0eZ/^`7r"*%"3(N*2FT_t(9d]I6r3bGdM\m5clEeRkOCTRH>>QW+:bX>Qc%im6;M$2*7>:=f56%*`nkYta3L5>?2CpD@&
%"s6k6c.7PPfFeR_>]umhh?@g9q47PtD/9g<7^`:$K3Da_gH>L*AS4Ac=_Hk6g>L>k$N1RQd["#'L6`0*[DD<sHPo+ETu1$1_C1>g
%]N'X@&@l>hN]W]a0Et-bM?Z#4b3Y-([tl)h)hqR.J)'7B2s4/7:&"B[IJ>)^!!T\J55%m)D6UYBD:5lJn:oQfiV1%&R)$J#7mP;S
%508V.g7e)`o(>Q.)^du**l7]=f\u(a(0;$\>#e8)rU$F+huBn@(nLW-M_jD.):_0BP/@c%#Hscja_KKm_!2n(#3%la#8tad+@>$m
%+GKk1mS+Hj#`k=^"6UAp(X=#>#f;WU5n6Wk1#oCZbCZYNcLM*u4A\WO@S5Gc=e28m6#.D<;[946!UtucQn\A1;3i7F,).qa2]8.)
%08<DRY[Q'JR4,MF*eo`n`!"*iID:g66WdJ8I-"J;mU:0sB#G3a<)6;5S3F`'?9e`M$^8,'5d!]b!R.+l$FYQIZd>!ZG:B2BSYu'$
%6c97`#k`.#*#+ab_UZ>im;O@3C%tlZ=<X!)-bo=g2T/!>dt_4:+T<F6e("nU^Q-jrMbGq_M=Od#3-2;!S:h=uRd%ie!1UJnJ/F43
%]u%;-@G`0Nh7id$Cfqu*JLgk16\J:S)aWQc:`I)WQuG*DV8=DT1c`nZDKqe_[$MClFI!*a'R^2O9R/<&d7;O@D49i&&2R:cM)aIn
%mq>SgVCu6QQahcAI)qtAjFpT:m%%Q;`>PQnZI'PiE,Z^R-OE;s$D^[l*6K>>rjGE/Qr,AG]FY4)'tku_;o0rS!$OO-3L_\&iONPU
%c.MDn\O<fV"P)KbQ:a+J]r1hc+4r"79):Q#,dEa!E/4\9(n]`SBg<J/mJ'FWWm3$@`&e-uSr?G%&:a!lMF0bC_"HC%B[qnrI2qnp
%r\V`=_pa-O((g)(Fi9stH\@RWD=+f!'?eY<%#0$DAHt7+ML<(f.-o:NCp"(lnjSiOjAR0b*WP&i#ut(ocS0DkZ;0\@,&3lT@*(^8
%MV/)0nNP<pdS.[lA`bCac*.b["g70+$V4G.E]WCciqHAUa7muC\KQk]0m;I'Y_(cOG(3h#O"5Ro0FibEB,tS0k7Z.F-Yg8L.)ZuE
%D@9Fs>TZZq$_^4/X';siL9,l*MU531c1%((VE(Q_l%$osIX>ml\Dkn#d!tZD.!f,5bt<X#ojBWm2nJb/cg-Su(LI"iDXdJ,h\(!U
%m(D;^9\K_F(H;>&-1pJ('J>;DXc+H0.qT%hO$k>pg0,]1k-7&8Z=bRb5gn%3%p5V8i!$1e_m9>s;7M/.$Ae(gjZ/'=bGq8o@C=r"
%o;2KeIp$XO'[LflSLC-PZ^EcI'g^=\2d-S^?%.D],HcuR`a@``ceFpR!iVP#i?)EM5UM[CY5gU)K+uZf,>oC?8A^r!1@A?L0d!4[
%daO.q,+2;OQ6_#iJGSVI6J1%Q*3ke2U(F@%\1=i;Yi92@4O,aK=S4E@g&s6:i6%G?6kkITA_D;_6mj*_UqHPtK@&r"C"9<iogIA'
%anu>\$%\0k8"ZePOI9+r#aWgFP2ml;emN[(O(f4adJ%.DP7mZ)*oJ?f.[2RVlVEVT+_7EQf[WC[E[tkLqE?\AA.]tUb^C<pntD2i
%:UH7&AtQ-8dfpsJ1LC+fSN=Hb@Q$Fo(Lor#'!Ml@o`2VRb:a?e1*HWufI$,dC4AK((Jd@3HObim<S'*;ZXuC)+LGHA/E1Yu?^_7;
%&>]C/:.McgOfW)\pR\.9&C?&;poAHg39WH`kA?]A,;Dk/"J(SoUsnOcYtk\JNl:@$Y@/Zkh+1q*ckN?s#(0.pbK\^-$-T/WOBSn=
%;,eL/(tL.hZieaAdXWD\&6^@qYNPn+B.O6QY+]tf5VZGREZVk*\YOtO1R&pYkjXLA'"ka8R>L+L!L%N&IPJE,dB7tLLgAU52q_?'
%B86F1!/_fhT?aFQlNd5t7^P;JVqEh8!"fq&JV')D/Po'D#Wk$(;MjfpK&g'^J.oX;4`H9MO+c@=F9&<r1G(QVc#B>&W$;RRL%.3/
%V;U/kA!'n-dZ`Pt%'0$pTRRgX+@7EED6fo6M]eaE$[e7A''6t]?*m?#bp`O3,N$_[*Z[P$VcgEd<?Nj9%UL[6REi+]=p,7O8NA:I
%S#m4jh?9+=MGM,m]9nX^KWsYHZ@lFr!Vp>"\IAJ8feRV0+,+H5#]1`gX'V2lnj![cLUtm7Z7m2WgiX3OE%4<?'&AcMekk/;QV,"K
%l+L@\/%e381EH&GK_>k[OSjeOd/YO@g72bEMbSlE)\Rp;QNU"E?18knXSp7S%`jb(qVf@XLee#.U+c1$#Er6j(F%(i*W$j),U?tO
%TfcEDPfCYrmEg!m/?dUDEuXa*O9LQ.\flqVZ<^oVfl+lA59tG?(fo4R/O%aLB&e,PS@._AceGI\p7!aK0]7(V)o=,O->.]?CsT\$
%6*%AYmM6utTEOd$Q1,:Sc+"s`>Ro#I'ds/N105qoFuutd)HW1Ea4=l4HCAVo1M7@*"&f,2QX@PD'oocZikj+n@Ib1+78RdPLi&XG
%(C!/<%!?@*'`F@!HZMlSY0]&6AMUb%))_Q8.@#E=/?ge>D-?iV_0mSId!V68Lp0$^FA/uX:.=`1q%UN,.4RSO43E$<BTedHO/!#F
%$bLKA@A]6H6,V3$'r9VX)^[ErL!e=q<\7FnAr@4MgVPgX%>U(3n=BY6,KY/]YiWP0B>WOEi@#KbaKH.[,&NqG5\#2dJ[.tD$qrZ0
%N8DgfL(c3=Kf2@NYS:R"'?jOaFuM?!#`QCkW1]0<O?:G488:"2$*H:--.F!$$3%BVN>rl]TOU\01F?#L0fSaen/sLf%B)8\2u<24
%EQj$TN8\SZ13>Qc0+!OeLZbbUcd`rI$t4sNh#3id4IPiN;%%61aTMgj*39aP)[lU3nJ7;T[M9@3`fmAVZqFk++]K4>A*Gb7:qV>O
%5AZ</[K>Y*V9#r?0N]k6=cY67GR[+,i`"u9m&]r]^lF$k=GF,;A.>VD1,I9fU"d[U#7_)L0hY)/`QFNpTX`6!4+IN!&[/(.Qj]`+
%/2GRCZlBVb#O:qnKQ`0dgLhKgU(J:n>f,A>[-K/kHI3JM6EHSO+X%cmcsi;_Pf?J?:f7TT_d<HTfFL5JQr*(Y]4T/G#i?P9V><K`
%-R3OZk+!V`nj/:$b,,k41L,OUU-l5Dqj]IZO=af'MZH\H+@]qM=jS,ZX*#Co&`.Ri9(N]/M;/[u^/4^/Ta2S?5rbOo>kZF@W5VQ#
%eW.!t/5$pB@;/C28AZLU+/?]]HA=fF^%P8)3PCc;"_riaZ0k,]ArX4j`\^9Gnc5M=/tKNgON,F":D?CL`@bm@lJudHm).Wg#mR$C
%'U"GX9UR+%6b@(Z^U\o8o)[!tM[1t<1],8cQ'R=IAEP?R>U9ngMupqT6Z"K0K21o/"&eCSR>p24coj0j:q%Q3-KQmhUa5(=kC'B#
%3e6.+Au2Sd"Z@GpY1:[`h+)AtaVdNr^(X$s=_<d>BLpsiW\<S`I$R=6Y:TgV,f7Vj8BDn(CO&0N][m#J6)R=hERG`r:+_cP4D@Qj
%$/(8_Zjg9[Z?nrf0,@*.Sp$a(iqGrV+@C4F3^tc1("<(J*t'L2/:50?(4c\OTUNg)TQ4&er^E-,epDr"HP;3E_erU!l;U^+?qRTQ
%0>#(51.WSkJ6-0`P`b_3La;qBKUV0BGl1P?eE.A77)o&;:`O7?G8ej]??693lB3(JQt4.kZ=CP328.JXNLcjG`SegAa`4GY8@Yb\
%e;!1A9ZE>;)A[UiF]G)^8t;b%CYSSnnm_@=oLHUTpS.FZa,q7=dk@kmK>q!b,%g:.d:4PTCKo"rgJGahXg)L53PE&*`ib],>SRZ6
%6dSI_rubE:'!6@AbAJqhB[E1ZDllV+5a>H`/LG_Mc+S<*nHXptN^a]%.Fd2r%2!1&>k3L",`GI%RfkPb:0qPlA#eJ3V)WT*De+:n
%-VtB])`?6J#24)<!G'lq;5(*JN65iO2WXC%Z4!1Wn3HPDKP6q@=DfJbTVb2&8r2c1F>>p@+BGBf,gTnL]$=^\m6UKp69"K.\^CR@
%AKpot'Db_`T4g@d(_1_c5LILb/h7M)(E1'T4Q.rXq3rI>Q-l#I--Kqg"H!IPlXjJIWj?Q;<LFp/G>(IS"N,GLA:2J]ine&p`/U.^
%ho0\U2Pj:a=U9:8lO7mRh4cbj(Z/jf+,'S'n'V5h&*NF>CaT]4ljO(^?5trpXlIH]_gnr)r)TW%c!lXF`et'YX6[ZcP>qE05M@E)
%3cA(0TX:&Dqf3Ca2bgI,C\MeX1FF<cR1hi,k)e#d(KZQhj5Qm[?S9Bd3sS%mCWO7;Ih''Dehm2Z%\5;ha.`))h4YKIF6G<$Akoi+
%@V[/>Fh++-/fgV,rB,2dO@Z-:?O]5:PT1eRf>sca$Om^.mJ8*A3ZRbQ(2e?^!52F%!W@>=a0B];kdG-e6jk&=I5VHiIgG_ZRVHM,
%1'PFjn.UJEW5)tdmkEB?'t6QI#045"R@i<O';4:B$#$sRIdNkC-9P5j/tN&[(CupOo!ILH*tLi9XD'FE]fapXB(61F*_$pIDDDk'
%4:4u'[YF&1M9teb7+>I),#[ZK!5OR]I[<6NpZGafgh0BefsL=PmdBo;r/95.E@k/$cfSe<5S^hjM4o2M&:rM!a4:=T]aCK%o*aCR
%Gt&J[".(iQ)@LQ,0?`W8A"i-rLr.jAJ3jSTEn-U=HtA3D&BPTt#JN04'a+6@l,#kZd94J/e8F8=*d.q/pj3JEIHI[<!el2FNOPWA
%%Mh2gOMt\aEn#InKN2FT7>FKA@@XS?M?oLlC'L=aTeptCT[bNEj3($Wc8i/a$L((T"bU``CXiDf?k3nd%Z:7bi#rh=g5J>]40&ln
%orsC[D0_IgquKZSjY9C1FbJbE*#)8>Q\)T_6:MX_A8KM$@_%G^`F"Oe[_%.p(-D5A0h2%T%,D@^8kqr-O*5Y!2mZA9;%>M,0I)VW
%]^CrD@(+Qa@f'Rmc`*j2;V3e(op+@`a3-LkcgQ^6o8J89*r/&Q&Vp^([b3c0a(ueo1RmuM]pOIKZT2?=j]['[aD@Fs)`9_2.HBK"
%,T#2PNo$cq;RDm*C`Q_j]AZ_6iN\ha*:XXaK%2uY<Z-b9\(Nm=Y!\Z?6_W0q6H<m`d:4:hpN.LjK4Zsd?LI1tbql,;/mjZO1rh#k
%X*BTcR3bJf@m+9AYh8MV4]7br/k?6U1U";2dEUH1eg&<Hb(CXLjoGoLF$.q,^Lf7aPcVo.r3B4QbrcE]0q%(4-BK7+H0-8,CrU-D
%cb/D,*ClV4%$<MZUWjeUU?D5dBN/ZcAtE.;E7l2cAr\NLX,M!W!c"Rd8tjN-G<asP4qtBfIP!:js5+KD\uOU&-ukJ`?brDGK\uf\
%RO=4Gp6]bVe4.X>NLXmVd3_2Smga?i]+&A]eB=Uq@=";(m9X]Kad[]c&48Xr%"c%P"3U[d5bb-MjUoe3#SlTVp01&3["k!L<c!Vu
%HnrE(/=ou5.G6%<Z>/q"VXFMu@$Z^"-hhVFbMiLD"@"L-g@Y;V#9LP:VD@@e0,#8UpA$3YD(1I*l%YI<WPTAl?5Omf1Y$mVi![Qd
%H5V]<R&dKdh27ak'%aHq`C<cKd$-aTe*oBA'fP2J5![VLU^t:*Js"jfIi<;/;K`f(!+*f)_FkapXUPG<Ei-g_#D=<`h8OcqF\<XL
%R:b5pdEC1UD(#t^ek`n[5i[T4<jq0eo[q-'Z]'uU(X'&GjbI+mK86LVg;ST"BJ_OcgOs-]0gNF#g;P7^/7:a33NSid(Nn]AMZHH;
%@2I+HRA1jIYm^]kors@JbH3tp@UX))>qDX7-[M2;%tOn]`p0ikKapckLeOt,krL&uAi8=TUk-\eZMG6IcEcg,)+c#5e6+==_Iu=1
%:2sndaP%k<^datI4J2rc7_<5r.hl)FD0TpSqJoRo%DK"lf1!e/_-Z3VimE"^)p_@AEK."_)GX9te`5ScaKU\bj=5eS8B<s^mcHg@
%0G%6-@4.06&>@J*J9H@,T&tKJ7+CM(/mB%G@/RSVcH%D\ojNm$Pl7'*GRT>#T[m%ik/ACPd>T("X4aL`]hf-G7=1`[?!.e*Z`YKs
%*,FP5:%NCoc4ls+'ENo>JEnIC%ABHHLp+ee9UgV)I==YX:1T\_:2_04:Vh#:,.BELQ:?"g2H;%$q,2&)fcOQ+M:Oi3eqX@Hc5m\q
%4:kd`.[>DEgT^^HT=:S=7#qrs-"[aDkZ&_VjCji23*G>NZ=e\K;J:3,*&Q;a1ZEY707l,>*8Yp,rYku]F>7`:mdORsGedi.nt0=f
%Wq6*h'`Q2t6AC:?>R^cmp?W3mXo_K>"I62Ag\)X#2e98*V7!qo[%ni$n;(ZWA4C\2"kfl+\2iHtPS6$?/-Y!eSBOT..p.>k9-i#q
%*a9r*+]o6ohhsVP2(]GRWnPl=.`3=FkFrXX$ukg\@:$#LA7dj9q-6_1(>a+XAf1<sN]D)Z(]h@aXFTGiCY6O"U^A>EG]d*N>npt#
%hdp)T/j'a"S8AR*(Cj9gK`gVO0HSh.7SpZM'>o``6F\Y,CtdhTX`S!7&GF/pZ7`V1`N*R$k2U^l/LIjXns2%i8C8n[:Jce.n2WXb
%5WU@<AXCM_dY/2E<8do`V0@)',CcGj$dZOs"'cY6%'$eSGjE5>WaoDdUC/l>H9P;5/;39Ug8t`-Xg)+AV&>Ph'LK3M@:n`R:LtBr
%5Nu)_hI'<:&_K-,b"9/uAn8n`Z'U^on&[7K5o3#AUT>e>)+MD_F(mo6#nl+[N6u*:.K)k%5TEHCA_0F>Y^R*iN`(Vjm2=C0Ya&W8
%JP3?a!`C*4;20SpjQ/i[aGQGW1-g2uZu9BtD>H:\^Rf,5)s$>\!.dA<:R*&[5GUG\>?=q]'-6/bJ;--.4<Z]Q?_7.ZHjb\9?M"!P
%iaqO"57;/M@Q4-KP8Ng^C.=,?M-q/7+SSkgn[!`*[oJ)c1:uP["a"J1\cu2CEiYebj/Q9K>[_[-[5GTJgQPg]]h89&/uE!d0%f9/
%$#&ZIm$b8.pA1GCiSIB*"#Vi3NY'A.H2oO&:?^+hB$mh[YTe7JO<'i.[P[0B=na%.\sDb:VI;oUE,;tJD.m?@[S>4+7qYUTAd+lV
%!CAm`0"LH&2=VRSE>^"Jm)GL532(%4/N<P!5ZnZ=]PsrpcboDrNDDh$*F5!"-k&8Le;kuiUCA#/q=S=&BRI\]Z(jOej7#'*c->s%
%TFMlIJKuSq_B12MIZLr,nT.##M.jnNbutg*8&m?YkIk$088h@bB,(t:@:E+U[BF?;JG_!d4>-Ms[Rfi6?*ckG#UF2A=GKL4#hnS+
%Cq1>+m?N>3N$>3SiZLp39Nn,<aTuBYd"_A=+A+,pY9L_d!=2>\aP_qcI!^BuDFOH%UJ'SDJ654"e#Vt(0Ysus./f@3X@EC2$MpS9
%((oF)<SSe>;DN/,&>XM=`0cLB^oQJT%XNqBkX*g-<[+5Y\Q&g)"f/2lX8UI3&9h.Y<_PYkC!Q5`U1g%p$7"1$M?IJo"2C4.aaaY(
%HK5qe2q!Gp?e8u`(aF,oqH()1ci5&"1R6MAl6Vqu"3mF_jX?GWm*kZ<K+\fkG8e?6/I,Z?2]j5U&Gd]G-N=;8@3PIq6:3&+m'i!u
%<NB'B&X@'`&[%i[0oE0QOiNJLas7K"RQH.^ZJ/W4+;hp>LSI5oY9RZ>)$UOI3_DCCkWPWKjKl>/WaJ%gGiS%"E0MS8J\E`+])YtM
%,C>kn6FK4l7M989(eKdZb,VbRR>MfSc<]Bjg;#&u-_@3^;Ue?+\H>%1dL6CcUug(0VN:o]<ok7nH0MX%U$rLbMtEN?']a"M?l;!7
%0"7WQ-BTG;&`ibTF+h87L\g<_8`0^WZ-pF0hPGSYnc9V[+<M1R#dd\:Oba5YqsD+4Ws>.3asp[4k65U`U%sLX!>2V3gffZTBh$^4
%ftG]m<OZBfdt'&2-Y6X)C5D'dAWUCB9Uo/bRO:9ZTYhNRlLH@o]ck,i;ACFR"q[MMe"_LMSUQA$jn1?:'!J`M.`5lVS"L2u8"3LL
%B=s:7\RCg/a]t90K8W/T);^2^?ti8!D0^>fBTd5?Z!7[7,]cRS@uNE0F1Y@ISZd;qb'i>"BboKbN3:3KYf`Zj7U6NQ.IGl=l_r2t
%0gMRZ4-)ofc;0R`ZWaHDa"8a([LT:o$m$VI.3Opf`i,j6b_CLkP@PMK#[M/kf3e9RAX0UbH^P_dl.ma;W'R$Q;PXjK#sQ_Z2?19E
%8h.]"ZBbch_U1]qD!;20BH,BdKP!r#=ZWKI*CH\ER:#H.?[m-hXS8VH*.[Wr-c0HZ1'("AW:YdOBXZt^YbXjOKo:Ht"<s+Q:r?.n
%m8fgu?HRtp9G;epnRI>*V<#$_?3?Kd[:!Gh5u2f.\?q4c$72]%m8D2,>;4?8=d$+*,mBpqMRH&BOG:krNBMm71dENk`Z<ZHHU(LW
%Yl3/#V'nl03f>KG4K)Yt,.WiU"U8KJm(p--[KVu>\[6i<ra;@AT82E]60g:E_aC4g84[>E:%YBR6^LatK?)RG"n/5#/]dP,/,r!O
%5qZH*I6f8N7*Es)&^b]GlC:)tkOj1SGXJp8mai3`=6rZT".%0F<d5.&D3pQ\[JbB!_TPrCZ^'jRe5e12g&[\CF(Q+eeef7eC/2[U
%Y!Wt0_Q%gbTk.aH.[-P_`T,!"+s3lf=$UcCRb\68#WuK9?ur@X^2PBQ:fr/b=@Ni-K?skpW]S/.i#&CC2IsU&[bp6E4C\YT3O/)-
%PV)eZ9:ERl*;r$7@&C,")'8sFFokr;iDj"/,=G(KX6kED`<V8r'@9&Y#0,AeUCM]f&16e[Vd8tsj)3hF*)m(iiO.LSaiK310$uH`
%$rAF4`P=Z-^h\V'3:lLGNb1]d1?_2I/sN.D"GS2GeGMYed5fH]OHEKEoaMSd=<<!Z$6?Fonk]g,'/sq7),W5FrKO9(@?dhg.W+NV
%UIc92PS".j<USekgO=sJniRr8pnc&b!+%_6q!]Q';>-U`/ik+-?sZUd'k><[^M89M%]Pm#@5mOJn:E_06&U[5EZot(k>/ds.0TnZ
%G?(]p7:d$C;M;(0?L>4^:??$G*Nj63Oga54F%ZQ(9r7cJh%"&AdJZ*+UXS\j4"'f1bYFR2%ZhVF@[*=N41dLn2Yn09M-jh`$&C#%
%%P:YkWFi2a3LA]t:D>,N-jmp@D"R6U87Aq)!DX1_G[(ASDYkf=d[LqJf7fI5Apn@\a+(Jh;:t*Yle$U;:m%TEZ&nCUW7Vm<:m%p,
%gtRgSX'%D*T#>qt"fr2E%To]dFm<1C>LdLlM1!`*A1"h'q:eOXWW6>eK]?t]C+Og]>UBN<N*GhlCZjd!OoA"\VYIkn-#S8T%+.;D
%ISQ2/"dBdP4,riF6f0Y>%b:VC%I\5]F?fpHLjXo=;t9;!@o^b^bW6pF5ZXYQAXJeSF]F:W&aCpFkS@\2LDZt(LIH[W2?--G@]D,>
%G]IP_]bk:"#RMhG5PqpK^cc[[1EQs9=$2nmM4D,r_-5p]4G_[i1J<OrG-"iqltHQB'DeC(if!X'nj3GD)h+Ph:DDf,U*,&C2A-3I
%>1G.Ji=(*l/+D.g%8NKS5b2fCIsQ!Fm"L(!"u7;)1KJKGU7^EY>V,)AbkTIEHlMq5`ZXS<C^BEJ(rV;)S;3Es%B1c\WA'XN=.rG%
%J^>d_KsD9Rrjs+f%\>fP\at++7?iAi]U2NH??pGD[oaXSq<ITu?m*!u$a)]jPTC*;%+0\9$`>/.EQU4f*%3sXEc4BF'pm3"UDT$m
%DIlcf@]TcpJU?r4F<.i)7%6l%J7pOmi%[kBmo;5U%Xe%`Pq0ko-&$Aj^UWtU[l4ph=<I9W%V035#S!8g\QbER/AjH2WCRVN#G"Cm
%J<>_a%j*kZpfDR`hp:Vi#/MM_(#9HR7/RfGJW'0*j:4D=N=;$NdC![Y>ZQ;s@<d:J!Fe8iR3L0O6NiQ1CIhJ,N3Z&^n5qU>)D$nG
%P+R*7E4M4m2]*CB,;PMHC;2S>*lh1N$;NaN'ibZi0tGI<A@$HoCciVZ$dMj"p#$2W21BI*$SfK!;*Ro+\1#[ZV0&!ilKHh5D:688
%Skh'4kOlCJ4@NF8X:W^[%'BSB/B+Fs:oK\Hb"[X=3;W7CglIBnQH\S*GeCL<$X\:o2kWST'r"XXAJ5>gXe644;tS@\;6=lgo3d,^
%#)0<l_g;pgC`gli=fD1FCO<Jk<\q3o]rXWR@Qs5YCd>)la18%<)^(7,%&K[d1lPheU-\_k79WFc!"l4@Rn[=iDtB;?N!A*:3!,CQ
%;=k>kPOFEN+`nD5a6fJN/%:]-iF@RC=L!!_mWMN_!OT^"O>BODe$'!4p2*TS>Va&p`5d`Ym:37?9BMo!a[qF>b*Co;KXZul9lW3J
%?O+r.OO$j9\oSkZPcNO*8Qui9/!.1Z-dY!uGauAOGppf4#Z1LC*dl%C7I?";iTbSZ>k\B*r`f%gS.L1.b>(Z[2Zt:N[W@M,=O[^\
%<<<?hV($2MW$^Q)EqQ]WUkBHgcM2o;[#FB)TQ/0JAm%lYTQ.%8g16@S5p2Jok@]hP\7(4cf#uGEWe*mF"P.CbOdO3^?6iTXA@A(p
%d#iU"p[:Rk59CjX2mZc:A,&kh278KbVO&s47mgt/hJi!fn2F%4/f0>C,mXZ2%LW?Ul_o<-O-P3dqi59N'6%>4bM]$AENRG;d3]GN
%"IB#S+-Hcm>bsrs^4lMYra&W;ebOA+V*0=>XR+GNaI(u`GT9t7G4C@>Ju`;Tq.:(k.$>m]En;>-M&D%4h.W$EIdd)n6\43!b@F1c
%Ynl&=gVF4j\rre,\3o=/F/bZTTk*;lLo.:["0K\+fT"<gD'pHrep+;@"E@*j^C["bm]R)Y/ZThY>%fno9Ybq2]b@*HahB!W"b[<d
%de8r"]qq,4OK,kMqQ\0^A`lkkUt$JmdZ`E&BMC.UkOtC'`o_3!ZO!iPC[;Q/[TN3!?;MBZflF[_`F>[@M32dA=/!hc`.TP]#uVUs
%\H(#67Hj<m3+89(d_#/lT"HU-E[@i[##fo&Wa[T.1(>fZ?NMMH;!RKCCh[ab@nA-0p;r3Ak;Gb6(+V]sgB/-P0N'[oD9+*6[7@j.
%lFOFe3G$C$;^oUkG)cg78Ep-eHAdmH':i2&S>RQ"9MB'DG-]L$?RYT6)Bcbla;Q!:(8Y$p"M/e=-aT(P2]"U`4u0P#f3FlY$Pk$i
%B^'i%&6K4@ZOf#U_:`"ZLd1k/i+WU7qeSf!nt,ur00m.r8_d..Z#iN:Kd_Va=M*Pg%acpZ>%"3K)MGi3)&1EuPXJpsd^(>>$&c('
%T4;ZLJ@>K,@RWlL4Di]31C9.VPdoZ`+;UWGC@Cjp#IC`-3U<cb6KtKrIY]btA>GT>q^S"+&o,sUMb!*'FJ%aT;p2,]MEsCYW!]:,
%$)Z`;)pomSfAn5([bP0).sU/(:04`:VLYoBrI6+VRl,p&*ML)33#e1jq^utl/1^u>DkXe+gKuj*'=n8[K^OYf.i3+>bOT$((:jV3
%6?f8[AbjLmFJEoQqhRQt5e9:Cd#F0eXgp=l@JW1=;!DBmLqd5qS.QYd*Z"Q9>O%5iFJS>T`m1-c%q>:VMYR$M10t"?\R\`#&,.SB
%KMqh>ZWuuf6(5(FjCQ\K-1>&t;cSrZ;-3)k3f($2RG4LqYhErI&6`GW%b#idLN,.@Zm_g>9B\7A-"E^f6>s=mM@["lpWh^'='7%=
%Hk5ZEoOq=-/f?6j#[!$Q;g3J45_Cc_1(bTaKa^X8WDTZ""D@`C(&*``kZJeG\[YM[G,n/6<SA\NM?b9RD.>tk6hic_"H#\21djY1
%*Ree[%02L[SjF?0,''VUFf+>8R=D>jApZ<2A0JFW7u2cXZt92$pZa6L>AKjh4ePr*-sq;;1i)n;)NR,DP2oF58O2;LR$lFdhe;qn
%o7XkTQ8a&](n(MYF9S/6M!?\B_]YFl"Ie%QMnuE8\_hE793cP$'X7Y<C"U-R_<,NVLqi=P%!NU"X-Q:L,4(b<\M="S5Q.to58G\Q
%R:UfFnI[Y="hKc9eS<\<j.U4q;FuP/qfq#Es4\=f>I7HB.X8;u)MH//_C/<cBM>SZ;e$oY'U#Qpk`:J&(H:5s?pC\_J_k1^",G9N
%0t$;h`-_6/nA[tsFG)7]BR#IUDQe`_4[=m]Vg02k]6Nc_eYO-.S`2SpA6+eNKR*36CAicE#VsO?@g^N'7Ok,R/f@OM^UK.&8GCkM
%+[;>8XXEDY`jZ#VZtZF$6Y\;jN:`=dSZp$%H$T#^n[DXPOKfra,FZ<AiEmFSC0$FjS1TcY;AIN1IQ^P,U=m4Q3=\ICi;1O7bIn('
%I,iq4]*nDthc6<9L@I0A7jH?l_RDa(^3@`L>1^4OK2`7'$R0c+W@4Q.&'-mSk0,ko]FTJ[UgUEfJ%]cadQ[CC`82Y1"*TU^7=dAH
%;oEW/Y5c7WOPUY3R?.i#9la]jCETNKNGra/O9hMbF;liD^]t.JcK)`^/1W@o02N6kmN1j'@gX,!q_r&tgMD/5@94Ws[;eSL]F;T6
%`P"$=Vh],J;*ss-5.3]FT!F5=)07^*pTGd&Gbkq+?u<gV=AD3fWk6$",nMPXIqu<<0p%O4/OgREV\R4a*LDC]<!%`@1#4RY\%(-=
%gSm@eI3aV2_HYLN[P&\Br+UB(2ms!lKN:LcFZ8C>IR%Q;<Vo)O9A%\@bcr$867'D;.Lr^H_O%N&J&btV?f[P-0t09\nim>=iJU:8
%M3mMMU@sJC;9jiBrXQ2?dp8$H+euHo[O!iWc$a*u-l)br"*p6Fcs[prUrD6/^Z,GVB$&GH7Q!gJ*U.lQ[O'#taB"7W,LSl<NR5>,
%e@lAZ(PA'<A'mep1b<ubR=dU1CiGJkQ#GU,gNNA%]nZhe`H[A'S8('#%Tk<;4),A2;7hZ=s,HOe'fE;a'"3%EMH\npYjcms!/5ZW
%Lg%Fq+.#G*fYDip$.8o6n:@a@0O+^Na=0P:/UEnYp.YCIR2)bc)H&#gqh-kr3fH/r^G0!R^:!B/I+]ENe3l`.k)mn<_JkJ?m;S$j
%T"kbV:+<ArTaKC:GEj;`__ioYE19aR_DO"U=1V(dA[k25=mB!.bAe5kl?Or$@I]5[iK.>"/4ZMuN(7E5NQdh?J6riV6u-27<D;,A
%26$q%+(t$1Kc6[CiqVkRNB4M;lU5M"bfM2jd2I8!EkHT-#2Z68p)'o_Tq#UU)d\gNYbO'8%COh-4B_jYQ0UPF+[2;kOul_)G:288
%\)hlgZu]jaklq\]nl:^?MQ2q>YMR[*Y+-m;JXZ2%BTiRu]gf=3oL>s?]nK9)Ef:Ni6:JcZ\72+!K=)hI3!CO1)Jtd_TCf-bgTD2D
%<THJ]o^cY+,t[,<+c(+N`Zo6l4@"'K-O"$>L5X`IS;\eni;f6/i,f`61(Z(EL67Rk67$4ah@6a!?u`aRUEM,'g+ga+Uu*sH(Nu0s
%\r.HFT-1qSBlh+f5J+I_BkkObEGYlKe"S]`3e-t%8DO5YaNtofb\ELo(d!oj)/Yl`TVTDep4EYQe1S?qBt"Pm:^W<_dQh<P`Z&$T
%i4n$7=(s"pC4L,2F'IbR&15H^L7IcN=Wb;C*Rt^kGbsUCrV&RpL1o1:.eB:rZ%k2]H1JioehE3W@1R/#K\)/@"cNj*7sVOYgN$lf
%0L0E#p=pW'd:;qQC;-b[2!'KQ$u`<#_]75=&&73Y2i"([\YVeXKKVNC@<#h<3@pghrHXfdVl\<eq(taNk%`V$*elSk%=*W\rT,s<
%G3!E7758hb#0JV?kI`GqIbFI-^Z`'2#b2/]L]Z/G?d*.W5Mp=tVM3Ai4&j?'^Wh/TQYmK1@!EZOcG\2^E-O8p^"F^;)\-0Qp:1"-
%fdk8;[<<0?YSj;)e%nG)'I.m>/3.\o[/5/'N!L*t4tA!&\,/%/W<pG\MhL]VW];4`,TV'$P\>r"RFH3R`Gn/WTru"n4gSq!NKb1[
%QidC4-_CqteSh7G^+9\cTemsdCXID8:DC;R,';uF?q*3n*gTpgq=.Joc1&QYO7QjAF<Ht_'$%g2rXq_I.Z]>/Lp=hW5ZBSkk?Cqi
%07M^h@D*0Pg0G.iiJ!((S:Cqcn6\!CG.*^131P$j@fBbRXtsCB%5i)#0ThTBJKf2m6Cd@]UVS^4O$\ZZGsfJ`N@2s9o*jM)N34F*
%+kiHRjV<2+!HiDQB/j0bj-Q;a]VC6H0VEAd6"U711B^V^_DD;@MJJ^0#-1r@*c3\%[fR2g+E)DdL4E7;P:LC(arODNLUs9)"T!-s
%F*5eU:;Bo#)*6Jm>!^m)<?D[:?Oh<#oLB<a;eRa>PG6!U0OTo)LXG4\+2,]Wj@o/rk_QNB14>_$okP.'QYNRui]i[cHW4!@iLgX'
%ci-am)i.JJja+S1?`dojo!+Hf5j$pH,re.U$'(r5_0hcn[8@0H0P0rR*>mZ]I^#pX2qW5U.r)o&P$p=:ph_fJUsP4"bEr+\TEVf*
%Uua_Gi-PXmE&q/V+Hnon$]`TbJg5O4?&YeO(B-Rq"U!]r3EgB3`+/a:>/2hJIX,_FQsV0A*p&[qU#lk;\2E;s$4W,P:VuY("f!;7
%IZ.Ga:m%2:2)q=#%rP'YgJLZI,BdE6Fh9fD"FmQ(G[H1;g3PHEb>4(C0YqkMX9J6[=`-aC`DWsKe=[%Vj?uZX)KlY;G<M<,+djJ:
%_2Y>K&WD<,7,kX4iSWI9]3CXTfCC`+]"ug?Xndp7Np)>%N__X>eM#76*/Zs72=@Fl0QSgqG]<g(08&kLi3@cWmYB^no#CA8jO(sg
%V"ip]LX'Bj,MH*T&<KfU'eB`TE"qi$e)?HX)ZVQ,\&C,VWPO%J4b00I=$oO;=qSVi;(-0A@P\rq6?UoL(n93?OZW,(Ch>qBpJ;U)
%bg0$+oJ,(_\aSa=c,=6L_r/;aXjdQRE`SF@d7_lH5#+jLER`$SMSW<2,/_[nFjNT6c9!#9Ph*Q+Z`;SC_%h!6Qu'tS8=q,K+tR)%
%`J8:HTf8MD3%/*P"N,DuYY?1KNda,fE',d6gDIN@)NB6>i<b3#J#iL(Oqi-5O!hT8V2@S#j3(cVn:].u7t4jciH(ZX%cNJ"g1Yj;
%0)e9i_ZOItDJWOn;T>H8KQ*RaZER=o?-umlR8'#,9G[b'_!e:.PruDelXnZP<8@B['h%SQTI,Be\2*6V>!l3.=4C&;gkO2)Wk$WA
%NRcRCWDFPPWJH[GTm.^*!^J6;!N6HKMLct2VBK!RR/3ch@KVda5!XpF>!!M>;7V;J+dPNQWjK.pJBC^9OPgpNk%&e2$ip6(5=e"*
%Pi7MtBEcaM!_.uk"i6n^i\EDX&^Ym/%%XFLW(.R,=.'CV$P3@ERY:!_AsNA2j18b3pc5UMnL::h./Ua.cM54FXNf0En-_Xh'^:#T
%@SrO=j3[Pd@Z=^R>t'E&R)T%D:oI\hCk\-DVXY&]*hMgK<[`m?&8K*H[p2UO]-1h+!@f;)`F'inN`kn^?:$P:pJEoopCko#@JVI`
%9!W"tnghA(N(WHoY_3=1TZV:.Q3KdF!>tp;2>KMejHUcFo_gg[)UCBV?,=t8TgVFDoh[b!,numkk^`0N!fHHESW,.QOg=2I3<uU!
%7^bXJOcS&3U.*kA'#pqcI1a%9_>):k$3dE0h2j8ueVujM^_^P<lNhOAZMuZpl5lmk9(tP7:CeB[Y<d>Yg4>qC[QXAMq&lLaU6scg
%OlZ\$-*;\X8%r=8qWl,j;:%U5p+/r.:D$_mqc-#unU)*FJA;ZIrt3Ri-:.p>A;fV4B\$)X&h5*;-TXLg?lPS="(!Q#NC@kPKX$'f
%4<MA5[asOJ6`hgEmBckT%3(CV@Zh78&_2j6b#CQ?&jIukO_QG4bK(`f<uB5<77"Yub1b^q:,!U`.Z6Df@Uh6ZV?0stZ.5d)K!;VN
%+i=an3`BIXe&oT2C0&dpA#+Xu+sJ;V`0=M2VKj4K.t5km=sj2V2A%1]fm5;!8sl-&h"F'[!:>8:8MGbHgr0QTXN=3[(9cbM:kViR
%aSKhW*(qPFZlO7,oTV?GKIEWsnm.Rp+Ic=[f<JcWBVVlrX#UR'h7aasGXSTWPJ7O>IXt#rZ\sua;1*kg%2)U@0KtbC4:(hmN1TmQ
%!u&0aRQ-]IUQ#k!KBneZTXO:Z5"b?k'Hgs4Y+5QXR5#:fWa]X+FgRY$+!O8+41\]'-X=-B:SIQ*</o$s8dW6lq&r[&nr(e"D:rd^
%CY_j`ZVqgZRVHF0i*D3i.E2\60\<uZ.3i9V:%uRu?63k776@?J!?DqP;6i@Ff5R_m.*M-u^NHns3T28_L*W_/3*br%UJaX`m0)hk
%juuj.\o?JjCn/c5I/A$r5'>o>[V\#3ZNrN8*t>g2h35Gq^`j%WSX`YV5q(L(&Q*X@AuI*eK.^eq:W]#YQ=kT^cg0aXK&2f0C7MSl
%<M^MjLN]VZo%mj4Z;hsu9n-Ikn92;5l,3l>d]uOQ&R>aa7"@nX%"Sd$-WNsNEt+eGTC2Co=u@tZ!JKKh-m@-[>d3eCZ(oPP-&#[W
%8T:Gj/b;6*#:*;"M2+$ZQAO6^7Ut<t39=stkZ_It72Z9,+irYtrK]<hC2`hU8jbbuCDA4IP.^!JLY+"4/iJQD^,\a=M/iWuW\%ai
%@U5"O.V:8e4Csk>(J5mG(T!B4+HG#)S$`*,#_L+X^EpQ<a0\irD)2\XU?%R$MMu=UB8l>kr.\dS:4R;=H!F$.]*A=Zo4:j8mYe:9
%lgh*t&'6^mL88A!qf:,,Ca.tnM^l>U`Z^g-M_R1#Ws&[EeUbBg1W6eFngll*8nLuX:82k:leBgZf=__SjI*j]A-25T^BjDQ:uPB$
%g:^)FqBAcB3^D+hh+L:Y6r1dk]HIZ8bH`%VL-&]O[hY:"1&I7UL#[9RN[\K*0"[R`!\C5TSu)9\3=jKl<Lj1pN?8]"0]`r,)Qjs*
%ns00,-fc4]:]NHan#pIeWf'uGIh1Es]`6udU&hE/UMD,"-`qm"G*`:<)jXK-5k$0[0T9:K(aCSIbF)p9?sO,G0s__!##B3,/h"#!
%pjg@1NcNQrESKsbad;23[k*QP;.@-a.8W^(.qMnmXBYb]&*<op-$H`+P-D0ad'd\I<-)S?B^4O8:CfKs$tuHb(("/G(bhV0-S7WC
%O1*Xej7)KBIc1+gd]c8/6RS<>J8qg$Am_(@.Kq_i`O`qaBk>P)<G4B^eEU2eU=B1nDn.lj'Gh[C0s4tLUaT!fCI:'=TXpKk;D$<@
%5\4g20;:f`5$l+qVoedXn0)hEX#P;b@t67/k$q(U[.NalDre6X"p,kpB"ZK#\02=`PWP2N3t6sFY/Jd=/YbrV7XXTk[Y%=-VD!KY
%e.EZ5)VL=*^jWliQLC"YaY_oMJHkWrfrL=.L6j=o/Dl9;\U[Y($1_dNgQGiA\@2l$/7JVDIb3ak:IJlqI.OgjOeL;T_T4Ff27Xj(
%B]O&C.M#;Z?WPh]9dWlX,oaOG0I$?D[q%9j/KheIBc\$gCUMY,0)Nl05VPtWc^"ArjP&Z.RGE(LdJ^q$!G<:;gf5f!)ETr%>#QbR
%3r[]A^/f%\"[1+'^2-.1Hj\#b0nf@L4:Z*50h-jJjbP=r&Xc,-^k`i@!);S?g.r_p3d:?F`QfQ+ImL:91s7@)n%4#jYMA_Dbg56Y
%rI"f5L$fFl["]1j\X;`5&%"5JL(ZeIId`(S<#Hp:,.As'7&E1D]S0SkPm#?CZh-odW.E=8gYo/4C#L"'6Xg9sX(gq"16'uO,je%K
%#:(T\<Y4+2N"AmfMo_$)_sYIBbjiL&7iL(O<Chu]rjF6[LkQX+Ib>uL&^b1rd!\M3RAU/P6]17A:58<eG_S4daMGC:HQZd8i<Q*A
%';-\]+ElS&71cCKOW7uO]sO&p6Q#b*T+rJ!"Bs9WV?6Bf9k9:UI;%HR[8Wmhi</oFBHP-N$<$gW*T4k2bt"04Rn^TDp@!1_+#FJN
%[-[b+csh@ulg]XP']2ju*%K?^mMtl>b-"""6D<"#%SZ:7LMUYc]abK[enXnAN$Z;<EdI5N$sW_>/,LkUS-n3a:L!C84C3q/-VO2'
%4.JVes+N-@#Qk[=48q135)MS.)ucg<G#Y2=/cP+o'2;q0^la`Ts"<L**k:DpP.4NDKVI7M&p+86)Gld[Cc[0bVDi"`;bq\^B18(L
%45qBc*$P=T1>:F;Ng,OFhZ;JNB+^bNbe'rO_'+A>8Y"TP@0O^ZJ$FMt0+ie,flH]A3bme$]S*754SNX%oI4n,W[Na%4l_`q*M$23
%5"6Z%L1G8'L*<]TTmf5G*F`)KA5u#L40Go]gN'PL2'V/IG$!9>_V@nTg1hu]/qhLma'o>ARG@tC%`G!:/W]=SB"Z`I#FddZKdrK#
%U!da3:*mduo]q))Nr7==.;T0GT(`V"XbmA9#?k.siBmjUm]fGPCtPM!"0UKU6>dMM2kja[G07"lrZQKn_bHQcoV>P3+@R:9r2#$c
%Vu>IC5p))9]i:Ef\]l7;kV0mWRIgaS*]Z[A//B!&3<\LLL56"bUb.s>]W7KeaW[lD@>.n8G7`@l=cLe^nIkqW%`QthN8*6)/FY_8
%HY("%4u]YXg,-"YdZW68?TS3"-drY]C(Ch&&Sa_cg7H2#:tR>#3^S(CUHbs.rAXjO%]@d)ES7X)I.9M_MpE'rMgmtcj2H/_-5REZ
%%U2r5.A6F@^1V=J#Y/F/`\]-EnKd3[U7dCKD-,PLqaA%__DP-1]'oA#8^4/N+_;:Y.')-Xn/c?/Y$A"N!q(g-bR*^dK2C&tje<"$
%$CsGfXk>.Y4<@;(4/pG)3Z)O/ogq^(E*@Iu]h3Sh@NFZ7]V`UiV)[-5?WM1P"fPfL6cY>o^I#.WS_\LX#h0QsfrHK0Z(;^&D@E'K
%nYZ>ef,]C"Mnh^]TLSD]h1K/i-Gq+fWiB88.Q:>(cfNe'1W*Ac\6L:l+k`c)/WHnOnk7MZm$l1@\a5"!JkgqLl[S8bZ<\61nMjE$
%\%2uC_m1$/4_r:gE-U+gN[g\ZMcfGkcmsTt7@l1Hruk'D2H?4SAq!,biY-IE3:a1g_oIFRTS7L(+'LTm^uR".hCM8aaU1S'!<O+R
%V6Z?TNaR8uU!XTK(ssPZ#p,FL24KdL&</9)c*CV4=Ig\+fnEkZr8Po's,jf6ANAmVWMAh5B[]RUZ#$NOSjGJ_Da9BNXbJ^TciQI5
%>bbKq=.:G@&7C,5h?T.Cd8RdA#f1h$BDk+>4`TF*[G.]a-';9f]iUmbJAPFB4])22%P\l$0]=T8(CPB8I3+4e$7peb(r5W#X#o=&
%5*,Jp-<4Isg>/@=W\X<$msPudgG1,HadEb8O@>:U^@c8WG_),DH++oT_V23a6Ht<7f`*CpB7:<U-NGo;!7j.UUB"_R=H%SlK@YZV
%)q2qkMWNM+/JHO.1C;F^7T8HlU463&'4t!L#68Kh+8/M:;B;%G-*pIS`f<FBO)$D%,(F;3dAGIjg'tY1.`>>L1&cNo=E_briIf/<
%SH[s8cg.n3\8"P,j"IR)K0EVhr<@^@X!N?1S[MiBFF`&:^HSmJ[,mIY$_mB`?'meb_7."'7M,pRB*jl&Y>uZ?*b6b?5u^eP5dN+6
%[gCuFD!J\eJ?i<\%)R@)S@W1-d:6a=al%M]`,TIJieP5i!uAl:h\5N7;lc:)%DN0(nbrhG:D>sE=bLT'gIBr6lSm%Z9)_$tXuNd_
%$.r*?9oEsLA/XEA%;@idF1V!2=1a97J_E[),PC&l:Ygpa]7R426;qGjm'i"0[70sfq-<1iL$j\"j3+$uNA</#499)9@H\_[4J>r)
%o,hZDZL``6cm](T#MMW1Eo5\""Ce$t;0S<Wj"Z,Cfc`:*3d#SSkVG'rP@R+_i,OD7NN&F+*<pM8PF2kT]Bf^"+f+!g-nMdC0^.u7
%jnE#Oj4[8(F,gCm=A&k"V6YW`\R\sm)+JZR+?q!$_$'[sHfASH=OV:FcJ8R(<hJu38&=8#"_W"jB#P.<_$$X9l.$QY_.6KF*eVQU
%O)6Q'82QYQd&eT:`N7msjKb)QB#0iFCC+jbQO,j]Q7NSE8X_PYaVj)J/IC&aQ3>QN-%fp_DRG"sA2"g6g%jg>&klCl46tbs_c)qT
%#m?l4ogj_;A2/OH4;rAN6oh[g,ef=JYMHW"(6<AiTO/3dg.I`-mf"Te8s&s*;j?;3NNT&u_&hF=Eo)fdVDbf`-eoN\@(&_6XmNQ[
%EHt+'[Zq9jVD>Yt)bVAsX<dlVpV?6G'W`V>O2k?8-?e-90L8c4mL#emKES@/UgD_H5UE*"HdPk\d^o**QE2E3Ik[/k-l>Se\rA#/
%QI#eML(M_C[a[8*XmZu>Z=0+73X:_RjEKcoN$T]q](=dn(a;qP14tR_M%8TsX/$t8&gZe(e6MZe#bT+qo@tArP@\W&<5/Ai&h=:@
%8QQY&1VarRWbtl*S141a8!92)#kaa7'@EPM'gAcn_E`K?c[7;nS@&9M0&f/`N+A7g1X=[3Q!J`Rem!F*%H/tP<34FT`"N&#\jXFQ
%@k/5s*X3=@>Za[%Lra0^&LaApRtm1IlZfbl<`!+BaPdN-X]U5NM,c8QZ!eDNXd!!o.',un7IV@ul9@umaX_Wf2%:Z7s*/uJa>6.k
%4p!cV@FX>MkSj*r]f4X@pHj?,^27d9AH@-$bGAR*Tt:ffN7\GX)U>\?kVs'I%"jQ^0OZUOqX_9c5&PDZjOJ*\Ru5]:#R6T@]XIpo
%@80J&3hulOa5tiarTYE%ioUuaWN-OTOk??bFeM81kEA5c,?bi<c_o<2Y').In?qE7`\rp?5#C9/_iBOb'R:bQUL`/@1`1dM!eOdF
%bNj$6G%I]Y`QTm.'X-n[T^5=9on.hQXr<Cr!0A/9MC9hs7'7g8WInIal:]qe1XR_/R&BuBs0[3->.kZueYZGQ0#G*[d4-FtP&Xo,
%L19)X'#PWT-%E!b"=r[3BS\&o3Kj,G6kJ%Z51Uo5K+qDFkgpKm@ed_G7F:C?ZS%RZk%!PogAA9K^V`3[7]37;nio:g6nneY"KF9d
%Deika%MH@a@khu2U:<fk!THW[G?sTZh/D:G<Iuq1`<D`KR?@8*m^mNe!YUV'<XA#3r9hJWFbfnOg+5LJjcTO*d<k[iD=IW_X]2BG
%1oMta$1B;&NN31TXKJhPMo==%"$sb,'motf]g^sNCPWg5o?e*hZcsSI+J@,:HSt<LTsTH'5X?9Y0Qi;g>or/p_rH.S8#U?tMhmg5
%&!(L<S\(*oMt\!.bGSXo'd(N?pV3_gg$jRCGSd3B?koACF,:0PlD0]=h%^?59QPTLe@;s),Zs]Va-9fa)OhWq^Pt1ii\p#ML^#>V
%WL_>T5)&56btVm73E"YtM#&&$]-ehjD1JXXaB6Ae3N3pV3[A)9Ui2"/!+o5k_Ab&-d=Nk;\Z<\_$l`=C/FRbK#]""G\L$1#OaGh\
%-l&:;/Rea?)Zl_ZrR2r+csRG)#jQ3Q+uWiM9+Qs55kn[b["o/\ZoosLK418\MqA#:@f<Zi"Z4lGJ>W$S&]6tOI9=Dl6QdHd0gJh:
%["o/,Dgkg,cso"ARRJb;c*<'.1ho@l-fRKi)(%BaN?0kZlGrQO=q=T7;+4t#.\NQK[7u`^]3(>0M][c,o;eo9^(AAf8(g>SWVO<B
%I7qa896/k$U&W$$o^I[ZXF(N>M[Y>WjFIc/RH@Gs2Ol"KQE]noGHJ7s18FQGK8&8B%F)HLb?\*cq2Ep_#W4:"&4&!)lBf`NdPXIG
%G$;9eBo<<2jO_XjfBI?]#;Q)%DfIM*YAsFZLKk4\iQ0"Q^o,"7d1J*4QP/_5d9sXaIGTMpY`9pu[Q^i)^$Z@hB_OB76[L[4k-nY6
%EqmrBqo>r<"2<#I>8!0FG(<$A_I.eNC>Ad]?Z?c&'T$<0mq$57Ka=e54j4=R^-U,cViNI>C($gSYmnC*:q6Rg!1@IQ_d4Q%#(;+k
%hOaMLlQ1dq4lNgAcjg"Je'u*MD9][/eaF\J(^AZtMk4Q?*,l\U)'9)n[Tf]]CPP?LL$otYdb@,B!YgB;K:.u=n:ms2]>ab(5#6Ol
%N*[dT8;na/cb8428&WoF6Tls/5![oLMb]:_DCb*sXN89N1GnOR,Bta\^nTOe07E"G3DMe)_ZN0^q!Og/@/R&'qk'Ne-!/sM8Z)NJ
%\4$i:1W==g_8'E`5ujWS!,[WA2pJ`J!O>g-SEi0,4.%"Bh[,/POob4`A5\O<%V/kjX[uof[:C/!VR$Z47Q!.J=UuS#(p8L]Wo(PP
%ACsV"IU2fQ2jfAjf1_]h0XIWuRnTH\mQNQ7phNE=(H(+/`Rm(0@/jId:""FP1buq;k)5ZHWp[Q"hq:0(@&^j@$EA#0?1l1sc=WMt
%<+"97A_IKk00ZVC.8JD0h8o=("T:4,<]F%_X#H#B4)fXl]DPM"*J\4dh/qOom#Yc,I0Ut"gl+\P2]tcb%9UtskOau9-R_u%o[Q;0
%9_H*e+c7)HWP4J0YsPapq@48boD)%=QBRuRB@^)?_4oWEhJft^a]75<9MbKj]'n1[!5')O2-pQ5\dEDuR7#>>QH4il)3;`ZPcaK8
%$[9t4X1U\.&!4`_J[]onMeTJA)lpX,1u@1:UTn6JZ]OLc'Y]`"K$l_oiGHt)LlYRXi`:@iqseWQ%$7/@77JI&Cln+&3-"sf?[%_C
%e,o@H"FbiJWpZAO_ki>_6bU1Y>g;5R)UP_ILF35fr53UE(Yf%\P9MaAMt8bdf@u3B\qB2kBQl^,AG"tCOFq-*S_oTpb(KeJd6hn&
%0WHHX]_6pAV@dQG!sZ.JM<*sSaOeQu4O_CjStaD7U$r/-49]5K;##RtH?Zkbi>IWlhG8AcG:5R;C9k"kE[Kbo8Q$8258\]Y1`Dg-
%9L7P&ArMe\NlQ,\.ou%6EMY;t.s\(922.SUN&4!-$S"J)Rf-YeHj4\[OunR!Hjo5[7e=.:f*qn;4q9E(`+1[44bE4uaHKY\i\T<4
%TlPLq,DZJnR`bM/4ehHI]=3fLJ!@d]OJYY5gh#PSI)2ZFQo")`2DYq+#fKu8JDcuMn,=<>J-5't,(\%eX<G-ii6LMVKb2iXh>,$=
%3Y28To_cl:H3$DecGS:"#EqIbF8O/0e!eL.k4TT+jBs=nanQD<lE]jE[0cn:Hmu',GF^I*>"qV`/5l["b:8#t#42L2akbh^77dhs
%N:T\admMA`"p^1QU%bMFCns=?P_#DZ"fPNM:G3KM3/ob]&.Jqj0*sQlLT;_hd2+HEoqlOf5ir7:?"%:VJihUKAtq`%kf2@&T/NuU
%0nX:aej*;?niIQ:`nAAAY+]$RHhq1IQtP-HYGZ(Q,NkcWfd*qXSf]nu>A0,C@LM/*Tl#Y7:km/4BBlBC0n<@o>L0+cZ(\EJ&>Wi'
%MZhNE642H[-<>d0).;g?L*A"oa'ViX0Z//7j0e#e6+%9I7K[C<&s@,ujG!8;Q<Y4.H@%'Vae>n.GtFH%A6!j<]-*e&QbKm1d8A]H
%mK'/E12';-?ncmPC_:_knV1a@2ERd(3=\p,E.o^OC7$Ui+B78iFfjm3-H*\"'#PXM1YoZjJT\/S[)$)'A?S=W[%.&c2qsh@ARJb6
%n-d@bct%d%C:-=+9MtlGY$?R;DGj;n6XPnKIQ^d<aF-^Jk<MdO;bSA:9]R17'_)S%k[8hS[#b!7@H.GYe0@OCRP^F=6;<<NTj?VO
%*&pElim$XHCg"(i!5]DP?+C*Zibg<SAN)0[>gI\G5=Xj=iQ$/,'*_:\G)UB-n;q`FZp9H8$@?\m!\nH<huI2iK];b\@;*gdcaVD2
%ChtQF(&]<mgkAc_+[c5Y(^GlGSWP_6bVS51_YBP52`7oY%g_DKJdo.>BNP]COI_;7!Qd]&nr[b^.<$?'+`4]h:i8[Y&isk\*Bg56
%j([Kp_q)a&*+t#Cc+?Elg\4kQ1#l`@`n'/.YMEkMN_`RBieDhs8VJ'$/sWNA+_r,aeW$r,^YS*&2sj8:7Aeth@MU>Q[)0&_OW7Yf
%*/L'!(Kpm"6P`%!q3?u7GMJ4c:W$iV845dlJHrs9[B[Sbh6Z,+CcaU.%43:*q04HpaM7gEm'7I"*=d/$lB%O,m68GQU;E-ZJr1j1
%gHIA+_laL@s'VRc?Ir<CI`FJ!QK0S6*#fp@!].d;V^$Wj5Qn<]a4%+Ha""Ggo-HMF8+WJq$OuB;J8b\U,Pc6u9hLH)E6AGJZ?WD=
%hCMZFS3'Kd90%"pU]1[Z[/5iOS(to!q"5E+Z,0qeD&-P$`e'0!J+qKfk_E.9)nMcI_F:4U9=2Fhq%:,GU"J<jglY0!d74c<+jphu
%!T+t`2b(<RBb^4W1(o'8:_8S&X>os6@Bd(e64Zf*5<e#iL`rJJiA\.q$UR7nptn1.JM]dHnL-?<R=3mPA?c`4S\?!d7R>TZhV8tj
%e#eQ:+;tS<P/,HtFlOdt<4s534[0/.Ln,9a[Q#'+#%Qt.=G+JS*TB#L*YQ"&Xr&$=%[3QXM]i8m9qj6,/3uqUo&D,:"bGZ6`:02q
%SLZ3CU01H5N4_E-N%S51`jCqOFP;:@(G^RsP^)/CaZ:kYA[NbZiNWlAm)?M^O?-]Pbu9Q\-LKh<.CtE\0k:!PMS,GbFTo1"m#7Xg
%ir22<W1Y`tTb1CZ:SEhHa3fdVRI6F-LLPWkDYcU<.<N$CS47SR+WIn)]'jBYM>X`]FTrXKO>;ifdla)[kgNCKSP_nd\=5A'*W>uI
%.,rAXUNi_``K(t\K0r',r&Ur]pdOEr=A_@Ian(BrREO)'IdeOZfaSJBC=&)CX5]=t3'M:BFjX_#,pSao$nJt`Ie%A<;hV`6=o$g+
%%c]dnj%M\3;\dYn'6ll&4r1c?)ckj0E@`Ai8pptaDra,-O%K]=-!r:r9>H/Qj+c-a0_lO3U5[\_Zs3P,65-AFAUGI?-5n.o`8h)P
%jr8@dUm-kDN(HmVcX1lR,Q!/aL.q4gYp:^2VOaGcibtk<a%.FbaT+SbSGn7J-er_dJd!\H`IRY-6BT4_+?3sP8FB@'(LL&QbU/<A
%I^@WM>_PE0jB5/I`5fGn!i2>7&4aGU"W\q>3c&'9+mCL%_YM4]KgDC\K+j=/mHY5K@QiHoA:BUMVQka30DK]&keMf3dA%N]>#&9\
%%gm[?eUo-JH@WdTf&X)oW*)7X1mSZjYjfAff.-A&j-R)MKDBZ&BVWbX.'X:>B.bWdc8tUj.'A=m3.[TbHsO4l%;Rf/\D'8:oT1Zb
%Ne6L(QX<"[<dph*c6P02<XF=L00TuVls<G\7q+R@iUD2_`WO/fN1D\R^B;GLC7u5Bd#6!_A?@:.ZY)+`eoZ3@1j0;7g"=&gL:3g<
%o]u4(T:g>g8`6r'jEq.b,W6cmqR&C[NAL6=FLeE(L6uXR0fcV1YR=HX1MlK0Gf"6E:YFA5Y!M52oe@,D3=I]5"=8[F1j)guHCPN?
%=d+a9qEA<hC2A"U5F@hZ]n;;p_0H@_ioaJ;F!rVs1m*eX:Lbl0<LF$E:2FoXQXpb0-8lV^cE-"2HN7rg*a?H1>PnZOM@u-:1uMYr
%=8X?pIbU`.mjsWfp,A@i,#f8'DSL<NMp<3e?m/kC&244F92`%fitkL?0+/\+*2k<\oAXh.XAIXO/HLJ1D,c]s6n?oA?[&m#j-7=m
%Q$e,kge%Srgm)ZpnnBgh2><fT_rDa>FD[9I23btp:e[[;D2:>@/n%J`L04Hcbsoguk+u&3B!\XDM>N"@m\h_0QfN:nr[h.TahRZ2
%XSq)<YsJbW3]CMrb7*(Wbtd*(D+Q#[>(i)6]V(]3XM`L_lPa6pdNZDu8:.ljK,QOq\NjLTh]Gos4R'^iMsPh0C[@/Yp8*Hum$p6N
%CG[K#6.0Nh9fV:N7%^l0-g<WLosjOZR03%Z22QS%_+k`=,$faagh:9+-m$na>EAa#,[n6I%8e2)L2!n5VHbS$NkW@8!BdlbCU%uM
%c9MZ9MmpK4"nGuu`b3[*O!)YLQ5$ZSrJWV1r<$kl3hC(g)Hati?bfK*Q!BkY=+uXLi.;Z/Q35cA'mMkKN"J$-.*H<G/c:\M$G_Bp
%F!u,()b`.g`%-QrL[Z_3n$'U%0FUWt6j%mjObE_dVHU1\?uB?eBDaBu+&(qYg]=#](toCK5$0u$g4:n2!FA8&lsHej2%LK'`YX"4
%>6pr/_B'&+\rA/]0hnh]AO1G5B^X(Q>_^@b<YNn.En8Qei"J8=H@__\J>%mWfJA\1aA>:BftL,^KI)JHR]PFBMO(`mJE0^4Ck:eK
%5=kVRi\MN]g=R0t_EoMA0uE<i<Lb/gBO'r+J+kS"Vc^^__Wii]'=!cYkTH_2"V=Er1*Ha.?@&pgVIX?GTh>gKEftAk4DZDN7H6$Q
%VbG@kLm9a5%l\a#GG?,!L7>I<63ceNb<'RnbfsB9(]lZP;i.PgFYPL,SD!:c@.25JiKN3'`:cif!+2Zr$k!3_ZS\amnK?JJj?rk9
%Os@4.(Vh5u0;$a1k)pjCmt3Wb&j=M0ckV"JJnJc2'uF1-o/VO[p1X37d<8+Ij7P:CDlf.'0l-?a@MZ-:9Y?JkfnJ5b9cX6_\kY&:
%m(i,bD'TPX#-Y'=2A(EOQ4)#nof>^_ntc5ZehURhh&.J,S(-`7+o!3OMcu+bi9m'(8^68Tiqkul0[BGn[L;F4&'41r!kHZs+c"Ol
%VPOUoI2&:4VQ)Z+0oVW6#UcqCJK&t?O=idKA@d6(_!b(FI(Q`&lU9jX::9DQn>0W1M'jKpR9U+YYa?XOEh6<CFUZg&%`]ibREPtu
%=>c.#r@G7.^tD("VRQI%n:>N8T22LL'nmFNUf>037!U=-d>)I=)Rc6Jjq;E0*SEp2ku*)@@Cn&7?9hJ8$;^m`%91$/[,Z<u#b#5%
%H,YGS=T/q+Eqodtp'o(qK416F/-U.6I6OKFWRlMNNg<>q[8Q3^hThu*"!'m5GKI8sLrnA(aH3\NY2N?Ls45R\Dd]akXn,?9+RFe[
%fEfA"1tlZ,,tgIq<r;qST0(:AB=8l@p&Tj.B@UXj!Q.`S?#'nDHc1jt9WaGYTuXus@]J/u@5<;<S#gT]3R/T`*\^fg2P="W'CH_h
%*5s/W=LL,6P770]r4[D7)Q%V(lm(.`bW.keq23P3K7g,gBXG[9G.'-^%R!u#bF*8XX6\D_*#'V_-m,M-T\AKIAb9TV[rs2!EP&Ga
%Xttgkr`[81Z$&ZOBGXiqNJRo[,2GKsh*FG'L>O)>rS,&*>.#%"2IYsl^&SZO01cP*<F_nB1S*Z?(eO"/I^LWR/5fEu2XX\S5gu*c
%p"LZr-QlQNMI3ZA3NBCZHs!3HK\Hr6D"uR=.ET247[J"F;.[C/-VA)MGmHlt.!Csg=MQ1=*0sYp;A02/;.2\eN<EO:An4d&,pP%@
%![;6H`c^\s0][&+E=,>`hIn6%btF?Meb&VC=QH2HLJK?&E'"SX1Rr$3?RhN_KJ+d9@>0>%?@5jT(ttm-6[Sp4JZ1U5R:*2BYMC+k
%fR3CN55<L'Nm\#!O)\$).8Yb<D"Mj?'g.4BMD3N9m*\R+&r1#iELVJ#1H!tEU4gb<r'O7Dks\nA95(Js(j>AAEaOPq.[esdP=\5H
%LWi;3FnX[R6#s\4dSuUilj<BO[dAZ8p;lR-N1:(43\]@\d+^cHno+baG#-D>qf0?s\2f-Sjl`!tO,-)?cp:MDbB8X\\LDt,2Bck/
%c`mABA"^YJc1g$&0($Q+Lj;A]UMS[/_nGigNP^^HoQ=\14jS<d+U(AsB,f:=`pC;ZM5`_N*=1V'`#5-JQrpBKY\f)<ZQKljfD,bo
%]'ZJhZ@CV-;-tZHq)125[Ddf*+`s(c%@n!#l\9iPrbqtmo1tU(9;)#pCE&m<a@I$m`4!kr=$*q3dM[2!CU#=u/F#>(C2l8^X^/PN
%Z0S\Hc]F7=IS(I[];Um^'@^SlEP&n!EAZr`;uMX\<Vb<b\/d_4;$'Oo;l<&bLaudnMH2u?gqS@0@4Du7@A'q6<FDU='\t1t6^]$'
%;=YRYDO&m!3b3.6<)PSZqOhOCG+F$7%'<Q<'PK\ti^M]`$sFQu3\V/4habq@60niRhT30\;!NgOQ(ViC%*j7Q&f=*#b5macb0ef]
%[>POBL*@G2nK0Y&Y0F3*0unQn:E2.oLqU]'J%""6=_O-;1sb-8,'(Y]H:PBLZlta`%<"pU"JkfJ8sO;J!*rsi8&dl6bO'@.76>G_
%CK"ingKI7];K9X;9igXp^&FNMPKF?%pCQs.'<U@o2+\Z+q'C$(%QRA6?3&,YIH@.2`AU%_Q$DZ)Ncrq[_+SI$f-8'QK<\f(gP3H7
%c/Y0?2T4Z,h+hNN4Zl9ol-SXc%E88I8PY?^j6';IBS(7%E:jAnSHL;I6WIf>9F=1HkYb.VdeS1k4#9%ug43*2mqm@&mNQeWHQq@!
%n.o-:9fHDg]1S7XE?o@V:_g)mIiD85HNC^DNu9GbI%@hb'r6ET1g_$8ms6aR+WgCmH+#F88>VXa4A>buTU&@MAjl222I0FI1NcdX
%!:`Yc&^^<nfgk<<rmn,>1PuYp'8R1lF,<0R:Q.[`VRVg/cc/=T>7Bkp1DiJ9FgjCG.CUJSVi8/JU0T;TJB[&-[1!^$B1Akt,T[^`
%LbJ20qsK"+2pob)F50-Ec8*]8[b5a<85?XK_`/>*3"=RuA"Ea7c1rC,Tj.@dW/+^Hkgc^oWnSMdU1,scDoGBj`&B1;F$Y0aeA9jV
%%8l-+msMe>?lbMAQ]\p-+A5qMIXl.VnZ=Q!%*ADWGqHL]:)5\kdd6Zf:%^tpf',4oL99l:M`MYge;#SiJ?Et6Acb?CcnEe]Ek]=W
%iZgei[H?&]0#(&X`O=:7)*R\pA>D(NT54#n4FE77<H?58R:,+#h,YKep41YXV]ERma:SpVR-o,_!#7\K28ed<P1HWdkHlJ/%-X^q
%D!nouG.E\$n@iT`jpb#aNU+TC@a$X$Bil8JTGnEOheIGcNKI9sArXAVZ>NG9eo]r&"Pl&1VAk^$+gn6f1L+qQr`qHPo%,9=lGfT%
%C$r+o1*<5\#ereHQ@]QH_jQMHF6gj,n"&];2kItjEgCU%%!OXR8Mt\PVAX;klbJFYp*ZL``o->'deR-(*j"^uh_aB@/.H]:`kuJ<
%K#3F;0UK8b2<2g$O:d1K`^jalN$iA)krKkB@o.[;qPG*JE9kK,r@Cf!Ald^30(V(pUKSYu'@^KePq@L(;N&ALd+7TNC,*rc[Cc*g
%g+G@KPM9H2>0LGLkIk;.lE7,*_]>.([<R4K1oI8f1E<j#W"sl+jQlg`FkE*(NtXWc.NhR?_P:gXh<6A`q!d!*:pD)2'+k.0j/@Q@
%K3.<0T[s1m7r;$u.cScN9FT28pk1"OF'%aI?ae>MO&ELRX.]70H<--U#+;*^(XU\Xd=J;!&^);>,)mFg?*WLB=\3lJJ4R9Tk77VT
%=QLFam"fCV'KhI(D_APc'G[qsrj5l.EG/Gg5,jT4Z=HHV$YLeMDBr`ZB\@4>O9mN+J=):X8HaRBhMj4'k4E!n9JjtWp?=ErdPQ7'
%kW>.9IR.7G)>i>Mi8DDD9gnuRq^2b#!@h4&9>j)oR=,7L-Y.Qu,t8-D=>2IiIF]_&'LJT<+OS):4!r>YT6D,6!RRkt?"@%gY^n)b
%&YOf\;ejX1fF9?1)B2_`=lOE=WMGb?CK1D(h:U2LP"a,46XP&%pK"E0<lJZDoMQa9-3@-4!$.M/_kJk%AGq\uBfAGC;"9l+0FX1G
%ij_BPQs082iZh<NZ%%CTb@4>)O=Tdk&H]SfZ$n3FXd\]S9.>Uemm#5aG[G*N;R@uQ+Af/b+d>94==`Vae`Io^L`n!tW,RJ<@ih9s
%%rP1iXV7XQ(l!a66:Pu1;Q_4.jLaAh2sLf]Lgae8"?1r(d&2]qHpM-9B%?;*%5ITt[p?!J/;"HN4N1JHeX30oD`\SVq3dt!gU@uV
%"k_c+IRC.[Nr#uQ+-%oGEY'XUVj(-0#]`(2K]!0]Xb4t!cic=*#Oj"4(t8"5`8@.A9uVii$DeLaLr#/pbKM3fEo97F:E@,kY'Y9Q
%1Wo="$n\UNgh.=5C7AS?3njM;AI.QW&b%'Cng4sJ:&B*d9L.$W6c5VQ10\]4rAN+NQe#jje4e,X[O5`lYG(*W+=Js2%FG[-J,;,O
%hG,f$\#+HIq-o#4Hj&G^((*Y[(;7sLgE:iV,D[hTNQ"3ORrD.gE;4;`!W3?8U;mA'B(H[871kIbCX'G'1ctg22(D8k1GjP`SBXhX
%8.H>p[o%s4fo:M!cCs>\8UAoUHUF`uCa7\on<"ZF343^l/uP@XX3BXQ,%E\X-eAUWrHumRMhC<=E?i:+bY::h32E`%?0O[Ag;@0C
%54)6u$43KGA^0]-E^Xhc/bF0U/'GCH1uq2nK+)]AqM&6LjS&tel=9\HGIBflhlmJtksfMh<5`U(Y<1BY[_M7F2t[!r;me)?L*VeS
%\:os\)(OYjg?<rOq%FP?rUIGmAI*l+KjAXoRSLDL%b1^elV0YopMW(^id3s>5YBYrJhU0'-tXqeZpJLDA7^E!_AAT*"K;/2fdLO:
%ZJlpVG3u:AKWBK(e*A?)%5Tbk&EIt"X=S_h':"![+MJ%-8ZB1R_a8SC\Du9M#O4q0Y6B`rbV-7$aF0MVL6a16OC&guh/^4q+SIk%
%s45R20eUH\jdJ:b_Vk4#^@+1$cn7cX(N;:[r32898RVD&?*1DiXRJ6[(Jp]Gg'Xu]f3QapO[bac!^/8K6DHt1F-WUY5e+Y#7KaF@
%VBZi&@&=_L#e4g3[=6jn(\tsV?.76g'[*gr`2\hZ4.J!6Ds*CF)"Y+D_eINBSFCL:D>E0*UG:DsY!g"YH<F2E[U).a6b!`JnOkVl
%reP53%A>Ls9dLkOkes;)_b=]pDQhER#O<FE@lNUE"C8&**#]S2'QqNK$3Xcq'.-]G@8d4n?BSrdYl^##T+WZdUj@Zl8$(ST7H^&&
%LmN4U4ltV-D,ru36,&q8]a>42nDB[KD6W7h8FJ!2&7H]O4&d80V"c)7.b.U+k[:J`ZcgqAZNDXEjffK86H^AK-<gpT^kr"<,;V\O
%4f$hM8GDdk5M^!O1`!(2AiG^%&I3P4Gqq54;`?V?.ArH.40EKIjq?[;pp<$QgLNOl;YX;)-:9($7KQSS[`ZL1UfMShJJLoog[QkS
%U^*\85YMNi1'WQC[-k\O'QNEW(<Rb,i\O+7"ec$/-;/,rq-rj/eS=tT\*3`U<rKS1*lfPjQtSIGon#&op8qe]!=2\uOrX_,+gQH:
%@mgdL4P;f:??:HL"cu0Wg/.tK\tcKr<gmDu81Y-[o$5e!;qBeZs#qgq=559ke8XF%:4ZYT1IrAZ1=YrbU10arJi8#bk`qp1Xm5)$
%^9fLb]/;rds0.J1SO3O"c0YpLqTQC(9"pO5BgA[h6m^'so\PG&"Ui%TqMB)k(Jq2b+8gS1=_Q=a,&5gR$"2#L+RP6.Z&Dimg)kSu
%F.,Dl@sQg.cCi[lG2jDO_J`;4YqB$L%4h7M?2%j>/(d"']&,tq>m%WYDXSTPkj@^Cc[A9lmY>]n;q'1n=OcZ`IcL;-WZf&iILqP)
%B^TK_lL?IFO'M^upRC/4P/!,O;#L#80?#S2>Od'-%W=;OOoD60\(T3-;&nAE[nuM,Vd6C_2'nOD1O=BL=m,'G^gJDt%t+S5h)Bf5
%,8qV2?$5B.6grodF5;</dC>$GU%.*Oic#OcZ$C+E0U3OS6j0F6J>I'=dnH.FKlNledMq`i5!2#_&.*7ZDLKau!d*hERV>G/bL2,:
%YrohC`-O(np'3!SE$EA45me2mEt925\C6!3Y$ppS?U9u";A9HU2IndH:]'/9(FjCt+WGGq0<g!V:F_)\1upf\?ri+8IL%0V\P3hH
%Wek\M,CM$$ffQgnd;54S82n"3VA&QrLT[3#:5_;sofR=41N(3hE%&hCRNiN.?VZA)D^/cnh=b'fY9r].PNb,W]H2#LiCak+SJ`;b
%RLHcL'i$W^_Jm0(6aA)s+Og#rGI=Wp=W25#E&gdp:GanrlF]uo$'s?IVFDo6gsOT[.0K*S,5'oh93#=Lk:?i(;?X"\NYj/<Xpu7L
%GHHD&!"hOSX>)%,o[$M:'rgn*S*?;X?j2d!ZY<\#fKG0+B!C9(T0WkfP`]U9P50EgQPfsYaI'/9mXjNu8K%rt=QUQ'Chn5+^!W)W
%#YG%$,N<fnat%.eZ^F\o8jY88%k&-t](#c&&7$or[^DhGb'<Zs"ATsm6e33j_>G;B?CHbmFG+3!dYbD(INU!a0-SfqV.i<LG>rQm
%/@I]%ChDi90\0jZDp[g^cE,Jg(8$2-I9q"BFC,5+7a5I!W`#]N6ROEW_j:TcP6m^QQVhL5-Bk3$UM;P=$<+\seRV$E22S92-@B(l
%SVa?QhFlFlRqdNc*4AC32*j0+noe0G'ZoZXkM*+JJh?&\Skgc*bnh%9PK@QbIPH!$A25OmW'N?C<6#kUPCRJo,_0)(6/P(^oSbEQ
%A2:%Ta?_\O9QHEgA?.$gK#0L6C,4c*:GN!>`kcr9Cl>6\5VDZ,pP(Bm\?2!q#s'7GYGdoj?!\:J9`hg^'0J$O2[D`)_0`5^[m'gU
%-Yh"%U=cnh10LSr7eC9UR=f+'_']-><]MM%*EprZ.*H$Jh4\7Yc(M2.E#e.Gn&bq@N9Q:*3<>A)UM],RTcXg!aeXMfhR&IQ3]$A3
%,<no`*A]'sgtbh0EcPsi_eu26UA;q5R_;sA\<K^LFig?m5`fd+'HKa%+29]RX:m(l/oHUj;O,Xt]e0eUSl<Q71Kt`_eb&b!".o4s
%d]MkT1^Q\%9Z!-"@[/s>V0=,oKF,KB,Wro$^dsXEn/N4F^.cDqlF0<WBG(egYl4\E[XKI4*>W6#`iFk4XN]1PDcF;<ZjC(I<pl+&
%d,XMZ9mEC;Vq]2H,Wr3'`3oqM1.O"6+rm:n&WZ(`#idLl`EpV0N3?`&W+G=dW4OeM]U=H#>EVqRAnSSN8'<;SM=Mi3NPb:gDW!4<
%0Taa9!G3#%:p:6rctpRLj@i`8@=3n.aL=m2,F5ZO\$-16&,kqL`/+5<&5Js_QY*lK_CJeAP^k[N/`C@V#"lVWRg-UiGdIcAXG=;6
%_[(.LE.$uW$01>N6?F*!0u_qeC:7GjlS/9H)hk1kSIH%E%Q+-(ZjKV"THol9=bVEQJ;%-[0cCLh$f@7M3'u@L][::*Sd`;Q0*\Pl
%(a.oZ7'lA.),dHCL1P5,Aeoh,i4gL9Cq1lYH,i88oH#72"m4Nmdaq.+)c-PZA-RaC<9]O1<1=Vc"+;NB2,F=2;/o;$VKNT$[IXT&
%V>/EV^<s$&l[538plPOcWt+#K`7$IU"7mgGoZ:U7V4jRiYo!%_U,F[nQL$6q\/&Tb<CIHNPZ<@WA_H<<3E3lWg26V>/n43$3=u_F
%LK?L1-W<?f?oCVYI!9@HVm8oVT?+UBQnc,Vj@d477c]57?Eb''@eLB0Y<pR:-L=a'U!AI>,q$:@-p>-Y:j#jhP5u#C&^V[[5G(F5
%G>`Zp\ad*"An&8!D2TRa/KKe.U<r#`R]3^X.8Eoe[^'6MI9AZ70Ad-XA@,t2)/R9JPGZ6eB*EQ/capdDN6U@/8P7,<5tqeE.jp"d
%JMSR<[p_,_FU(\Hjq<>AOY`/r?WJpp.'!MpFiX`Y/1W6m1n4;6=kB2^-HO73NCdagP;fkFp9>t%>jAi3.ZX2'cIi5*+dk>+LiPtd
%pHXBI*Y].E"t/AiCk[GO3?q*XbAp$*BQ5oG%ZX*N!.g6XC)fXKb($(^<L[EUUVgjTh.^-H<`X*704OEh7]eJZ(H&`:-OpEDj^_Sd
%Fi\rWWnnF.K)^mOc$13T/7!rlmmpYFbsIaZ=s)W,o*Z*50X2G$3WpjQGGFZA:nQq"Z3u_iV=<2^\s0*Sb7U1LI5G&2X8;,R+o<,0
%kR%WZa<F$XE>Nud6K(N(/o<@`%WYRXBmn9-,7&R\%%1V-D.kL<.@j%@b<;q-QpYlO2`arY.m+;G5A5nkHQep="5r'\M20L'TbAPY
%7F50O`OY"!l0+u_)&cNj'on>Zq+A-JG#<sHcg+=:ZT8\k3:7_;@QIpcK[&@"pQ#?$o(.rAjKL@N2Va?4$M'6)QK:E'V"C:SV_3ip
%].qR:l8hmaq@_sO_p@;n;P_Zkba59/=_O1mUPkoWF')/3_kC5E]?VB"0um]:1eH<WG>L[Q4FD+=hL;o`(])hIbQ0IhS%LeU@5Ds<
%+=^o!1j);^Ct(oQrG`t:S-[_Pd17*kpRUGolkUYP:j=&')9t$H;H-),b++^P.n?.2ej.3u]:>!^56Rqg2P(AOa$t(bd402sT9clP
%JS=5FI&f!1@@oEkPX-T^nk@c<cj-j-L@#Z>_Jr&$5.[O^cClEHXHLC1O->p)'W4:=\8^)(/QGre*$.OQ'Ftc<nA$CaTs"6gp01%h
%LrE"M@7?/gn3h<TERO0Ra=496<jb"@pfomI2Aa<bf01@)&?C@.^QXc+NjGDSQK&s/F@_S:,W%Wc>QaF?E/Uqiim9]S]jKqJ[D\Kh
%/a37%lANO6b3=:TA>7']<Ka]>X_IMi5N?agL"-l$n3[^=>(?gk%&>m("/S^,"Y-kGA?9JN-)nAd&W6h61H+O(Sc`@e4QTmF4)@L@
%Ai!=f%%+UDfgGD]M_>Qu'kQ,a47KVH[MC-rG11uqkg0iC/NFKMAhrrX2^5f1G]gX,o7<-Eg)p,Uj8KrK>O3#ADHs-u<G%K93k[i)
%-dK/KH4T)*dn6p7<D+Xhi5-fs._K)C>q2Bn+/m?3OBS80Xb^u$q-u9%"-fT0n@&eMdl_]Z>GN?b(7]js8^OKIem:(s"Fb>N?1?cP
%6MF9f>N+58OOFh^2C$2m:%5\C;;cReMd2sWJQD^X,:+dnVhcZ#Vo(?p:@f)'QrF0]VAQ$N'`loI'Kb4XSmqt\^J3!=[Mi2iXO?29
%-P,8nX1bsELkor60c0\tUIiSp0*t=os4ASgoeo(FhYcGOS6'uQf0ZQ[[JIG7Ak$=21R>Y!lP@;IL`*;ll*.2O\l7YGa]'MMYuo$p
%ef'Wc3;dt)`O#&T)+@>3phNbIm!Y"-X1,pM5$\[b3#C3t0atX<AQ*Lj*ZbuJ=T$5ehV%P/;e.>ETeZalG6\4@K[M@!(/Y[Hj(Y6]
%hhi[=n!OY!2,:<!AO#U;`G5&tgW"jST!fjX76/hAgQ#*3@/A^:V&N6qW9c!J(=>_]Hm#H;N7F,"]OD2QQ@)p(('B(:ibdBn@*TRh
%;40t]@]!7<l>.'LDilD"rghlLrJaQL/4[VrXGT8Ha4Vg07Utmh:nj2HU@CPhT)4IYWDQ'Q"XgK"a?!D1726E*S9)>KAqj='%df>i
%,3ga42[!fH4Y^#BDOa"")HblZZVBaKei:V]Nk59k3V0s+-cOh/'?2QY[<]>oBm-EbR<ekR0G6\i,d>$OBU>P$-r+5]*_&G_/=t%W
%TL&?t6IG&pLdIRg$734BD;IFNnHgmdM]_[@B_\kNkOT?J<>"e^Jk:iROc`Vp:G_XYHile,=M+eq]5,ifW!ba\=u%E+\%C+,G6qaa
%8/[If1Ym-Y5<*NR4JJP7E\OCqX0eE?KL+@?gile(6"oK@&%$FQ$P_#`rNqRWlR"8Tmnu9M@+BH]o]8=@b.qFT0%CYKf&mISmr%ad
%'Ng_B&#]Uq'Vh<lQ\E0ABO,`?nHjr!IseEM#3'Q5IG[Snf.FaS.N8h<C-TMMmnZ`mY=,lFq_h@_<=4TH:i8K[o89U9E$0_:([g:X
%h]VOJW]]Wc#lcK/^AuZf%C^-iTk6<n6YrNnUmor?C,,X1ZnGEhW3.@Oh9@c66i]ZB[]\9nREo0,0VKY-nCEWS+ahol15FJ-&N%QP
%M5:E:.4B`]%:b>n1Zq#;JHuuZ/_b1aAVRH0_V%h\Gnl)$Gd>2CO#gn]I-!Na&Km8pl)S:2laRe0lW6%Z.Fg7k2.h(#O;18Y5,j\m
%+OtJPSjG)GJF\d'CVP#A!cJ+%eHL^1^Z)g]G<<rfnL07[^p13NH4pN7NHf8J^u!?f)_ff*$k6"'6(76r:^$UVZtT(ZZ[9jL%NM?j
%>V;Yl+hI$Wpa'(rJ)&CYqVgVF@A[/TF#*r.-9L,,E$[[ps"DO9@qTtS@lSTNC:>Gmm.@-ZSE`1cgFSqNk"Q][-J=n`Zf+V.+C-<j
%qk_*W]q8hAnP,RmYo"A1g^UQOl+10fL8RlPd-T4!rUD&AVjNBY2)oLI-c@Gbm?&Nc-&a+dbYL%Tr3A]-XA9KJ`[I]FiaMpV6.O0T
%'VJi^MPs[Mpp?m7;bpPi'%-J2BrlBV,`PT`Kkuc_;dsF\R3V@#0FQM(]HJ&b4?RM/6EGs3r3l-0id`-"Ar/NjZW"EGnL6fZp_;+m
%B7`h![.6$&btik9?\=9K4J^?cfaR!j#X\(XDLS$RV6_?C"Xel.^L2LWi/NPOG=1#%rAHt-dl\GgU:p'7k&ZnMl?*??ok?1fjKSL^
%X\ToD]@<obpG"a>FB"@Q2Esp%=WA$%$/O;Dm8)s'\\&iJ99[A%ha5r]W`B:22_1V]fet5ahee5)#)*RE(!g_nJ;ht$D,:c!GZq$L
%q,6CF8Y<7"a1U:e2AgPM!(u>T:s=;p.N^ePoMF=B5+m(oFd3K2&B5[PRbVGE'YjFTb/a:J1i<a7j`C3sU!BRWP/FY&fD,Id4%DAW
%IIH_rj+.l8qi#E`%m_.HCiu:edN!Qp.:G$?D\%1#MXo!G(/bq(U8r[J1oo";<Bc@V/T,fb`YZYJ280?5NUL:B]Xnq]'D_KOCGL_E
%OKi)"bmSsU:tPlN=ea2XJ_WIUitL?ITr]<Od`%Dks8=`WZ#QY%ms7C^'39;tr;IsoG8UjTCj?]B6K8G'Gbk0t=Ig8T;4'dPad3R?
%3.Ot/!)TrA$!@$<eP?mBJr.Un]9jJ,a]-?)DUu)\NfQfuPsBY%J1*.UQQ[E"R)"rg!/OZVg7f)Oo:V_S.RNHhGj3B#<?.+[SH3^c
%S$c0g6QPDr#R1=Z`:[.cf4"3Z6*6We31q$@JPT.]?\`T7&OKbI.AKmo`7EZPnqQ[47uC(P&r#9ZAcSr-&K%am,pkNZ&td2B$.OW.
%&Kq3-(mPO<Plf)DCA*D9nMdVn#OpHjBa&2'cVKpf&c@87;;t>`D+bsj\:A:<CDM,SiAJB9cTo]'1I!nlof,sHq%QM%\i^`QMtq?[
%_.8H`':['4H$ht2I:@bpT4Z*F7CF7bXbrDG@R-+p7[7V;Oej@PGU63RN+e,G>%P&.B[RSkeSe,9>-@*WOK#3_jYU1*Ar];$@A`/"
%l&N<NJBjHeU0t\V`FX<76"4,kS@]bL9t0u;PTtUJ2\7#AqN)_oG]L:(ODkQ%f.'>BS%N=@0WgKPWKD%K(unrObr6hIB?f'#6B;d$
%8k`C9.<%I,Po)093shP?&OZ=^.u'Kag_2J*Kl$'Qf6rqt.r4'=?#[$X%[t\TLekJ[\OXfDjj;VSU`TZ.=h\1A#`-5jS(B'l6UP*o
%[L8e?%6kBbmVm0#);$:%6Sp&1`e1N8JtPcV8N92De^>J4D%<VuMCcYjA-s6U?8hVCE]Ir`(q^f\C.(5Y>=Z<oP1AhkA&TnN!9oNL
%iaO(%.ChOZjosu,iCm`?aO5W>_gFQ>pS=S/+nc]^j&'\'X!Q9SE@e@-U^VSFC&X-C<a>a^31b3p7+B)g\1o[2QpW'M6p29gX]j&I
%"j"\O"eBkT2GH99`R;Q7B^OZK.%2bp%IEh2Z47Y84D_=.Z>,'PLb,q/`m]lcns]pM@/K)%22f`p$-LSXoarHlnB8'M$?3nI6-Z"J
%>DI#_N:h3MXC8[pQ7,9AkKS"ZO,0Rg+4nTGm6@X4r;Dp;SKFZVWGK\=,8i)P%>CuQTqCk(f5Z.c4-A``aR>HOn:A]j*DrVIb4b$0
%q#:&rnXot5k@(8F"(EhG<nU)-$>N^]XsOWqDu9Lt!DdtU0EC>Yer3Sn`uU^#R)Yqh9Z%6O!t/%?P+1PQqN=k2!e;;F9mO%%$6Y"g
%1!c'\)JZRpIR-?6K;aH-4G20HmfAmnb.p?GLsBX%Ztd?dLb-9"bBlT`b&(Wh8na"8M./]gE5J>`d?#dHl:T.VU`6*@6iabC_N(ph
%09b`\"P]d-^DnbE8A*/53c-'N(oMF]EADL&Sh0DRoDj<=qkdCT$Mc1)M2qc#*g7A]s29V\`la.@$6^Z(V/f/p9Z34e9K/nR%(Z>d
%;=J?ZV*'V`7lqIF\s]<Rr.:/Kp.r-4F6r3JV]Ynde]s@M2SWK!A4*4rs3Rurj=cCG,"sWq\`Q>.&%&:0-5r=II*ZX3^HX?'BU]Gu
%G\rf!G\N<,G8;LeR6s8>@6b^6M(U4@RbN:fEB9#cF<P"3hcN/6DKiV4"Qok2JK[]fGh6YUH?/B+^/9Q9mT@Kl=1bb7@GAkfs5/8S
%d*%5!,J7\bfV*ue9sX[YA7K,8fA3[4?.DUr&(:@O=Y@ZC1N<9_T7:36O3,<&A7CjF^4=?a^X*;tEc_?';%Fhu/5GtAbUiip=qa`$
%r7DQ(3#;]eSkJp)_83`@+NC>Y.UGRc`nrPq)U8&##L$W;#,>6",pQ!58A7/RR"4%:'ZHtW#bmc!(C*!'=")ORIu6J<R)WP$YMbh^
%TL<j-VV1R0Y.p\UeahtPA(nh-Opie\Kd,dqOB@s(YWelZ.u30"62&>Ps6u)as'6""P(*5]J&,LkrqaBF;F1L70fW$A&-"US1l-HF
%0Ua*]h`q#N++p'#EOr6"n.o2flVkAM3DYlmhB/Z1)oQ_h(7VlS[bHGga33tYJ/0Za\t=(n^@I5doM=6/*hN)tg7O2lBr:o[8[a0.
%NWh(/[12.$ctZNB$O(WXU5,BMir-al>ldV(rY:sZV[TGi@1:A/#s:$8M;`P)aU$TrS$1Ef4,J&kfDm[Z5I5Ada^,Q?I<KUtG8A@G
%KWcXG"`51U.K9"@]%3k''O5RR[c)g?F-+pYT7&+e)A"h]6Mq&eQE1b`>VZKqTZTEl=>#`A@>6?q9'Sd>^VuWi%0"gnN:Hbb*MmTe
%_h?inYV/ucj!Pb`m_M@kg9'>Oj$)>Ch_#UEeI"%4Vj5T[QMB2,IB-fUGhQeKrsGe/"S&gtN&dtO.B25lp!WJm!m2d$"iS</71KgY
%&]+Fm.XuH1Ae?:bmm&f31l#/"VnEa.jip[\kI%9)=;Mfd>`j[i;P8UChC)euOP2C]?EG*?@1#sH,T@D+4qtpF;^L,=lbQt;!6T*^
%^uFC!Q81EL;MO/1q,MPE7!$DoG/^rkV,7jJZ_U,"HEtb*Pgc*eJ!78`]0TM"dSOAGJ0H3Wd8H;PED7rcjsmn\Z1JV/BrqeqZs\$r
%Y-Ha3c_o<SfCGgYXYLRYV]DCJ4i1FtkO""r:]'MG?X[g4ESC=C#XiB!:sHm/+WCSA&G%@WJc\=bS04:*WR)`7*IrsL4%'OJOCF-H
%>C^65!2:s8-WlK\.pV(ZE.\8(-FaNrUecWLj[+se!j>FXiAo+sL['.Tkm"DQm]YoHXDc(Wnm4X_Pn>E[WF^f+ij)p1CgT,C+P0W,
%#jG:U0)kK&LUqjrYPeNY$ntOZ+%#oXejfp/(#uUhM4Upecsl.a4A;N_TWFZRn;.X[HPS7L)YRSLhu1%oq0VYdJE"GlQ`S4Nnddfo
%'MVoalbWnpL:_NmE?G/XCRcHp4SR`pN6/Y75O;!0m:W-Rqa5Nk+VM*N2H0j!Qi=:+'[0eu>",A_.$Z7FKGU60IY3XH#*8#-+QB9P
%i)s$N0+"4&)ktO\!G%laJACB362]:Opn%%+A-V\S-eQd$quMYm%+%8V+X!h;StKf^MMNsSC]_];+<g\+`^M(Z%44JOc8oipqN0oZ
%ZTQNu:l\ara]]`)D'EE0Lg*n:!7SWbL(L#e15OAY`nMCMIQjoa]U-Ch.!ugYQI^B;nbM#d]Q\k`C,eC!pY"H=L?\f!Q?>8tadlH0
%pdE:;;*_/R-0W\ZnTn+kaDtO9AnK0dA_KmFh?QCs!:a5ZLlMKq7$tH8lP7<RA6(7]dJFP[&"6$D$92K%!Z2ZpfSrb,0P?nFE>SkJ
%nfi'AO@>*Vm":#&DY+%J/-&='Tn?3E:`XOM`5aR7_0Y:q<e<iNhN@E0.(3a%$0t<c^W?qc0Ef,T]8I/\#U7gsg.$%?-+Woa9#a/!
%hFIo`PnCni@^Ci&]t]cGggH;g5<Q#q]X*<9Y#"Y$jmuUsrVS1IN(-/BDCN)8rt&R"rrocIFb@C;dR"@.bWd;idZN.[2pcM#PsNVd
%MLPqDV6^P(1;:'Q<+3Ne;N1m,l_@Xa1mNUr<9<Kc(hmqe2:0=kWnpi.k?8aR<(mu;K.c[Oh/`r/_X$-WGmRK&*PNMk#MZM*"1nfd
%!C1+_-=:mrBLJU[o?;r`W%+IVPY_Z9b42rC#*"1c.X@?qD"6PG(.CnR7'Nd+dVK1lH7OUriO0(sYD/[19-<WaD\n:G-a4&7a,SF>
%Nptp(JZE5YI,&@arsJ&m\Z0[TK=RuEjAaSZ:VBWr9Zpdd=>2,O>]lZi7f_9LVBS!$=>@$<YV_7C#1I`\,p7N.\eH9TIVZPJr.kXa
%`/.8<>:;dIptI&t<@n1^94JQC'L.8PCe[1)g\gnpjuV*m'rMRV-SM19P@AN*d!&m4;J6+],b7VIn'64[(R55k+GX3Ni58jNVcb-\
%ZF\6O[ojd^KPckeK1(4E5YLpkZskBF2q_06Io1N.jG7Y;#@hOm]CbWto_qTm<W_[L%F8c2mqgsRqqH;+O,&/UoA@#.?N9!Y^\bq+
%rhoVMs6cNYnb's&o;B?NqfW!ipb.-po:Q$J?iKgb^]3OO^]3,^s7MHQlVG:nnXogFTE";>s7W@?\c26ETE"J[J,Qj+rl^p_q:GZ:
%ci4piI^FRnLHk^mhuCaSs6fmgI/!dg~>
%AI9_PrivateDataEnd
